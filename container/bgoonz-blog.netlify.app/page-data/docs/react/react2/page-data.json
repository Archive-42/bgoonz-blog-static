{"componentChunkName":"component---src-templates-docs-js","path":"/docs/react/react2/","result":{"data":{"sitePage":{"id":"SitePage /docs/react/react2/"}},"pageContext":{"url":"/docs/react/react2/","relativePath":"docs/react/react2.md","relativeDir":"docs/react","base":"react2.md","name":"react2","frontmatter":{"title":"Intro To React","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h1>Introduction to React for Complete Beginners</h1>\n<p>All of the code examples below will be included a second time at the bottom of this article as an embedded gist.</p>\n<hr>\n<h3>Introduction to React for Complete Beginners</h3>\n<p>All of the code examples below will be included a second time at the bottom of this article as an embedded gist, so that it is properly syntax highlighted.</p>\n<p>React uses a syntax extension of JavaScript called JSX that allows you to write HTML directly within JavaScript.</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/1200/0*Olfj44MF6WSzvlSM.png\" class=\"graf-image\" /></figure>\n<h3>React</h3>\n<blockquote>\n<p><em>React uses a syntax extension of JavaScript called JSX that allows you to write HTML directly within JavaScript</em></p>\n</blockquote>\n<blockquote>\n<p><em>because JSX is a syntactic extension of JavaScript, you can actually write JavaScript directly within JSX</em></p>\n</blockquote>\n<blockquote>\n<p><em>include the code you want to be treated as JavaScript within curly braces: { ‘this is treated as JavaScript code’ }</em></p>\n</blockquote>\n<blockquote>\n<p><em>JSX code must be compiled into JavaScript</em></p>\n</blockquote>\n<blockquote>\n<p><em>under the hood the challenges are calling ReactDOM.render (JSX, document.getElementById(‘root’))</em></p>\n</blockquote>\n<blockquote>\n<p><em>One important thing to know about nested JSX is that it must return a single element.</em></p>\n</blockquote>\n<blockquote>\n<p><em>For instance, several JSX elements written as siblings with no parent wrapper element will not transpile.</em></p>\n</blockquote>\n<hr>\n<h3>From the React Docs:</h3>\n<h3>What is React?</h3>\n<p>React is a declarative, efficient, and flexible JavaScript library for building user interfaces. It lets you compose complex UIs from small and isolated pieces of code called “components”.</p>\n<p>React has a few different kinds of components, but we’ll start with <code>React.Component</code> subclasses:</p>\n<pre><code>class ShoppingList extends React.Component {\n  render() {\n    return (\n      &#x3C;div className=\"shopping-list\">\n        &#x3C;h1>Shopping List for {this.props.name}&#x3C;/h1>\n        &#x3C;ul>\n          &#x3C;li>Instagram&#x3C;/li>\n          &#x3C;li>WhatsApp&#x3C;/li>\n          &#x3C;li>Oculus&#x3C;/li>\n        &#x3C;/ul>\n      &#x3C;/div>\n    );\n  }\n}\n\n// Example usage: &#x3C;ShoppingList name=\"Mark\" />\n</code></pre>\n<p>We’ll get to the funny XML-like tags soon. We use components to tell React what we want to see on the screen. When our data changes, React will efficiently update and re-render our components.</p>\n<p>Here, ShoppingList is a <strong>React component class</strong>, or <strong>React component type</strong>. A component takes in parameters, called <code>props</code> (short for “properties”), and returns a hierarchy of views to display via the <code>render</code> method.</p>\n<p>The <code>render</code> method returns a <em>description</em> of what you want to see on the screen. React takes the description and displays the result. In particular, <code>render</code> returns a <strong>React element</strong>, which is a lightweight description of what to render. Most React developers use a special syntax called “JSX” which makes these structures easier to write. The <code>&#x3C;div /></code> syntax is transformed at build time to <code>React.createElement('div')</code>. The example above is equivalent to:</p>\n<pre><code>return React.createElement('div', {className: 'shopping-list'},\n  React.createElement('h1', /* ... h1 children ... */),\n  React.createElement('ul', /* ... ul children ... */)\n);\n</code></pre>\n<hr>\n<h3>Valid JSX:</h3>\n<pre><code>&#x3C;div>\n  &#x3C;p>Paragraph One&#x3C;/p>\n  &#x3C;p>Paragraph Two&#x3C;/p>\n  &#x3C;p>Paragraph Three&#x3C;/p>\n&#x3C;/div>\n</code></pre>\n<hr>\n<h3>Invalid JSX:</h3>\n<pre><code>&#x3C;p>Paragraph One&#x3C;/p>\n&#x3C;p>Paragraph Two&#x3C;/p>\n&#x3C;p>Paragraph Three&#x3C;/p>\n</code></pre>\n<h4>To put comments inside JSX, you use the syntax {/* */} to wrap around the comment text.</h4>\n<p>To put comments inside JSX, you use the syntax {/* */} to wrap around the comment text.</p>\n<p>The code editor has a JSX element similar to what you created in the last challenge. Add a comment somewhere within the provided div element, without modifying the existing h1 or p elements.</p>\n<pre><code>const JSX = (\n  &#x3C;div>\n  {/* This is a comment */}\n    &#x3C;h1>This is a block of JSX&#x3C;/h1>\n    &#x3C;p>Here's a subtitle&#x3C;/p>\n  &#x3C;/div>\n);\n</code></pre>\n<hr>\n<blockquote>\n<p><em>With React, we can render this JSX directly to the HTML DOM using React’s rendering API known as ReactDOM.</em></p>\n</blockquote>\n<blockquote>\n<p><em>ReactDOM offers a simple method to render React elements to the DOM which looks like this:</em></p>\n</blockquote>\n<p><code>ReactDOM.render(componentToRender, targetNode)</code></p>\n<ul>\n<li><span id=\"f724\">the first argument is the React element or component that you want to render,</span></li>\n<li><span id=\"7093\">and the second argument is the DOM node that you want to render the component to.</span></li>\n</ul>\n<blockquote>\n<p><em>ReactDOM.render() must be called after the JSX element declarations, just like how you must declare variables before using them.</em></p>\n</blockquote>\n<blockquote>\n<p><em>key difference in JSX is that you can no longer use the word class to define HTML classes.</em></p>\n</blockquote>\n<ul>\n<li><span id=\"aafc\">— -> This is because class is a reserved word in JavaScript. Instead, JSX uses className</span></li>\n</ul>\n<blockquote>\n<p><em>the naming convention for all HTML attributes and event references in JSX become camelCase</em></p>\n</blockquote>\n<blockquote>\n<p><em>a click event in JSX is onClick, instead of onclick. Likewise, onchange becomes onChange. While this is a subtle difference, it is an important one to keep in mind moving forward.</em></p>\n</blockquote>\n<h3>Apply a class of myDiv to the div provided in the JSX code.</h3>\n<ul>\n<li><span id=\"9500\">The constant JSX should return a div element.</span></li>\n<li><span id=\"8d42\">The div should have a class of myDiv.</span></li>\n</ul>\n<!-- -->\n<pre><code>const JSX = (\n  &#x3C;div>\n    &#x3C;h1>Add a class to this div&#x3C;/h1>\n  &#x3C;/div>\n);\n</code></pre>\n<h3>Ans:</h3>\n<pre><code>const JSX = (\n  &#x3C;div className=\"myDiv\">\n    &#x3C;h1>Add a class to this div&#x3C;/h1>\n  &#x3C;/div>\n);\n</code></pre>\n<h3>React: Learn About Self-Closing JSX Tags</h3>\n<p>-Another important way in which JSX differs from HTML is in the idea of the self-closing tag.</p>\n<blockquote>\n<p><em>In HTML, almost all tags have both an opening and closing tag:</em> <code>&#x3C;div>&#x3C;/div>;</code> <em>the closing tag always has a forward slash before the tag name that you are closing.</em></p>\n</blockquote>\n<blockquote>\n<p><em>there are special instances in HTML called “self-closing tags”, or tags that don’t require both an opening and closing tag before another tag can start.</em></p>\n</blockquote>\n<blockquote>\n<p><em>For example the line-break tag can be written as</em> <code>&#x3C;br></code> <em>or as</em> <code>&#x3C;br />,</code> <em>but should never be written as</em> <code>&#x3C;br>&#x3C;/br></code><em>, since it doesn't contain any content.</em></p>\n</blockquote>\n<blockquote>\n<p><em>In JSX, the rules are a little different. Any JSX element can be written with a self-closing tag, and every element must be closed.<br>\nThe line-break tag, for example, must always be written as</em> <code>&#x3C;br /></code> <em>in order to be valid JSX that can be transpiled.<br>\nA</em> <code>&#x3C;div></code><em>, on the other hand, can be written as</em> <code>&#x3C;div /></code><em>or</em><code>&#x3C;div>&#x3C;/div></code><em>.<br>\nThe difference is that in the first syntax version there is no way to include anything in the</em> <code>&#x3C;div /></code><em>.</em></p>\n</blockquote>\n<h3>Fix the errors in the code editor so that it is valid JSX and successfully transpiles. Make sure you don’t change any of the content — you only need to close tags where they are needed.</h3>\n<pre><code>const JSX = (\n  &#x3C;div>\n    &#x3C;h2>Welcome to React!&#x3C;/h2> &#x3C;br >\n    &#x3C;p>Be sure to close all tags!&#x3C;/p>\n    &#x3C;hr >\n  &#x3C;/div>\n);\n</code></pre>\n<h3>Ans:</h3>\n<pre><code>const JSX = (\n  &#x3C;div>\n    &#x3C;h2>Welcome to React!&#x3C;/h2> &#x3C;br />\n    &#x3C;p>Be sure to close all tags!&#x3C;/p>\n    &#x3C;hr />\n  &#x3C;/div>\n);\n</code></pre>\n<hr>\n<h3>React: Create a Stateless Functional Component</h3>\n<blockquote>\n<p><em>There are two ways to create a React component. The first way is to use a JavaScript function.</em></p>\n</blockquote>\n<blockquote>\n<p><em>Defining a component in this way creates a stateless functional component.</em></p>\n</blockquote>\n<blockquote>\n<p><em>think of a stateless component as one that can receive data and render it, but does not manage or track changes to that data.</em></p>\n</blockquote>\n<h4>To create a component with a function, you simply write a JavaScript function that returns either JSX or null</h4>\n<ul>\n<li><span id=\"b514\">React requires your function name to begin with a capital letter.</span></li>\n</ul>\n<blockquote>\n<p><em>Here’s an example of a stateless functional component that assigns an HTML class in JSX:</em></p>\n</blockquote>\n<pre><code>// After being transpiled, the &#x3C;div> will have a CSS class of 'customClass'\nconst DemoComponent = function() {\n  return (\n    &#x3C;div className='customClass' />\n  );\n};\n</code></pre>\n<blockquote>\n<p><em>Because a JSX component represents HTML, you could put several components together to create a more complex HTML page.</em></p>\n</blockquote>\n<h3>The code editor has a function called MyComponent. Complete this function so it returns a single div element which contains some string of text.</h3>\n<p>Note: The text is considered a child of the div element, so you will not be able to use a self-closing tag.</p>\n<pre><code>const MyComponent = function() {\n  // Change code below this line\n\n  // Change code above this line\n}\n</code></pre>\n<h3>ANS:</h3>\n<pre><code>const MyComponent = function() {\n  // Change code below this line\n\nreturn (\n   &#x3C;div> Some Text &#x3C;/div >\n  );\n\n  // Change code above this line\n};\n</code></pre>\n<hr>\n<h3>React: Create a React Component</h3>\n<blockquote>\n<p><em>The other way to define a React component is with the ES6 class syntax. In the following example, Kitten extends React.Component:</em></p>\n</blockquote>\n<pre><code>class Kitten extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      &#x3C;h1>Hi&#x3C;/h1>\n    );\n  }\n}\n</code></pre>\n<blockquote>\n<p><em>This creates an ES6 class Kitten which extends the React.Component class.</em></p>\n</blockquote>\n<blockquote>\n<p><em>So the Kitten class now has access to many useful React features, such as local state and lifecycle hooks.</em></p>\n</blockquote>\n<blockquote>\n<p><em>Also notice the Kitten class has a constructor defined within it that calls super()</em></p>\n</blockquote>\n<blockquote>\n<p><em>It uses super() to call the constructor of the parent class, in this case React.Component</em></p>\n</blockquote>\n<blockquote>\n<p><em>The constructor is a special method used during the initialization of objects that are created with the class keyword. It is best practice to call a component’s constructor with super, and pass props to both.</em></p>\n</blockquote>\n<blockquote>\n<p><em>This makes sure the component is initialized properly. For now, know that it is standard for this code to be included.</em></p>\n</blockquote>\n<h3>MyComponent is defined in the code editor using class syntax. Finish writing the render method so it returns a div element that contains an h1 with the text Hello React!.</h3>\n<pre><code>class MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    // Change code below this line\n\n    // Change code above this line\n  }\n};\n</code></pre>\n<h3>ANS:</h3>\n<pre><code>class MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    // Change code below this line\n return (\n   &#x3C;div>\n      &#x3C;h1>Hello React!&#x3C;/h1>\n      &#x3C;/div>\n    );\n\n    // Change code above this line\n  }\n};\n</code></pre>\n<hr>\n<h3>React: Create a Component with Composition</h3>\n<blockquote>\n<p><em>Imagine you are building an App and have created three components, a Navbar, Dashboard, and Footer.</em></p>\n</blockquote>\n<blockquote>\n<p><em>To compose these components together, you could create an App parent component which renders each of these three components as children. To render a component as a child in a React component, you include the component name written as a custom HTML tag in the JSX.</em></p>\n</blockquote>\n<ul>\n<li><span id=\"000b\">For example, in the render method you could write:</span></li>\n</ul>\n<!-- -->\n<pre><code>return (\n &#x3C;App>\n  &#x3C;Navbar />\n  &#x3C;Dashboard />\n  &#x3C;Footer />\n &#x3C;/App>\n)\n</code></pre>\n<blockquote>\n<p><em>When React encounters a custom HTML tag that references another component (a component name wrapped in &#x3C; /> like in this example), it renders the markup for that component in the location of the tag. This should illustrate the parent/child relationship between the App component and the Navbar, Dashboard, and Footer.</em></p>\n</blockquote>\n<h3>Challenge:</h3>\n<blockquote>\n<p><em>In the code editor, there is a simple functional component called ChildComponent and a class component called ParentComponent. Compose the two together by rendering the ChildComponent within the ParentComponent. Make sure to close the ChildComponent tag with a forward slash.</em></p>\n</blockquote>\n<ul>\n<li><span id=\"2ed5\">Note:<strong>ChildComponent is defined with an ES6 arrow function because this is a very common practice when using React</strong>.</span></li>\n<li><span id=\"fddd\">However, know that this is just a function.</span></li>\n</ul>\n<!-- -->\n<pre><code>const ChildComponent = () => {\n  return (\n    &#x3C;div>\n      &#x3C;p>I am the child&#x3C;/p>\n    &#x3C;/div>\n  );\n};\n\nclass ParentComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      &#x3C;div>\n        &#x3C;h1>I am the parent&#x3C;/h1>\n        { /* Change code below this line */ }\n\n        { /* Change code above this line */ }\n      &#x3C;/div>\n    );\n  }\n};\n</code></pre>\n<p>⌛The React component should return a single div element.<br>\n⌛The component should return two nested elements.<br>\n⌛The component should return the ChildComponent as its second child.</p>\n<h3>Ans:</h3>\n<pre><code>const ChildComponent = () => {\n  return (\n    &#x3C;div>\n      &#x3C;p>I am the child&#x3C;/p>\n    &#x3C;/div>\n  );\n};\n\nclass ParentComponent extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      &#x3C;div>\n        &#x3C;h1>I am the parent&#x3C;/h1>\n        { /* Change code below this line */ }\n\n        { /* Change code above this line */ }\n      &#x3C;/div>\n    );\n  }\n};\n</code></pre>\n<h3>More Examples:</h3>\n<p>For more content follow me on GitHub:</p>\n<p><a href=\"https://github.com/bgoonz\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/bgoonz\"><strong>bgoonz - Overview</strong><br />\n<em>Web Developer, Electrical Engineer https://bryanguner.medium.com/ https://portfolio42.netlify.app/…</em>github.com</a><a href=\"https://github.com/bgoonz\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<p><em>More content at</em> <a href=\"http://plainenglish.io/\" class=\"markup--anchor markup--p-anchor\"><em>plainenglish.io</em></a></p>\n<p>By <a href=\"https://medium.com/@bryanguner\" class=\"p-author h-card\">Bryan Guner</a> on <a href=\"https://medium.com/p/8021738aa1ad\">May 19, 2021</a>.</p>\n<p><a href=\"https://medium.com/@bryanguner/introduction-to-react-for-complete-beginners-8021738aa1ad\" class=\"p-canonical\">Canonical link</a></p>\n<p>Exported from <a href=\"https://medium.com\">Medium</a> on May 23, 2021.</p>\n<h1>Snippets:</h1>\n<p>Renders an accordion menu with multiple collapsible content elements.</p>\n<ul>\n<li>Define an <code>AccordionItem</code> component, that renders a <code>&lt;button&gt;</code> which is used to update the component and notify its parent via the <code>handleClick</code> callback.</li>\n<li>Use the <code>isCollapsed</code> prop in <code>AccordionItem</code> to determine its appearance and set an appropriate <code>className</code>.</li>\n<li>Define an <code>Accordion</code> component that uses the <code>useState()</code> hook to initialize the value of the <code>bindIndex</code> state variable to <code>defaultIndex</code>.</li>\n<li>Filter <code>children</code> to remove unnecessary nodes except for <code>AccordionItem</code> by identifying the function’s name.</li>\n<li>Use <code>Array.prototype.map()</code> on the collected nodes to render the individual collapsible elements.</li>\n<li>Define <code>changeItem</code>, which will be executed when clicking an <code>AccordionItem</code>’s <code>&lt;button&gt;</code>.</li>\n<li><code>changeItem</code> executes the passed callback, <code>onItemClick</code>, and updates <code>bindIndex</code> based on the clicked element.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb1\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb1-1\" title=\"1\"><span class=\"fu\">.accordion-item.collapsed</span> {</a>\n<a class=\"sourceLine\" id=\"cb1-2\" title=\"2\">  <span class=\"kw\">display</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb1-3\" title=\"3\">}</a>\n<a class=\"sourceLine\" id=\"cb1-4\" title=\"4\"></a>\n<a class=\"sourceLine\" id=\"cb1-5\" title=\"5\"><span class=\"fu\">.accordion-item.expanded</span> {</a>\n<a class=\"sourceLine\" id=\"cb1-6\" title=\"6\">  <span class=\"kw\">display</span>: <span class=\"dv\">block</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb1-7\" title=\"7\">}</a>\n<a class=\"sourceLine\" id=\"cb1-8\" title=\"8\"></a>\n<a class=\"sourceLine\" id=\"cb1-9\" title=\"9\"><span class=\"fu\">.accordion-button</span> {</a>\n<a class=\"sourceLine\" id=\"cb1-10\" title=\"10\">  <span class=\"kw\">display</span>: <span class=\"dv\">block</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb1-11\" title=\"11\">  <span class=\"kw\">width</span>: <span class=\"dv\">100</span><span class=\"dt\">%</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb1-12\" title=\"12\">}</a>\n</div>\n<pre><code class=\"language-js\">const AccordionItem = ({ label, isCollapsed, handleClick, children }) =&#x26;gt; {\n  return (\n    &#x26;lt;&#x26;gt;\n      &#x26;lt;button className=&#x26;quot;accordion-button&#x26;quot; onClick={handleClick}&#x26;gt;\n        {label}\n      &#x26;lt;/button&#x26;gt;\n      &#x26;lt;div\n        className={`accordion-item ${isCollapsed ? &#x26;quot;collapsed&#x26;quot; : &#x26;quot;expanded&#x26;quot;}`}\n        aria-expanded={isCollapsed}\n      &#x26;gt;\n        {children}\n      &#x26;lt;/div&#x26;gt;\n    &#x26;lt;/&#x26;gt;\n  );\n};\n\nconst Accordion = ({ defaultIndex, onItemClick, children }) =&#x26;gt; {\nconst [bindIndex, setBindIndex] = React.useState(defaultIndex);\n\nconst changeItem = (itemIndex) =&#x26;gt; {\nif (typeof onItemClick === &#x26;quot;function&#x26;quot;) onItemClick(itemIndex);\nif (itemIndex !== bindIndex) setBindIndex(itemIndex);\n};\nconst items = children.filter((item) =&#x26;gt; item.type.name === &#x26;quot;AccordionItem&#x26;quot;);\n\nreturn (\n&#x26;lt;&#x26;gt;\n{items.map(({ props }) =&#x26;gt; (\n&#x26;lt;AccordionItem\nisCollapsed={bindIndex !== props.index}\nlabel={props.label}\nhandleClick={() =&#x26;gt; changeItem(props.index)}\nchildren={props.children}\n/&#x26;gt;\n))}\n&#x26;lt;/&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(\n  &#x26;lt;Accordion defaultIndex=&#x26;quot;1&#x26;quot; onItemClick={console.log}&#x26;gt;\n    &#x26;lt;AccordionItem label=&#x26;quot;A&#x26;quot; index=&#x26;quot;1&#x26;quot;&#x26;gt;\n      Lorem ipsum\n    &#x26;lt;/AccordionItem&#x26;gt;\n    &#x26;lt;AccordionItem label=&#x26;quot;B&#x26;quot; index=&#x26;quot;2&#x26;quot;&#x26;gt;\n      Dolor sit amet\n    &#x26;lt;/AccordionItem&#x26;gt;\n  &#x26;lt;/Accordion&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders an alert component with <code>type</code> prop.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create the <code>isShown</code> and <code>isLeaving</code> state variables and set both to <code>false</code> initially.</li>\n<li>Define <code>timeoutId</code> to keep the timer instance for clearing on component unmount.</li>\n<li>Use the <code>useEffect()</code> hook to update the value of <code>isShown</code> to <code>true</code> and clear the interval by using <code>timeoutId</code> when the component is unmounted.</li>\n<li>Define a <code>closeAlert</code> function to set the component as removed from the DOM by displaying a fading out animation and set <code>isShown</code> to <code>false</code> via <code>setTimeout()</code>.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb4\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb4-1\" title=\"1\"><span class=\"im\">@keyframes</span> leave {</a>\n<a class=\"sourceLine\" id=\"cb4-2\" title=\"2\">  <span class=\"dv\">0%</span> {</a>\n<a class=\"sourceLine\" id=\"cb4-3\" title=\"3\">    <span class=\"kw\">opacity</span>: <span class=\"dv\">1</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-4\" title=\"4\">  }</a>\n<a class=\"sourceLine\" id=\"cb4-5\" title=\"5\">  <span class=\"dv\">100%</span> {</a>\n<a class=\"sourceLine\" id=\"cb4-6\" title=\"6\">    <span class=\"kw\">opacity</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-7\" title=\"7\">  }</a>\n<a class=\"sourceLine\" id=\"cb4-8\" title=\"8\">}</a>\n<a class=\"sourceLine\" id=\"cb4-9\" title=\"9\"></a>\n<a class=\"sourceLine\" id=\"cb4-10\" title=\"10\"><span class=\"fu\">.alert</span> {</a>\n<a class=\"sourceLine\" id=\"cb4-11\" title=\"11\">  <span class=\"kw\">padding</span>: <span class=\"dv\">0.75</span><span class=\"dt\">rem</span> <span class=\"dv\">0.5</span><span class=\"dt\">rem</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-12\" title=\"12\">  <span class=\"kw\">margin-bottom</span>: <span class=\"dv\">0.5</span><span class=\"dt\">rem</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-13\" title=\"13\">  <span class=\"kw\">text-align</span>: <span class=\"dv\">left</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-14\" title=\"14\">  <span class=\"kw\">padding-right</span>: <span class=\"dv\">40</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-15\" title=\"15\">  <span class=\"kw\">border-radius</span>: <span class=\"dv\">4</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-16\" title=\"16\">  <span class=\"kw\">font-size</span>: <span class=\"dv\">16</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-17\" title=\"17\">  <span class=\"kw\">position</span>: <span class=\"dv\">relative</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-18\" title=\"18\">}</a>\n<a class=\"sourceLine\" id=\"cb4-19\" title=\"19\"></a>\n<a class=\"sourceLine\" id=\"cb4-20\" title=\"20\"><span class=\"fu\">.alert.warning</span> {</a>\n<a class=\"sourceLine\" id=\"cb4-21\" title=\"21\">  <span class=\"kw\">color</span>: <span class=\"cn\">#856404</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-22\" title=\"22\">  <span class=\"kw\">background-color</span>: <span class=\"cn\">#fff3cd</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-23\" title=\"23\">  <span class=\"kw\">border-color</span>: <span class=\"cn\">#ffeeba</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-24\" title=\"24\">}</a>\n<a class=\"sourceLine\" id=\"cb4-25\" title=\"25\"></a>\n<a class=\"sourceLine\" id=\"cb4-26\" title=\"26\"><span class=\"fu\">.alert.error</span> {</a>\n<a class=\"sourceLine\" id=\"cb4-27\" title=\"27\">  <span class=\"kw\">color</span>: <span class=\"cn\">#721c24</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-28\" title=\"28\">  <span class=\"kw\">background-color</span>: <span class=\"cn\">#f8d7da</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-29\" title=\"29\">  <span class=\"kw\">border-color</span>: <span class=\"cn\">#f5c6cb</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-30\" title=\"30\">}</a>\n<a class=\"sourceLine\" id=\"cb4-31\" title=\"31\"></a>\n<a class=\"sourceLine\" id=\"cb4-32\" title=\"32\"><span class=\"fu\">.alert.leaving</span> {</a>\n<a class=\"sourceLine\" id=\"cb4-33\" title=\"33\">  <span class=\"kw\">animation</span>: leave <span class=\"dv\">0.5</span><span class=\"dt\">s</span> <span class=\"dv\">forwards</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-34\" title=\"34\">}</a>\n<a class=\"sourceLine\" id=\"cb4-35\" title=\"35\"></a>\n<a class=\"sourceLine\" id=\"cb4-36\" title=\"36\"><span class=\"fu\">.alert</span> <span class=\"fu\">.close</span> {</a>\n<a class=\"sourceLine\" id=\"cb4-37\" title=\"37\">  <span class=\"kw\">position</span>: <span class=\"dv\">absolute</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-38\" title=\"38\">  <span class=\"kw\">top</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-39\" title=\"39\">  <span class=\"kw\">right</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-40\" title=\"40\">  <span class=\"kw\">padding</span>: <span class=\"dv\">0</span> <span class=\"dv\">0.75</span><span class=\"dt\">rem</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-41\" title=\"41\">  <span class=\"kw\">color</span>: <span class=\"cn\">#333</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-42\" title=\"42\">  <span class=\"kw\">border</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-43\" title=\"43\">  <span class=\"kw\">height</span>: <span class=\"dv\">100</span><span class=\"dt\">%</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-44\" title=\"44\">  <span class=\"kw\">cursor</span>: <span class=\"dv\">pointer</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-45\" title=\"45\">  <span class=\"kw\">background</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-46\" title=\"46\">  <span class=\"kw\">font-weight</span>: <span class=\"dv\">600</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-47\" title=\"47\">  <span class=\"kw\">font-size</span>: <span class=\"dv\">16</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-48\" title=\"48\">}</a>\n<a class=\"sourceLine\" id=\"cb4-49\" title=\"49\"></a>\n<a class=\"sourceLine\" id=\"cb4-50\" title=\"50\"><span class=\"fu\">.alert</span> <span class=\"fu\">.close</span><span class=\"in\">:after</span> {</a>\n<a class=\"sourceLine\" id=\"cb4-51\" title=\"51\">  <span class=\"kw\">content</span>: <span class=\"st\">&quot;x&quot;</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb4-52\" title=\"52\">}</a>\n</div>\n<pre><code class=\"language-js\">const Alert = ({ isDefaultShown = false, timeout = 250, type, message }) =&#x26;gt; {\n  const [isShown, setIsShown] = React.useState(isDefaultShown);\n  const [isLeaving, setIsLeaving] = React.useState(false);\n\nlet timeoutId = null;\n\nReact.useEffect(() =&#x26;gt; {\nsetIsShown(true);\nreturn () =&#x26;gt; {\nclearTimeout(timeoutId);\n};\n}, [isDefaultShown, timeout, timeoutId]);\n\nconst closeAlert = () =&#x26;gt; {\nsetIsLeaving(true);\ntimeoutId = setTimeout(() =&#x26;gt; {\nsetIsLeaving(false);\nsetIsShown(false);\n}, timeout);\n};\n\nreturn (\nisShown &#x26;amp;&#x26;amp; (\n&#x26;lt;div\nclassName={`alert ${type} ${isLeaving ? &#x26;quot;leaving&#x26;quot; : &#x26;quot;&#x26;quot;}`}\nrole=&#x26;quot;alert&#x26;quot;\n&#x26;gt;\n&#x26;lt;button className=&#x26;quot;close&#x26;quot; onClick={closeAlert} /&#x26;gt;\n{message}\n&#x26;lt;/div&#x26;gt;\n)\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(\n  &#x26;lt;Alert type=&#x26;quot;info&#x26;quot; message=&#x26;quot;This is info&#x26;quot; /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a string as plaintext, with URLs converted to appropriate link elements.</p>\n<ul>\n<li>Use <code>String.prototype.split()</code> and <code>String.prototype.match()</code> with a regular expression to find URLs in a string.</li>\n<li>Return matched URLs rendered as <code>&lt;a&gt;</code> elements, dealing with missing protocol prefixes if necessary.</li>\n<li>Render the rest of the string as plaintext.</li>\n</ul>\n<pre><code class=\"language-js\">const AutoLink = ({ text }) =&#x26;gt; {\n  const delimiter =\n    /((?:https?:\\/\\/)?(?:(?:[a-z0-9]?(?:[a-z0-9\\-]{1,61}[a-z0-9])?\\.[^\\.|\\s])+[a-z\\.]*[a-z]+|(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3})(?::\\d{1,5})*[a-z0-9.,_\\/~#&#x26;amp;=;%+?\\-\\\\(\\\\)]*)/gi;\n\nreturn (\n&#x26;lt;&#x26;gt;\n{text.split(delimiter).map((word) =&#x26;gt; {\nconst match = word.match(delimiter);\nif (match) {\nconst url = match[0];\nreturn (\n&#x26;lt;a href={url.startsWith(&#x26;quot;http&#x26;quot;) ? url : `http://${url}`}&#x26;gt;{url}&#x26;lt;/a&#x26;gt;\n);\n}\nreturn word;\n})}\n&#x26;lt;/&#x26;gt;\n);\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">ReactDOM.render(\n  &#x26;lt;AutoLink text=&#x26;quot;foo bar baz http://example.org bar&#x26;quot; /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a link formatted to call a phone number (<code>tel:</code> link).</p>\n<ul>\n<li>Use <code>phone</code> to create a <code>&lt;a&gt;</code> element with an appropriate <code>href</code> attribute.</li>\n<li>Render the link with <code>children</code> as its content.</li>\n</ul>\n<pre><code class=\"language-js\">const Callto = ({ phone, children }) =&#x26;gt; {\n  return &#x26;lt;a href={`tel:${phone}`}&#x26;gt;{children}&#x26;lt;/a&#x26;gt;;\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">ReactDOM.render(\n  &#x26;lt;Callto phone=&#x26;quot;+302101234567&#x26;quot;&#x26;gt;Call me!&#x26;lt;/Callto&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a carousel component.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create the <code>active</code> state variable and give it a value of <code>0</code> (index of the first item).</li>\n<li>Use the <code>useEffect()</code> hook to update the value of <code>active</code> to the index of the next item, using <code>setTimeout</code>.</li>\n<li>Compute the <code>className</code> for each carousel item while mapping over them and applying it accordingly.</li>\n<li>Render the carousel items using <code>React.cloneElement()</code> and pass down <code>...rest</code> along with the computed <code>className</code>.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb11\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb11-1\" title=\"1\"><span class=\"fu\">.carousel</span> {</a>\n<a class=\"sourceLine\" id=\"cb11-2\" title=\"2\">  <span class=\"kw\">position</span>: <span class=\"dv\">relative</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb11-3\" title=\"3\">}</a>\n<a class=\"sourceLine\" id=\"cb11-4\" title=\"4\"></a>\n<a class=\"sourceLine\" id=\"cb11-5\" title=\"5\"><span class=\"fu\">.carousel-item</span> {</a>\n<a class=\"sourceLine\" id=\"cb11-6\" title=\"6\">  <span class=\"kw\">position</span>: <span class=\"dv\">absolute</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb11-7\" title=\"7\">  <span class=\"kw\">visibility</span>: <span class=\"dv\">hidden</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb11-8\" title=\"8\">}</a>\n<a class=\"sourceLine\" id=\"cb11-9\" title=\"9\"></a>\n<a class=\"sourceLine\" id=\"cb11-10\" title=\"10\"><span class=\"fu\">.carousel-item.visible</span> {</a>\n<a class=\"sourceLine\" id=\"cb11-11\" title=\"11\">  <span class=\"kw\">visibility</span>: <span class=\"dv\">visible</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb11-12\" title=\"12\">}</a>\n</div>\n<pre><code class=\"language-js\">const Carousel = ({ carouselItems, ...rest }) =&#x26;gt; {\n  const [active, setActive] = React.useState(0);\n  let scrollInterval = null;\n\nReact.useEffect(() =&#x26;gt; {\nscrollInterval = setTimeout(() =&#x26;gt; {\nsetActive((active + 1) % carouselItems.length);\n}, 2000);\nreturn () =&#x26;gt; clearTimeout(scrollInterval);\n});\n\nreturn (\n&#x26;lt;div className=&#x26;quot;carousel&#x26;quot;&#x26;gt;\n{carouselItems.map((item, index) =&#x26;gt; {\nconst activeClass = active === index ? &#x26;quot; visible&#x26;quot; : &#x26;quot;&#x26;quot;;\nreturn React.cloneElement(item, {\n...rest,\nclassName: `carousel-item${activeClass}`,\n});\n})}\n&#x26;lt;/div&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(\n  &#x26;lt;Carousel\n    carouselItems={[\n      &#x26;lt;div&#x26;gt;carousel item 1&#x26;lt;/div&#x26;gt;,\n      &#x26;lt;div&#x26;gt;carousel item 2&#x26;lt;/div&#x26;gt;,\n      &#x26;lt;div&#x26;gt;carousel item 3&#x26;lt;/div&#x26;gt;,\n    ]}\n  /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a component with collapsible content.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create the <code>isCollapsed</code> state variable with an initial value of <code>collapsed</code>.</li>\n<li>Use the <code>&lt;button&gt;</code> to change the component’s <code>isCollapsed</code> state and the content of the component, passed down via <code>children</code>.</li>\n<li>Determine the appearance of the content, based on <code>isCollapsed</code> and apply the appropriate <code>className</code>.</li>\n<li>Update the value of the <code>aria-expanded</code> attribute based on <code>isCollapsed</code> to make the component accessible.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb14\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb14-1\" title=\"1\"><span class=\"fu\">.collapse-button</span> {</a>\n<a class=\"sourceLine\" id=\"cb14-2\" title=\"2\">  <span class=\"kw\">display</span>: <span class=\"dv\">block</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb14-3\" title=\"3\">  <span class=\"kw\">width</span>: <span class=\"dv\">100</span><span class=\"dt\">%</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb14-4\" title=\"4\">}</a>\n<a class=\"sourceLine\" id=\"cb14-5\" title=\"5\"></a>\n<a class=\"sourceLine\" id=\"cb14-6\" title=\"6\"><span class=\"fu\">.collapse-content.collapsed</span> {</a>\n<a class=\"sourceLine\" id=\"cb14-7\" title=\"7\">  <span class=\"kw\">display</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb14-8\" title=\"8\">}</a>\n<a class=\"sourceLine\" id=\"cb14-9\" title=\"9\"></a>\n<a class=\"sourceLine\" id=\"cb14-10\" title=\"10\"><span class=\"fu\">.collapsed-content.expanded</span> {</a>\n<a class=\"sourceLine\" id=\"cb14-11\" title=\"11\">  <span class=\"kw\">display</span>: <span class=\"dv\">block</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb14-12\" title=\"12\">}</a>\n</div>\n<pre><code class=\"language-js\">const Collapse = ({ collapsed, children }) =&#x26;gt; {\n  const [isCollapsed, setIsCollapsed] = React.useState(collapsed);\n\nreturn (\n&#x26;lt;&#x26;gt;\n&#x26;lt;button\nclassName=&#x26;quot;collapse-button&#x26;quot;\nonClick={() =&#x26;gt; setIsCollapsed(!isCollapsed)}\n&#x26;gt;\n{isCollapsed ? &#x26;quot;Show&#x26;quot; : &#x26;quot;Hide&#x26;quot;} content\n&#x26;lt;/button&#x26;gt;\n&#x26;lt;div\nclassName={`collapse-content ${isCollapsed ? &#x26;quot;collapsed&#x26;quot; : &#x26;quot;expanded&#x26;quot;}`}\naria-expanded={isCollapsed}\n&#x26;gt;\n{children}\n&#x26;lt;/div&#x26;gt;\n&#x26;lt;/&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(\n  &#x26;lt;Collapse&#x26;gt;\n    &#x26;lt;h1&#x26;gt;This is a collapse&#x26;lt;/h1&#x26;gt;\n    &#x26;lt;p&#x26;gt;Hello world!&#x26;lt;/p&#x26;gt;\n  &#x26;lt;/Collapse&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a controlled <code>&lt;input&gt;</code> element that uses a callback function to inform its parent about value updates.</p>\n<ul>\n<li>Use the <code>value</code> passed down from the parent as the controlled input field’s value.</li>\n<li>Use the <code>onChange</code> event to fire the <code>onValueChange</code> callback and send the new value to the parent.</li>\n<li>The parent must update the input field’s <code>value</code> prop in order for its value to change on user input.</li>\n</ul>\n<pre><code class=\"language-js\">const ControlledInput = ({ value, onValueChange, ...rest }) =&#x26;gt; {\n  return (\n    &#x26;lt;input\n      value={value}\n      onChange={({ target: { value } }) =&#x26;gt; onValueChange(value)}\n      {...rest}\n    /&#x26;gt;\n  );\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const Form = () =&#x26;gt; {\n  const [value, setValue] = React.useState(&#x26;quot;&#x26;quot;);\n\nreturn (\n&#x26;lt;ControlledInput\ntype=&#x26;quot;text&#x26;quot;\nplaceholder=&#x26;quot;Insert some text here...&#x26;quot;\nvalue={value}\nonValueChange={setValue}\n/&#x26;gt;\n);\n};\n\nReactDOM.render(&#x26;lt;Form /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Renders a countdown timer that prints a message when it reaches zero.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create a state variable to hold the time value, initialize it from the props and destructure it into its components.</li>\n<li>Use the <code>useState()</code> hook to create the <code>paused</code> and <code>over</code> state variables, used to prevent the timer from ticking if it’s paused or the time has run out.</li>\n<li>Create a method <code>tick</code>, that updates the time values based on the current value (i.e. decreasing the time by one second).</li>\n<li>Create a method <code>reset</code>, that resets all state variables to their initial states.</li>\n<li>Use the the <code>useEffect()</code> hook to call the <code>tick</code> method every second via the use of <code>setInterval()</code> and use <code>clearInterval()</code> to clean up when the component is unmounted.</li>\n<li>Use <code>String.prototype.padStart()</code> to pad each part of the time array to two characters to create the visual representation of the timer.</li>\n</ul>\n<pre><code class=\"language-js\">const CountDown = ({ hours = 0, minutes = 0, seconds = 0 }) =&#x26;gt; {\n  const [paused, setPaused] = React.useState(false);\n  const [over, setOver] = React.useState(false);\n  const [[h, m, s], setTime] = React.useState([hours, minutes, seconds]);\n\nconst tick = () =&#x26;gt; {\nif (paused || over) return;\nif (h === 0 &#x26;amp;&#x26;amp; m === 0 &#x26;amp;&#x26;amp; s === 0) setOver(true);\nelse if (m === 0 &#x26;amp;&#x26;amp; s === 0) {\nsetTime([h - 1, 59, 59]);\n} else if (s == 0) {\nsetTime([h, m - 1, 59]);\n} else {\nsetTime([h, m, s - 1]);\n}\n};\n\nconst reset = () =&#x26;gt; {\nsetTime([parseInt(hours), parseInt(minutes), parseInt(seconds)]);\nsetPaused(false);\nsetOver(false);\n};\n\nReact.useEffect(() =&#x26;gt; {\nconst timerID = setInterval(() =&#x26;gt; tick(), 1000);\nreturn () =&#x26;gt; clearInterval(timerID);\n});\n\nreturn (\n&#x26;lt;div&#x26;gt;\n&#x26;lt;p&#x26;gt;{`${h.toString().padStart(2, &#x26;quot;0&#x26;quot;)}:${m.toString().padStart(2, &#x26;quot;0&#x26;quot;)}:${s .toString() .padStart(2, &#x26;quot;0&#x26;quot;)}`}&#x26;lt;/p&#x26;gt;\n&#x26;lt;div&#x26;gt;{over ? &#x26;quot;Time&#x26;#39;s up!&#x26;quot; : &#x26;quot;&#x26;quot;}&#x26;lt;/div&#x26;gt;\n&#x26;lt;button onClick={() =&#x26;gt; setPaused(!paused)}&#x26;gt;\n{paused ? &#x26;quot;Resume&#x26;quot; : &#x26;quot;Pause&#x26;quot;}\n&#x26;lt;/button&#x26;gt;\n&#x26;lt;button onClick={() =&#x26;gt; reset()}&#x26;gt;Restart&#x26;lt;/button&#x26;gt;\n&#x26;lt;/div&#x26;gt;\n);\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">ReactDOM.render(\n  &#x26;lt;CountDown hours={1} minutes={45} /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a list of elements from an array of primitives.</p>\n<ul>\n<li>Use the value of the <code>isOrdered</code> prop to conditionally render an <code>&lt;ol&gt;</code> or a <code>&lt;ul&gt;</code> list.</li>\n<li>Use <code>Array.prototype.map()</code> to render every item in <code>data</code> as a <code>&lt;li&gt;</code> element with an appropriate <code>key</code>.</li>\n</ul>\n<pre><code class=\"language-js\">const DataList = ({ isOrdered = false, data }) =&#x26;gt; {\n  const list = data.map((val, i) =&#x26;gt; &#x26;lt;li key={`${i}_${val}`}&#x26;gt;{val}&#x26;lt;/li&#x26;gt;);\n  return isOrdered ? &#x26;lt;ol&#x26;gt;{list}&#x26;lt;/ol&#x26;gt; : &#x26;lt;ul&#x26;gt;{list}&#x26;lt;/ul&#x26;gt;;\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const names = [&#x26;quot;John&#x26;quot;, &#x26;quot;Paul&#x26;quot;, &#x26;quot;Mary&#x26;quot;];\nReactDOM.render(&#x26;lt;DataList data={names} /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\nReactDOM.render(\n  &#x26;lt;DataList data={names} isOrdered /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a table with rows dynamically created from an array of primitives.</p>\n<ul>\n<li>Render a <code>&lt;table&gt;</code> element with two columns (<code>ID</code> and <code>Value</code>).</li>\n<li>Use <code>Array.prototype.map()</code> to render every item in <code>data</code> as a <code>&lt;tr&gt;</code> element with an appropriate <code>key</code>.</li>\n</ul>\n<pre><code class=\"language-js\">const DataTable = ({ data }) =&#x26;gt; {\n  return (\n    &#x26;lt;table&#x26;gt;\n      &#x26;lt;thead&#x26;gt;\n        &#x26;lt;tr&#x26;gt;\n          &#x26;lt;th&#x26;gt;ID&#x26;lt;/th&#x26;gt;\n          &#x26;lt;th&#x26;gt;Value&#x26;lt;/th&#x26;gt;\n        &#x26;lt;/tr&#x26;gt;\n      &#x26;lt;/thead&#x26;gt;\n      &#x26;lt;tbody&#x26;gt;\n        {data.map((val, i) =&#x26;gt; (\n          &#x26;lt;tr key={`${i}_${val}`}&#x26;gt;\n            &#x26;lt;td&#x26;gt;{i}&#x26;lt;/td&#x26;gt;\n            &#x26;lt;td&#x26;gt;{val}&#x26;lt;/td&#x26;gt;\n          &#x26;lt;/tr&#x26;gt;\n        ))}\n      &#x26;lt;/tbody&#x26;gt;\n    &#x26;lt;/table&#x26;gt;\n  );\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const people = [&#x26;quot;John&#x26;quot;, &#x26;quot;Jesse&#x26;quot;];\nReactDOM.render(&#x26;lt;DataTable data={people} /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Renders a file drag and drop component for a single file.</p>\n<ul>\n<li>Create a ref, called <code>dropRef</code> and bind it to the component’s wrapper.</li>\n<li>Use the <code>useState()</code> hook to create the <code>drag</code> and <code>filename</code> variables, initialized to <code>false</code> and <code>''</code> respectively.</li>\n<li>The variables <code>dragCounter</code> and <code>drag</code> are used to determine if a file is being dragged, while <code>filename</code> is used to store the dropped file’s name.</li>\n<li>Create the <code>handleDrag</code>, <code>handleDragIn</code>, <code>handleDragOut</code> and <code>handleDrop</code> methods to handle drag and drop functionality.</li>\n<li><code>handleDrag</code> prevents the browser from opening the dragged file, <code>handleDragIn</code> and <code>handleDragOut</code> handle the dragged file entering and exiting the component, while <code>handleDrop</code> handles the file being dropped and passes it to <code>onDrop</code>.</li>\n<li>Use the <code>useEffect()</code> hook to handle each of the drag and drop events using the previously created methods.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb25\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb25-1\" title=\"1\"><span class=\"fu\">.filedrop</span> {</a>\n<a class=\"sourceLine\" id=\"cb25-2\" title=\"2\">  <span class=\"kw\">min-height</span>: <span class=\"dv\">120</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb25-3\" title=\"3\">  <span class=\"kw\">border</span>: <span class=\"dv\">3</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"cn\">#d3d3d3</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb25-4\" title=\"4\">  <span class=\"kw\">text-align</span>: <span class=\"dv\">center</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb25-5\" title=\"5\">  <span class=\"kw\">font-size</span>: <span class=\"dv\">24</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb25-6\" title=\"6\">  <span class=\"kw\">padding</span>: <span class=\"dv\">32</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb25-7\" title=\"7\">  <span class=\"kw\">border-radius</span>: <span class=\"dv\">4</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb25-8\" title=\"8\">}</a>\n<a class=\"sourceLine\" id=\"cb25-9\" title=\"9\"></a>\n<a class=\"sourceLine\" id=\"cb25-10\" title=\"10\"><span class=\"fu\">.filedrop.drag</span> {</a>\n<a class=\"sourceLine\" id=\"cb25-11\" title=\"11\">  <span class=\"kw\">border</span>: <span class=\"dv\">3</span><span class=\"dt\">px</span> <span class=\"dv\">dashed</span> <span class=\"cn\">#1e90ff</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb25-12\" title=\"12\">}</a>\n<a class=\"sourceLine\" id=\"cb25-13\" title=\"13\"></a>\n<a class=\"sourceLine\" id=\"cb25-14\" title=\"14\"><span class=\"fu\">.filedrop.ready</span> {</a>\n<a class=\"sourceLine\" id=\"cb25-15\" title=\"15\">  <span class=\"kw\">border</span>: <span class=\"dv\">3</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"cn\">#32cd32</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb25-16\" title=\"16\">}</a>\n</div>\n<pre><code class=\"language-js\">const FileDrop = ({ onDrop }) =&#x26;gt; {\n  const [drag, setDrag] = React.useState(false);\n  const [filename, setFilename] = React.useState(&#x26;quot;&#x26;quot;);\n  let dropRef = React.createRef();\n  let dragCounter = 0;\n\nconst handleDrag = (e) =&#x26;gt; {\ne.preventDefault();\ne.stopPropagation();\n};\n\nconst handleDragIn = (e) =&#x26;gt; {\ne.preventDefault();\ne.stopPropagation();\ndragCounter++;\nif (e.dataTransfer.items &#x26;amp;&#x26;amp; e.dataTransfer.items.length &#x26;gt; 0) setDrag(true);\n};\n\nconst handleDragOut = (e) =&#x26;gt; {\ne.preventDefault();\ne.stopPropagation();\ndragCounter--;\nif (dragCounter === 0) setDrag(false);\n};\n\nconst handleDrop = (e) =&#x26;gt; {\ne.preventDefault();\ne.stopPropagation();\nsetDrag(false);\nif (e.dataTransfer.files &#x26;amp;&#x26;amp; e.dataTransfer.files.length &#x26;gt; 0) {\nonDrop(e.dataTransfer.files[0]);\nsetFilename(e.dataTransfer.files[0].name);\ne.dataTransfer.clearData();\ndragCounter = 0;\n}\n};\n\nReact.useEffect(() =&#x26;gt; {\nlet div = dropRef.current;\ndiv.addEventListener(&#x26;quot;dragenter&#x26;quot;, handleDragIn);\ndiv.addEventListener(&#x26;quot;dragleave&#x26;quot;, handleDragOut);\ndiv.addEventListener(&#x26;quot;dragover&#x26;quot;, handleDrag);\ndiv.addEventListener(&#x26;quot;drop&#x26;quot;, handleDrop);\nreturn () =&#x26;gt; {\ndiv.removeEventListener(&#x26;quot;dragenter&#x26;quot;, handleDragIn);\ndiv.removeEventListener(&#x26;quot;dragleave&#x26;quot;, handleDragOut);\ndiv.removeEventListener(&#x26;quot;dragover&#x26;quot;, handleDrag);\ndiv.removeEventListener(&#x26;quot;drop&#x26;quot;, handleDrop);\n};\n});\n\nreturn (\n&#x26;lt;div\nref={dropRef}\nclassName={\ndrag ? &#x26;quot;filedrop drag&#x26;quot; : filename ? &#x26;quot;filedrop ready&#x26;quot; : &#x26;quot;filedrop&#x26;quot;\n}\n&#x26;gt;\n{filename &#x26;amp;&#x26;amp; !drag ? &#x26;lt;div&#x26;gt;{filename}&#x26;lt;/div&#x26;gt; : &#x26;lt;div&#x26;gt;Drop a file here!&#x26;lt;/div&#x26;gt;}\n&#x26;lt;/div&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(\n  &#x26;lt;FileDrop onDrop={console.log} /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a textarea component with a character limit.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create the <code>content</code> state variable and set its value to that of <code>value</code> prop, trimmed down to <code>limit</code> characters.</li>\n<li>Create a method <code>setFormattedContent</code>, which trims the content down to <code>limit</code> characters and memoize it, using the <code>useCallback()</code> hook.</li>\n<li>Bind the <code>onChange</code> event of the <code>&lt;textarea&gt;</code> to call <code>setFormattedContent</code> with the value of the fired event.</li>\n</ul>\n<pre><code class=\"language-js\">const LimitedTextarea = ({ rows, cols, value, limit }) =&#x26;gt; {\n  const [content, setContent] = React.useState(value.slice(0, limit));\n\nconst setFormattedContent = React.useCallback(\n(text) =&#x26;gt; {\nsetContent(text.slice(0, limit));\n},\n[limit, setContent]\n);\n\nreturn (\n&#x26;lt;&#x26;gt;\n&#x26;lt;textarea\nrows={rows}\ncols={cols}\nonChange={(event) =&#x26;gt; setFormattedContent(event.target.value)}\nvalue={content}\n/&#x26;gt;\n&#x26;lt;p&#x26;gt;\n{content.length}/{limit}\n&#x26;lt;/p&#x26;gt;\n&#x26;lt;/&#x26;gt;\n);\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">ReactDOM.render(\n  &#x26;lt;LimitedTextarea limit={32} value=&#x26;quot;Hello!&#x26;quot; /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a textarea component with a word limit.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create a state variable, containing <code>content</code> and <code>wordCount</code>, using the <code>value</code> prop and <code>0</code> as the initial values respectively.</li>\n<li>Use the <code>useCallback()</code> hooks to create a memoized function, <code>setFormattedContent</code>, that uses <code>String.prototype.split()</code> to turn the input into an array of words.</li>\n<li>Check if the result of applying <code>Array.prototype.filter()</code> combined with <code>Boolean</code> has a <code>length</code> longer than <code>limit</code> and, if so, trim the input, otherwise return the raw input, updating state accordingly in both cases.</li>\n<li>Use the <code>useEffect()</code> hook to call the <code>setFormattedContent</code> method on the value of the <code>content</code> state variable during the initial render.</li>\n<li>Bind the <code>onChange</code> event of the <code>&lt;textarea&gt;</code> to call <code>setFormattedContent</code> with the value of <code>event.target.value</code>.</li>\n</ul>\n<pre><code class=\"language-js\">const LimitedWordTextarea = ({ rows, cols, value, limit }) =&#x26;gt; {\n  const [{ content, wordCount }, setContent] = React.useState({\n    content: value,\n    wordCount: 0,\n  });\n\nconst setFormattedContent = React.useCallback(\n(text) =&#x26;gt; {\nlet words = text.split(&#x26;quot; &#x26;quot;).filter(Boolean);\nif (words.length &#x26;gt; limit) {\nsetContent({\ncontent: words.slice(0, limit).join(&#x26;quot; &#x26;quot;),\nwordCount: limit,\n});\n} else {\nsetContent({ content: text, wordCount: words.length });\n}\n},\n[limit, setContent]\n);\n\nReact.useEffect(() =&#x26;gt; {\nsetFormattedContent(content);\n}, []);\n\nreturn (\n&#x26;lt;&#x26;gt;\n&#x26;lt;textarea\nrows={rows}\ncols={cols}\nonChange={(event) =&#x26;gt; setFormattedContent(event.target.value)}\nvalue={content}\n/&#x26;gt;\n&#x26;lt;p&#x26;gt;\n{wordCount}/{limit}\n&#x26;lt;/p&#x26;gt;\n&#x26;lt;/&#x26;gt;\n);\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">ReactDOM.render(\n  &#x26;lt;LimitedWordTextarea limit={5} value=&#x26;quot;Hello there!&#x26;quot; /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a spinning loader component.</p>\n<ul>\n<li>Render an SVG, whose <code>height</code> and <code>width</code> are determined by the <code>size</code> prop.</li>\n<li>Use CSS to animate the SVG, creating a spinning animation.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb32\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb32-1\" title=\"1\"><span class=\"fu\">.loader</span> {</a>\n<a class=\"sourceLine\" id=\"cb32-2\" title=\"2\">  <span class=\"kw\">animation</span>: rotate <span class=\"dv\">2</span><span class=\"dt\">s</span> <span class=\"dv\">linear</span> <span class=\"dv\">infinite</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb32-3\" title=\"3\">}</a>\n<a class=\"sourceLine\" id=\"cb32-4\" title=\"4\"></a>\n<a class=\"sourceLine\" id=\"cb32-5\" title=\"5\"><span class=\"im\">@keyframes</span> rotate {</a>\n<a class=\"sourceLine\" id=\"cb32-6\" title=\"6\">  <span class=\"dv\">100%</span> {</a>\n<a class=\"sourceLine\" id=\"cb32-7\" title=\"7\">    <span class=\"kw\">transform</span>: <span class=\"fu\">rotate(</span><span class=\"dv\">360</span><span class=\"dt\">deg</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb32-8\" title=\"8\">  }</a>\n<a class=\"sourceLine\" id=\"cb32-9\" title=\"9\">}</a>\n<a class=\"sourceLine\" id=\"cb32-10\" title=\"10\"></a>\n<a class=\"sourceLine\" id=\"cb32-11\" title=\"11\"><span class=\"fu\">.loader</span> circle {</a>\n<a class=\"sourceLine\" id=\"cb32-12\" title=\"12\">  <span class=\"kw\">animation</span>: dash <span class=\"dv\">1.5</span><span class=\"dt\">s</span> <span class=\"dv\">ease-in-out</span> <span class=\"dv\">infinite</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb32-13\" title=\"13\">}</a>\n<a class=\"sourceLine\" id=\"cb32-14\" title=\"14\"></a>\n<a class=\"sourceLine\" id=\"cb32-15\" title=\"15\"><span class=\"im\">@keyframes</span> dash {</a>\n<a class=\"sourceLine\" id=\"cb32-16\" title=\"16\">  <span class=\"dv\">0%</span> {</a>\n<a class=\"sourceLine\" id=\"cb32-17\" title=\"17\">    stroke-dasharray: <span class=\"dv\">1</span><span class=\"op\">,</span> <span class=\"dv\">150</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb32-18\" title=\"18\">    stroke-dashoffset: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb32-19\" title=\"19\">  }</a>\n<a class=\"sourceLine\" id=\"cb32-20\" title=\"20\">  <span class=\"dv\">50%</span> {</a>\n<a class=\"sourceLine\" id=\"cb32-21\" title=\"21\">    stroke-dasharray: <span class=\"dv\">90</span><span class=\"op\">,</span> <span class=\"dv\">150</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb32-22\" title=\"22\">    stroke-dashoffset: <span class=\"dv\">-35</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb32-23\" title=\"23\">  }</a>\n<a class=\"sourceLine\" id=\"cb32-24\" title=\"24\">  <span class=\"dv\">100%</span> {</a>\n<a class=\"sourceLine\" id=\"cb32-25\" title=\"25\">    stroke-dasharray: <span class=\"dv\">90</span><span class=\"op\">,</span> <span class=\"dv\">150</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb32-26\" title=\"26\">    stroke-dashoffset: <span class=\"dv\">-124</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb32-27\" title=\"27\">  }</a>\n<a class=\"sourceLine\" id=\"cb32-28\" title=\"28\">}</a>\n</div>\n<pre><code class=\"language-js\">const Loader = ({ size }) =&#x26;gt; {\n  return (\n    &#x26;lt;svg\n      className=&#x26;quot;loader&#x26;quot;\n      xmlns=&#x26;quot;http://www.w3.org/2000/svg&#x26;quot;\n      width={size}\n      height={size}\n      viewBox=&#x26;quot;0 0 24 24&#x26;quot;\n      fill=&#x26;quot;none&#x26;quot;\n      stroke=&#x26;quot;currentColor&#x26;quot;\n      strokeWidth=&#x26;quot;2&#x26;quot;\n      strokeLinecap=&#x26;quot;round&#x26;quot;\n      strokeLinejoin=&#x26;quot;round&#x26;quot;\n    &#x26;gt;\n      &#x26;lt;circle cx=&#x26;quot;12&#x26;quot; cy=&#x26;quot;12&#x26;quot; r=&#x26;quot;10&#x26;quot; /&#x26;gt;\n    &#x26;lt;/svg&#x26;gt;\n  );\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(&#x26;lt;Loader size={24} /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Renders a link formatted to send an email (<code>mailto:</code> link).</p>\n<ul>\n<li>Use the <code>email</code>, <code>subject</code> and <code>body</code> props to create a <code>&lt;a&gt;</code> element with an appropriate <code>href</code> attribute.</li>\n<li>Use <code>encodeURIcomponent</code> to safely encode the <code>subject</code> and <code>body</code> into the link URL.</li>\n<li>Render the link with <code>children</code> as its content.</li>\n</ul>\n<pre><code class=\"language-js\">const Mailto = ({ email, subject = &#x26;quot;&#x26;quot;, body = &#x26;quot;&#x26;quot;, children }) =&#x26;gt; {\n  let params = subject || body ? &#x26;quot;?&#x26;quot; : &#x26;quot;&#x26;quot;;\n  if (subject) params += `subject=${encodeURIComponent(subject)}`;\n  if (body) params += `${subject ? &#x26;quot;&#x26;amp;&#x26;quot; : &#x26;quot;&#x26;quot;}body=${encodeURIComponent(body)}`;\n\nreturn &#x26;lt;a href={`mailto:${email}${params}`}&#x26;gt;{children}&#x26;lt;/a&#x26;gt;;\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">ReactDOM.render(\n  &#x26;lt;Mailto email=&#x26;quot;foo@bar.baz&#x26;quot; subject=&#x26;quot;Hello &#x26;amp; Welcome&#x26;quot; body=&#x26;quot;Hello world!&#x26;quot;&#x26;gt;\n    Mail me!\n  &#x26;lt;/Mailto&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a table with rows dynamically created from an array of objects and a list of property names.</p>\n<ul>\n<li>Use <code>Object.keys()</code>, <code>Array.prototype.filter()</code>, <code>Array.prototype.includes()</code> and <code>Array.prototype.reduce()</code> to produce a <code>filteredData</code> array, containing all objects with the keys specified in <code>propertyNames</code>.</li>\n<li>Render a <code>&lt;table&gt;</code> element with a set of columns equal to the amount of values in <code>propertyNames</code>.</li>\n<li>Use <code>Array.prototype.map()</code> to render each value in the <code>propertyNames</code> array as a <code>&lt;th&gt;</code> element.</li>\n<li>Use <code>Array.prototype.map()</code> to render each object in the <code>filteredData</code> array as a <code>&lt;tr&gt;</code> element, containing a <code>&lt;td&gt;</code> for each key in the object.</li>\n</ul>\n<p><em>This component does not work with nested objects and will break if there are nested objects inside any of the properties specified in <code>propertyNames</code></em></p>\n<pre><code class=\"language-js\">const MappedTable = ({ data, propertyNames }) =&#x26;gt; {\n  let filteredData = data.map((v) =&#x26;gt;\n    Object.keys(v)\n      .filter((k) =&#x26;gt; propertyNames.includes(k))\n      .reduce((acc, key) =&#x26;gt; ((acc[key] = v[key]), acc), {})\n  );\n  return (\n    &#x26;lt;table&#x26;gt;\n      &#x26;lt;thead&#x26;gt;\n        &#x26;lt;tr&#x26;gt;\n          {propertyNames.map((val) =&#x26;gt; (\n            &#x26;lt;th key={`h_${val}`}&#x26;gt;{val}&#x26;lt;/th&#x26;gt;\n          ))}\n        &#x26;lt;/tr&#x26;gt;\n      &#x26;lt;/thead&#x26;gt;\n      &#x26;lt;tbody&#x26;gt;\n        {filteredData.map((val, i) =&#x26;gt; (\n          &#x26;lt;tr key={`i_${i}`}&#x26;gt;\n            {propertyNames.map((p) =&#x26;gt; (\n              &#x26;lt;td key={`i_${i}_${p}`}&#x26;gt;{val[p]}&#x26;lt;/td&#x26;gt;\n            ))}\n          &#x26;lt;/tr&#x26;gt;\n        ))}\n      &#x26;lt;/tbody&#x26;gt;\n    &#x26;lt;/table&#x26;gt;\n  );\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const people = [\n  { name: &#x26;quot;John&#x26;quot;, surname: &#x26;quot;Smith&#x26;quot;, age: 42 },\n  { name: &#x26;quot;Adam&#x26;quot;, surname: &#x26;quot;Smith&#x26;quot;, gender: &#x26;quot;male&#x26;quot; },\n];\nconst propertyNames = [&#x26;quot;name&#x26;quot;, &#x26;quot;surname&#x26;quot;, &#x26;quot;age&#x26;quot;];\nReactDOM.render(\n  &#x26;lt;MappedTable data={people} propertyNames={propertyNames} /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a Modal component, controllable through events.</p>\n<ul>\n<li>Define <code>keydownHandler</code>, a method which handles all keyboard events and is used to call <code>onClose</code> when the <code>Esc</code> key is pressed.</li>\n<li>Use the <code>useEffect()</code> hook to add or remove the <code>keydown</code> event listener to the <code>document</code>, calling <code>keydownHandler</code> for every event.</li>\n<li>Add a styled <code>&lt;span&gt;</code> element that acts as a close button, calling <code>onClose</code> when clicked.</li>\n<li>Use the <code>isVisible</code> prop passed down from the parent to determine if the modal should be displayed or not.</li>\n<li>To use the component, import <code>Modal</code> only once and then display it by passing a boolean value to the <code>isVisible</code> attribute.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb39\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb39-1\" title=\"1\"><span class=\"fu\">.modal</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-2\" title=\"2\">  <span class=\"kw\">position</span>: <span class=\"dv\">fixed</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-3\" title=\"3\">  <span class=\"kw\">top</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-4\" title=\"4\">  <span class=\"kw\">bottom</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-5\" title=\"5\">  <span class=\"kw\">left</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-6\" title=\"6\">  <span class=\"kw\">right</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-7\" title=\"7\">  <span class=\"kw\">width</span>: <span class=\"dv\">100</span><span class=\"dt\">%</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-8\" title=\"8\">  <span class=\"kw\">z-index</span>: <span class=\"dv\">9999</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-9\" title=\"9\">  <span class=\"kw\">display</span>: flex<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-10\" title=\"10\">  <span class=\"kw\">align-items</span>: <span class=\"dv\">center</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-11\" title=\"11\">  <span class=\"kw\">justify-content</span>: <span class=\"dv\">center</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-12\" title=\"12\">  <span class=\"kw\">background-color</span>: <span class=\"fu\">rgba(</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0.25</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-13\" title=\"13\">  <span class=\"kw\">animation-name</span>: appear<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-14\" title=\"14\">  <span class=\"kw\">animation-duration</span>: <span class=\"dv\">300</span><span class=\"dt\">ms</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-15\" title=\"15\">}</a>\n<a class=\"sourceLine\" id=\"cb39-16\" title=\"16\"></a>\n<a class=\"sourceLine\" id=\"cb39-17\" title=\"17\"><span class=\"fu\">.modal-dialog</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-18\" title=\"18\">  <span class=\"kw\">width</span>: <span class=\"dv\">100</span><span class=\"dt\">%</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-19\" title=\"19\">  <span class=\"kw\">max-width</span>: <span class=\"dv\">550</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-20\" title=\"20\">  <span class=\"kw\">background</span>: <span class=\"cn\">white</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-21\" title=\"21\">  <span class=\"kw\">position</span>: <span class=\"dv\">relative</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-22\" title=\"22\">  <span class=\"kw\">margin</span>: <span class=\"dv\">0</span> <span class=\"dv\">20</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-23\" title=\"23\">  <span class=\"kw\">max-height</span>: <span class=\"fu\">calc(</span><span class=\"dv\">100</span><span class=\"dt\">vh</span> <span class=\"op\">-</span> <span class=\"dv\">40</span><span class=\"dt\">px</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-24\" title=\"24\">  <span class=\"kw\">text-align</span>: <span class=\"dv\">left</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-25\" title=\"25\">  <span class=\"kw\">display</span>: flex<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-26\" title=\"26\">  <span class=\"kw\">flex-direction</span>: column<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-27\" title=\"27\">  <span class=\"kw\">overflow</span>: <span class=\"dv\">hidden</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-28\" title=\"28\">  <span class=\"kw\">box-shadow</span>: <span class=\"dv\">0</span> <span class=\"dv\">4</span><span class=\"dt\">px</span> <span class=\"dv\">8</span><span class=\"dt\">px</span> <span class=\"dv\">0</span> <span class=\"fu\">rgba(</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0.2</span><span class=\"fu\">)</span><span class=\"op\">,</span> <span class=\"dv\">0</span> <span class=\"dv\">6</span><span class=\"dt\">px</span> <span class=\"dv\">20</span><span class=\"dt\">px</span> <span class=\"dv\">0</span> <span class=\"fu\">rgba(</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0.19</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-29\" title=\"29\">  <span class=\"kw\">-webkit-animation-name</span>: animatetop<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-30\" title=\"30\">  <span class=\"kw\">-webkit-animation-duration</span>: <span class=\"dv\">0.4</span><span class=\"dt\">s</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-31\" title=\"31\">  <span class=\"kw\">animation-name</span>: slide-in<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-32\" title=\"32\">  <span class=\"kw\">animation-duration</span>: <span class=\"dv\">0.5</span><span class=\"dt\">s</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-33\" title=\"33\">}</a>\n<a class=\"sourceLine\" id=\"cb39-34\" title=\"34\"></a>\n<a class=\"sourceLine\" id=\"cb39-35\" title=\"35\"><span class=\"fu\">.modal-header</span><span class=\"op\">,</span></a>\n<a class=\"sourceLine\" id=\"cb39-36\" title=\"36\"><span class=\"fu\">.modal-footer</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-37\" title=\"37\">  <span class=\"kw\">display</span>: flex<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-38\" title=\"38\">  <span class=\"kw\">align-items</span>: <span class=\"dv\">center</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-39\" title=\"39\">  <span class=\"kw\">padding</span>: <span class=\"dv\">1</span><span class=\"dt\">rem</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-40\" title=\"40\">}</a>\n<a class=\"sourceLine\" id=\"cb39-41\" title=\"41\"></a>\n<a class=\"sourceLine\" id=\"cb39-42\" title=\"42\"><span class=\"fu\">.modal-header</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-43\" title=\"43\">  <span class=\"kw\">border-bottom</span>: <span class=\"dv\">1</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"cn\">#dbdbdb</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-44\" title=\"44\">  <span class=\"kw\">justify-content</span>: space-between<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-45\" title=\"45\">}</a>\n<a class=\"sourceLine\" id=\"cb39-46\" title=\"46\"></a>\n<a class=\"sourceLine\" id=\"cb39-47\" title=\"47\"><span class=\"fu\">.modal-footer</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-48\" title=\"48\">  <span class=\"kw\">border-top</span>: <span class=\"dv\">1</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"cn\">#dbdbdb</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-49\" title=\"49\">  <span class=\"kw\">justify-content</span>: flex-end<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-50\" title=\"50\">}</a>\n<a class=\"sourceLine\" id=\"cb39-51\" title=\"51\"></a>\n<a class=\"sourceLine\" id=\"cb39-52\" title=\"52\"><span class=\"fu\">.modal-close</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-53\" title=\"53\">  <span class=\"kw\">cursor</span>: <span class=\"dv\">pointer</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-54\" title=\"54\">  <span class=\"kw\">padding</span>: <span class=\"dv\">1</span><span class=\"dt\">rem</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-55\" title=\"55\">  <span class=\"kw\">margin</span>: <span class=\"dv\">-1</span><span class=\"dt\">rem</span> <span class=\"dv\">-1</span><span class=\"dt\">rem</span> <span class=\"dv\">-1</span><span class=\"dt\">rem</span> <span class=\"bu\">auto</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-56\" title=\"56\">}</a>\n<a class=\"sourceLine\" id=\"cb39-57\" title=\"57\"></a>\n<a class=\"sourceLine\" id=\"cb39-58\" title=\"58\"><span class=\"fu\">.modal-body</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-59\" title=\"59\">  <span class=\"kw\">overflow</span>: <span class=\"bu\">auto</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-60\" title=\"60\">}</a>\n<a class=\"sourceLine\" id=\"cb39-61\" title=\"61\"></a>\n<a class=\"sourceLine\" id=\"cb39-62\" title=\"62\"><span class=\"fu\">.modal-content</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-63\" title=\"63\">  <span class=\"kw\">padding</span>: <span class=\"dv\">1</span><span class=\"dt\">rem</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-64\" title=\"64\">}</a>\n<a class=\"sourceLine\" id=\"cb39-65\" title=\"65\"></a>\n<a class=\"sourceLine\" id=\"cb39-66\" title=\"66\"><span class=\"im\">@keyframes</span> appear {</a>\n<a class=\"sourceLine\" id=\"cb39-67\" title=\"67\">  <span class=\"dv\">from</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-68\" title=\"68\">    <span class=\"kw\">opacity</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-69\" title=\"69\">  }</a>\n<a class=\"sourceLine\" id=\"cb39-70\" title=\"70\">  <span class=\"dv\">to</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-71\" title=\"71\">    <span class=\"kw\">opacity</span>: <span class=\"dv\">1</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-72\" title=\"72\">  }</a>\n<a class=\"sourceLine\" id=\"cb39-73\" title=\"73\">}</a>\n<a class=\"sourceLine\" id=\"cb39-74\" title=\"74\"></a>\n<a class=\"sourceLine\" id=\"cb39-75\" title=\"75\"><span class=\"im\">@keyframes</span> slide-in {</a>\n<a class=\"sourceLine\" id=\"cb39-76\" title=\"76\">  <span class=\"dv\">from</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-77\" title=\"77\">    <span class=\"kw\">transform</span>: translateY(<span class=\"dv\">-150</span><span class=\"dt\">px</span>)<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-78\" title=\"78\">  }</a>\n<a class=\"sourceLine\" id=\"cb39-79\" title=\"79\">  <span class=\"dv\">to</span> {</a>\n<a class=\"sourceLine\" id=\"cb39-80\" title=\"80\">    <span class=\"kw\">transform</span>: translateY(<span class=\"dv\">0</span>)<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb39-81\" title=\"81\">  }</a>\n<a class=\"sourceLine\" id=\"cb39-82\" title=\"82\">}</a>\n</div>\n<pre><code class=\"language-js\">const Modal = ({ isVisible = false, title, content, footer, onClose }) =&#x26;gt; {\n  const keydownHandler = ({ key }) =&#x26;gt; {\n    switch (key) {\n      case &#x26;quot;Escape&#x26;quot;:\n        onClose();\n        break;\n      default:\n    }\n  };\n\nReact.useEffect(() =&#x26;gt; {\ndocument.addEventListener(&#x26;quot;keydown&#x26;quot;, keydownHandler);\nreturn () =&#x26;gt; document.removeEventListener(&#x26;quot;keydown&#x26;quot;, keydownHandler);\n});\n\nreturn !isVisible ? null : (\n&#x26;lt;div className=&#x26;quot;modal&#x26;quot; onClick={onClose}&#x26;gt;\n&#x26;lt;div className=&#x26;quot;modal-dialog&#x26;quot; onClick={(e) =&#x26;gt; e.stopPropagation()}&#x26;gt;\n&#x26;lt;div className=&#x26;quot;modal-header&#x26;quot;&#x26;gt;\n&#x26;lt;h3 className=&#x26;quot;modal-title&#x26;quot;&#x26;gt;{title}&#x26;lt;/h3&#x26;gt;\n&#x26;lt;span className=&#x26;quot;modal-close&#x26;quot; onClick={onClose}&#x26;gt;\n&#x26;amp;times;\n&#x26;lt;/span&#x26;gt;\n&#x26;lt;/div&#x26;gt;\n&#x26;lt;div className=&#x26;quot;modal-body&#x26;quot;&#x26;gt;\n&#x26;lt;div className=&#x26;quot;modal-content&#x26;quot;&#x26;gt;{content}&#x26;lt;/div&#x26;gt;\n&#x26;lt;/div&#x26;gt;\n{footer &#x26;amp;&#x26;amp; &#x26;lt;div className=&#x26;quot;modal-footer&#x26;quot;&#x26;gt;{footer}&#x26;lt;/div&#x26;gt;}\n&#x26;lt;/div&#x26;gt;\n&#x26;lt;/div&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nconst App = () =&#x26;gt; {\n  const [isModal, setModal] = React.useState(false);\n  return (\n    &#x26;lt;&#x26;gt;\n      &#x26;lt;button onClick={() =&#x26;gt; setModal(true)}&#x26;gt;Click Here&#x26;lt;/button&#x26;gt;\n      &#x26;lt;Modal\n        isVisible={isModal}\n        title=&#x26;quot;Modal Title&#x26;quot;\n        content={&#x26;lt;p&#x26;gt;Add your content here&#x26;lt;/p&#x26;gt;}\n        footer={&#x26;lt;button&#x26;gt;Cancel&#x26;lt;/button&#x26;gt;}\n        onClose={() =&#x26;gt; setModal(false)}\n      /&#x26;gt;\n    &#x26;lt;/&#x26;gt;\n  );\n};\n\nReactDOM.render(&#x26;lt;App /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Renders a checkbox list that uses a callback function to pass its selected value/values to the parent component.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create the <code>data</code> state variable and use the <code>options</code> prop to initialize its value.</li>\n<li>Create a <code>toggle</code> function that uses the spread operator (<code>...</code>) and <code>Array.prototype.splice()</code> to update the <code>data</code> state variable and call the <code>onChange</code> callback with any <code>checked</code> options.</li>\n<li>Use <code>Array.prototype.map()</code> to map the <code>data</code> state variable to individual <code>&lt;input type=\"checkbox\"&gt;</code> elements, each one wrapped in a <code>&lt;label&gt;</code>, binding the <code>onClick</code> handler to the <code>toggle</code> function.</li>\n</ul>\n<pre><code class=\"language-js\">const MultiselectCheckbox = ({ options, onChange }) =&#x26;gt; {\n  const [data, setData] = React.useState(options);\n\nconst toggle = (index) =&#x26;gt; {\nconst newData = [...data];\nnewData.splice(index, 1, {\nlabel: data[index].label,\nchecked: !data[index].checked,\n});\nsetData(newData);\nonChange(newData.filter((x) =&#x26;gt; x.checked));\n};\n\nreturn (\n&#x26;lt;&#x26;gt;\n{data.map((item, index) =&#x26;gt; (\n&#x26;lt;label key={item.label}&#x26;gt;\n&#x26;lt;input\nreadOnly\ntype=&#x26;quot;checkbox&#x26;quot;\nchecked={item.checked || false}\nonClick={() =&#x26;gt; toggle(index)}\n/&#x26;gt;\n{item.label}\n&#x26;lt;/label&#x26;gt;\n))}\n&#x26;lt;/&#x26;gt;\n);\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const options = [{ label: &#x26;quot;Item One&#x26;quot; }, { label: &#x26;quot;Item Two&#x26;quot; }];\n\nReactDOM.render(\n&#x26;lt;MultiselectCheckbox\noptions={options}\nonChange={(data) =&#x26;gt; {\nconsole.log(data);\n}}\n/&#x26;gt;,\ndocument.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a password input field with a reveal button.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create the <code>shown</code> state variable and set its value to <code>false</code>.</li>\n<li>When the <code>&lt;button&gt;</code> is clicked, execute <code>setShown</code>, toggling the <code>type</code> of the <code>&lt;input&gt;</code> between <code>\"text\"</code> and <code>\"password\"</code>.</li>\n</ul>\n<pre><code class=\"language-js\">const PasswordRevealer = ({ value }) =&#x26;gt; {\n  const [shown, setShown] = React.useState(false);\n  return (\n    &#x26;lt;&#x26;gt;\n      &#x26;lt;input type={shown ? &#x26;quot;text&#x26;quot; : &#x26;quot;password&#x26;quot;} value={value} /&#x26;gt;\n      &#x26;lt;button onClick={() =&#x26;gt; setShown(!shown)}&#x26;gt;Show/Hide&#x26;lt;/button&#x26;gt;\n    &#x26;lt;/&#x26;gt;\n  );\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">ReactDOM.render(&#x26;lt;PasswordRevealer /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Renders a button that animates a ripple effect when clicked.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create the <code>coords</code> and <code>isRippling</code> state variables for the pointer’s coordinates and the animation state of the button respectively.</li>\n<li>Use a <code>useEffect()</code> hook to change the value of <code>isRippling</code> every time the <code>coords</code> state variable changes, starting the animation.</li>\n<li>Use <code>setTimeout()</code> in the previous hook to clear the animation after it’s done playing.</li>\n<li>Use a <code>useEffect()</code> hook to reset <code>coords</code> whenever the <code>isRippling</code> state variable is <code>false.</code></li>\n<li>Handle the <code>onClick</code> event by updating the <code>coords</code> state variable and calling the passed callback.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb46\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb46-1\" title=\"1\"><span class=\"fu\">.ripple-button</span> {</a>\n<a class=\"sourceLine\" id=\"cb46-2\" title=\"2\">  <span class=\"kw\">border-radius</span>: <span class=\"dv\">4</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-3\" title=\"3\">  <span class=\"kw\">border</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-4\" title=\"4\">  <span class=\"kw\">margin</span>: <span class=\"dv\">8</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-5\" title=\"5\">  <span class=\"kw\">padding</span>: <span class=\"dv\">14</span><span class=\"dt\">px</span> <span class=\"dv\">24</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-6\" title=\"6\">  <span class=\"kw\">background</span>: <span class=\"cn\">#1976d2</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-7\" title=\"7\">  <span class=\"kw\">color</span>: <span class=\"cn\">#fff</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-8\" title=\"8\">  <span class=\"kw\">overflow</span>: <span class=\"dv\">hidden</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-9\" title=\"9\">  <span class=\"kw\">position</span>: <span class=\"dv\">relative</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-10\" title=\"10\">  <span class=\"kw\">cursor</span>: <span class=\"dv\">pointer</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-11\" title=\"11\">}</a>\n<a class=\"sourceLine\" id=\"cb46-12\" title=\"12\"></a>\n<a class=\"sourceLine\" id=\"cb46-13\" title=\"13\"><span class=\"fu\">.ripple-button</span> <span class=\"op\">&gt;</span> <span class=\"fu\">.ripple</span> {</a>\n<a class=\"sourceLine\" id=\"cb46-14\" title=\"14\">  <span class=\"kw\">width</span>: <span class=\"dv\">20</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-15\" title=\"15\">  <span class=\"kw\">height</span>: <span class=\"dv\">20</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-16\" title=\"16\">  <span class=\"kw\">position</span>: <span class=\"dv\">absolute</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-17\" title=\"17\">  <span class=\"kw\">background</span>: <span class=\"cn\">#63a4ff</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-18\" title=\"18\">  <span class=\"kw\">display</span>: <span class=\"dv\">block</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-19\" title=\"19\">  <span class=\"kw\">content</span>: <span class=\"st\">&quot;&quot;</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-20\" title=\"20\">  <span class=\"kw\">border-radius</span>: <span class=\"dv\">9999</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-21\" title=\"21\">  <span class=\"kw\">opacity</span>: <span class=\"dv\">1</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-22\" title=\"22\">  <span class=\"kw\">animation</span>: <span class=\"dv\">0.9</span><span class=\"dt\">s</span> <span class=\"dv\">ease</span> <span class=\"dv\">1</span> <span class=\"dv\">forwards</span> ripple-effect<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-23\" title=\"23\">}</a>\n<a class=\"sourceLine\" id=\"cb46-24\" title=\"24\"></a>\n<a class=\"sourceLine\" id=\"cb46-25\" title=\"25\"><span class=\"im\">@keyframes</span> ripple-effect {</a>\n<a class=\"sourceLine\" id=\"cb46-26\" title=\"26\">  <span class=\"dv\">0%</span> {</a>\n<a class=\"sourceLine\" id=\"cb46-27\" title=\"27\">    <span class=\"kw\">transform</span>: <span class=\"fu\">scale(</span><span class=\"dv\">1</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-28\" title=\"28\">    <span class=\"kw\">opacity</span>: <span class=\"dv\">1</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-29\" title=\"29\">  }</a>\n<a class=\"sourceLine\" id=\"cb46-30\" title=\"30\">  <span class=\"dv\">50%</span> {</a>\n<a class=\"sourceLine\" id=\"cb46-31\" title=\"31\">    <span class=\"kw\">transform</span>: <span class=\"fu\">scale(</span><span class=\"dv\">10</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-32\" title=\"32\">    <span class=\"kw\">opacity</span>: <span class=\"dv\">0.375</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-33\" title=\"33\">  }</a>\n<a class=\"sourceLine\" id=\"cb46-34\" title=\"34\">  <span class=\"dv\">100%</span> {</a>\n<a class=\"sourceLine\" id=\"cb46-35\" title=\"35\">    <span class=\"kw\">transform</span>: <span class=\"fu\">scale(</span><span class=\"dv\">35</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-36\" title=\"36\">    <span class=\"kw\">opacity</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-37\" title=\"37\">  }</a>\n<a class=\"sourceLine\" id=\"cb46-38\" title=\"38\">}</a>\n<a class=\"sourceLine\" id=\"cb46-39\" title=\"39\"></a>\n<a class=\"sourceLine\" id=\"cb46-40\" title=\"40\"><span class=\"fu\">.ripple-button</span> <span class=\"op\">&gt;</span> <span class=\"fu\">.content</span> {</a>\n<a class=\"sourceLine\" id=\"cb46-41\" title=\"41\">  <span class=\"kw\">position</span>: <span class=\"dv\">relative</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-42\" title=\"42\">  <span class=\"kw\">z-index</span>: <span class=\"dv\">2</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb46-43\" title=\"43\">}</a>\n</div>\n<pre><code class=\"language-js\">const RippleButton = ({ children, onClick }) =&#x26;gt; {\n  const [coords, setCoords] = React.useState({ x: -1, y: -1 });\n  const [isRippling, setIsRippling] = React.useState(false);\n\nReact.useEffect(() =&#x26;gt; {\nif (coords.x !== -1 &#x26;amp;&#x26;amp; coords.y !== -1) {\nsetIsRippling(true);\nsetTimeout(() =&#x26;gt; setIsRippling(false), 300);\n} else setIsRippling(false);\n}, [coords]);\n\nReact.useEffect(() =&#x26;gt; {\nif (!isRippling) setCoords({ x: -1, y: -1 });\n}, [isRippling]);\n\nreturn (\n&#x26;lt;button\nclassName=&#x26;quot;ripple-button&#x26;quot;\nonClick={(e) =&#x26;gt; {\nconst rect = e.target.getBoundingClientRect();\nsetCoords({ x: e.clientX - rect.left, y: e.clientY - rect.top });\nonClick &#x26;amp;&#x26;amp; onClick(e);\n}}\n&#x26;gt;\n{isRippling ? (\n&#x26;lt;span\nclassName=&#x26;quot;ripple&#x26;quot;\nstyle={{\n            left: coords.x,\n            top: coords.y,\n          }}\n/&#x26;gt;\n) : (\n&#x26;quot;&#x26;quot;\n)}\n&#x26;lt;span className=&#x26;quot;content&#x26;quot;&#x26;gt;{children}&#x26;lt;/span&#x26;gt;\n&#x26;lt;/button&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(\n  &#x26;lt;RippleButton onClick={(e) =&#x26;gt; console.log(e)}&#x26;gt;Click me&#x26;lt;/RippleButton&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders an uncontrolled <code>&lt;select&gt;</code> element that uses a callback function to pass its value to the parent component.</p>\n<ul>\n<li>Use the the <code>selectedValue</code> prop as the <code>defaultValue</code> of the <code>&lt;select&gt;</code> element to set its initial value..</li>\n<li>Use the <code>onChange</code> event to fire the <code>onValueChange</code> callback and send the new value to the parent.</li>\n<li>Use <code>Array.prototype.map()</code> on the <code>values</code> array to create an <code>&lt;option&gt;</code> element for each passed value.</li>\n<li>Each item in <code>values</code> must be a 2-element array, where the first element is the <code>value</code> of the item and the second one is the displayed text for it.</li>\n</ul>\n<pre><code class=\"language-js\">const Select = ({ values, onValueChange, selectedValue, ...rest }) =&#x26;gt; {\n  return (\n    &#x26;lt;select\n      defaultValue={selectedValue}\n      onChange={({ target: { value } }) =&#x26;gt; onValueChange(value)}\n      {...rest}\n    &#x26;gt;\n      {values.map(([value, text]) =&#x26;gt; (\n        &#x26;lt;option key={value} value={value}&#x26;gt;\n          {text}\n        &#x26;lt;/option&#x26;gt;\n      ))}\n    &#x26;lt;/select&#x26;gt;\n  );\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const choices = [\n  [&#x26;quot;grapefruit&#x26;quot;, &#x26;quot;Grapefruit&#x26;quot;],\n  [&#x26;quot;lime&#x26;quot;, &#x26;quot;Lime&#x26;quot;],\n  [&#x26;quot;coconut&#x26;quot;, &#x26;quot;Coconut&#x26;quot;],\n  [&#x26;quot;mango&#x26;quot;, &#x26;quot;Mango&#x26;quot;],\n];\nReactDOM.render(\n  &#x26;lt;Select\n    values={choices}\n    selectedValue=&#x26;quot;lime&#x26;quot;\n    onValueChange={(val) =&#x26;gt; console.log(val)}\n  /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders an uncontrolled range input element that uses a callback function to pass its value to the parent component.</p>\n<ul>\n<li>Set the <code>type</code> of the <code>&lt;input&gt;</code> element to <code>\"range\"</code> to create a slider.</li>\n<li>Use the <code>defaultValue</code> passed down from the parent as the uncontrolled input field’s initial value.</li>\n<li>Use the <code>onChange</code> event to fire the <code>onValueChange</code> callback and send the new value to the parent.</li>\n</ul>\n<pre><code class=\"language-js\">const Slider = ({\n  min = 0,\n  max = 100,\n  defaultValue,\n  onValueChange,\n  ...rest\n}) =&#x26;gt; {\n  return (\n    &#x26;lt;input\n      type=&#x26;quot;range&#x26;quot;\n      min={min}\n      max={max}\n      defaultValue={defaultValue}\n      onChange={({ target: { value } }) =&#x26;gt; onValueChange(value)}\n      {...rest}\n    /&#x26;gt;\n  );\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">ReactDOM.render(\n  &#x26;lt;Slider onValueChange={(val) =&#x26;gt; console.log(val)} /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a star rating component.</p>\n<ul>\n<li>Define a component, called <code>Star</code> that will render each individual star with the appropriate appearance, based on the parent component’s state.</li>\n<li>In the <code>StarRating</code> component, use the <code>useState()</code> hook to define the <code>rating</code> and <code>selection</code> state variables with the appropriate initial values.</li>\n<li>Create a method, <code>hoverOver</code>, that updates <code>selected</code> according to the provided <code>event</code>, using the .<code>data-star-id</code> attribute of the event’s target or resets it to <code>0</code> if called with a <code>null</code> argument.</li>\n<li>Use <code>Array.from()</code> to create an array of <code>5</code> elements and <code>Array.prototype.map()</code> to create individual <code>&lt;Star&gt;</code> components.</li>\n<li>Handle the <code>onMouseOver</code> and <code>onMouseLeave</code> events of the wrapping element using <code>hoverOver</code> and the <code>onClick</code> event using <code>setRating</code>.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb53\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb53-1\" title=\"1\"><span class=\"fu\">.star</span> {</a>\n<a class=\"sourceLine\" id=\"cb53-2\" title=\"2\">  <span class=\"kw\">color</span>: <span class=\"cn\">#ff9933</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb53-3\" title=\"3\">  <span class=\"kw\">cursor</span>: <span class=\"dv\">pointer</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb53-4\" title=\"4\">}</a>\n</div>\n<pre><code class=\"language-js\">const Star = ({ marked, starId }) =&#x26;gt; {\n  return (\n    &#x26;lt;span data-star-id={starId} className=&#x26;quot;star&#x26;quot; role=&#x26;quot;button&#x26;quot;&#x26;gt;\n      {marked ? &#x26;quot;\\u2605&#x26;quot; : &#x26;quot;\\u2606&#x26;quot;}\n    &#x26;lt;/span&#x26;gt;\n  );\n};\n\nconst StarRating = ({ value }) =&#x26;gt; {\nconst [rating, setRating] = React.useState(parseInt(value) || 0);\nconst [selection, setSelection] = React.useState(0);\n\nconst hoverOver = (event) =&#x26;gt; {\nlet val = 0;\nif (event &#x26;amp;&#x26;amp; event.target &#x26;amp;&#x26;amp; event.target.getAttribute(&#x26;quot;data-star-id&#x26;quot;))\nval = event.target.getAttribute(&#x26;quot;data-star-id&#x26;quot;);\nsetSelection(val);\n};\nreturn (\n&#x26;lt;div\nonMouseOut={() =&#x26;gt; hoverOver(null)}\nonClick={(e) =&#x26;gt;\nsetRating(e.target.getAttribute(&#x26;quot;data-star-id&#x26;quot;) || rating)\n}\nonMouseOver={hoverOver}\n&#x26;gt;\n{Array.from({ length: 5 }, (v, i) =&#x26;gt; (\n&#x26;lt;Star\nstarId={i + 1}\nkey={`star_${i + 1}`}\nmarked={selection ? selection &#x26;gt;= i + 1 : rating &#x26;gt;= i + 1}\n/&#x26;gt;\n))}\n&#x26;lt;/div&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(&#x26;lt;StarRating value={2} /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Renders a tabbed menu and view component.</p>\n<ul>\n<li>Define a <code>Tabs</code> component that uses the <code>useState()</code> hook to initialize the value of the <code>bindIndex</code> state variable to <code>defaultIndex</code>.</li>\n<li>Define a <code>TabItem</code> component and filter <code>children</code> passed to the <code>Tabs</code> component to remove unnecessary nodes except for <code>TabItem</code> by identifying the function’s name.</li>\n<li>Define <code>changeTab</code>, which will be executed when clicking a <code>&lt;button&gt;</code> from the menu.</li>\n<li><code>changeTab</code> executes the passed callback, <code>onTabClick</code>, and updates <code>bindIndex</code> based on the clicked element.</li>\n<li>Use <code>Array.prototype.map()</code> on the collected nodes to render the menu and view of the tabs, using the value of <code>binIndex</code> to determine the active tab and apply the correct <code>className</code>.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb56\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb56-1\" title=\"1\"><span class=\"fu\">.tab-menu</span> <span class=\"op\">&gt;</span> button {</a>\n<a class=\"sourceLine\" id=\"cb56-2\" title=\"2\">  <span class=\"kw\">cursor</span>: <span class=\"dv\">pointer</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb56-3\" title=\"3\">  <span class=\"kw\">padding</span>: <span class=\"dv\">8</span><span class=\"dt\">px</span> <span class=\"dv\">16</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb56-4\" title=\"4\">  <span class=\"kw\">border</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb56-5\" title=\"5\">  <span class=\"kw\">border-bottom</span>: <span class=\"dv\">2</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"dv\">transparent</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb56-6\" title=\"6\">  <span class=\"kw\">background</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb56-7\" title=\"7\">}</a>\n<a class=\"sourceLine\" id=\"cb56-8\" title=\"8\"></a>\n<a class=\"sourceLine\" id=\"cb56-9\" title=\"9\"><span class=\"fu\">.tab-menu</span> <span class=\"op\">&gt;</span> button<span class=\"fu\">.focus</span> {</a>\n<a class=\"sourceLine\" id=\"cb56-10\" title=\"10\">  <span class=\"kw\">border-bottom</span>: <span class=\"dv\">2</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"cn\">#007bef</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb56-11\" title=\"11\">}</a>\n<a class=\"sourceLine\" id=\"cb56-12\" title=\"12\"></a>\n<a class=\"sourceLine\" id=\"cb56-13\" title=\"13\"><span class=\"fu\">.tab-menu</span> <span class=\"op\">&gt;</span> button<span class=\"in\">:hover</span> {</a>\n<a class=\"sourceLine\" id=\"cb56-14\" title=\"14\">  <span class=\"kw\">border-bottom</span>: <span class=\"dv\">2</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"cn\">#007bef</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb56-15\" title=\"15\">}</a>\n<a class=\"sourceLine\" id=\"cb56-16\" title=\"16\"></a>\n<a class=\"sourceLine\" id=\"cb56-17\" title=\"17\"><span class=\"fu\">.tab-content</span> {</a>\n<a class=\"sourceLine\" id=\"cb56-18\" title=\"18\">  <span class=\"kw\">display</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb56-19\" title=\"19\">}</a>\n<a class=\"sourceLine\" id=\"cb56-20\" title=\"20\"></a>\n<a class=\"sourceLine\" id=\"cb56-21\" title=\"21\"><span class=\"fu\">.tab-content.selected</span> {</a>\n<a class=\"sourceLine\" id=\"cb56-22\" title=\"22\">  <span class=\"kw\">display</span>: <span class=\"dv\">block</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb56-23\" title=\"23\">}</a>\n</div>\n<pre><code class=\"language-js\">const TabItem = (props) =&#x26;gt; &#x26;lt;div {...props} /&#x26;gt;;\n\nconst Tabs = ({ defaultIndex = 0, onTabClick, children }) =&#x26;gt; {\nconst [bindIndex, setBindIndex] = React.useState(defaultIndex);\nconst changeTab = (newIndex) =&#x26;gt; {\nif (typeof onItemClick === &#x26;quot;function&#x26;quot;) onItemClick(itemIndex);\nsetBindIndex(newIndex);\n};\nconst items = children.filter((item) =&#x26;gt; item.type.name === &#x26;quot;TabItem&#x26;quot;);\n\nreturn (\n&#x26;lt;div className=&#x26;quot;wrapper&#x26;quot;&#x26;gt;\n&#x26;lt;div className=&#x26;quot;tab-menu&#x26;quot;&#x26;gt;\n{items.map(({ props: { index, label } }) =&#x26;gt; (\n&#x26;lt;button\nkey={`tab-btn-${index}`}\nonClick={() =&#x26;gt; changeTab(index)}\nclassName={bindIndex === index ? &#x26;quot;focus&#x26;quot; : &#x26;quot;&#x26;quot;}\n&#x26;gt;\n{label}\n&#x26;lt;/button&#x26;gt;\n))}\n&#x26;lt;/div&#x26;gt;\n&#x26;lt;div className=&#x26;quot;tab-view&#x26;quot;&#x26;gt;\n{items.map(({ props }) =&#x26;gt; (\n&#x26;lt;div\n{...props}\nclassName={`tab-content ${ bindIndex === props.index ? &#x26;quot;selected&#x26;quot; : &#x26;quot;&#x26;quot; }`}\nkey={`tab-content-${props.index}`}\n/&#x26;gt;\n))}\n&#x26;lt;/div&#x26;gt;\n&#x26;lt;/div&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(\n  &#x26;lt;Tabs defaultIndex=&#x26;quot;1&#x26;quot; onTabClick={console.log}&#x26;gt;\n    &#x26;lt;TabItem label=&#x26;quot;A&#x26;quot; index=&#x26;quot;1&#x26;quot;&#x26;gt;\n      Lorem ipsum\n    &#x26;lt;/TabItem&#x26;gt;\n    &#x26;lt;TabItem label=&#x26;quot;B&#x26;quot; index=&#x26;quot;2&#x26;quot;&#x26;gt;\n      Dolor sit amet\n    &#x26;lt;/TabItem&#x26;gt;\n  &#x26;lt;/Tabs&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a tag input field.</p>\n<ul>\n<li>Define a <code>TagInput</code> component and use the <code>useState()</code> hook to initialize an array from <code>tags</code>.</li>\n<li>Use <code>Array.prototype.map()</code> on the collected nodes to render the list of tags.</li>\n<li>Define the <code>addTagData</code> method, which will be executed when pressing the <code>Enter</code> key.</li>\n<li>The <code>addTagData</code> method calls <code>setTagData</code> to add the new tag using the spread (<code>...</code>) operator to prepend the existing tags and add the new tag at the end of the <code>tagData</code> array.</li>\n<li>Define the <code>removeTagData</code> method, which will be executed on clicking the delete icon in the tag.</li>\n<li>Use <code>Array.prototype.filter()</code> in the <code>removeTagData</code> method to remove the tag using its <code>index</code> to filter it out from the <code>tagData</code> array.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb59\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb59-1\" title=\"1\"><span class=\"fu\">.tag-input</span> {</a>\n<a class=\"sourceLine\" id=\"cb59-2\" title=\"2\">  <span class=\"kw\">display</span>: flex<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-3\" title=\"3\">  <span class=\"kw\">flex-wrap</span>: wrap<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-4\" title=\"4\">  <span class=\"kw\">min-height</span>: <span class=\"dv\">48</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-5\" title=\"5\">  <span class=\"kw\">padding</span>: <span class=\"dv\">0</span> <span class=\"dv\">8</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-6\" title=\"6\">  <span class=\"kw\">border</span>: <span class=\"dv\">1</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"cn\">#d6d8da</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-7\" title=\"7\">  <span class=\"kw\">border-radius</span>: <span class=\"dv\">6</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-8\" title=\"8\">}</a>\n<a class=\"sourceLine\" id=\"cb59-9\" title=\"9\"></a>\n<a class=\"sourceLine\" id=\"cb59-10\" title=\"10\"><span class=\"fu\">.tag-input</span> input {</a>\n<a class=\"sourceLine\" id=\"cb59-11\" title=\"11\">  <span class=\"kw\">flex</span>: <span class=\"dv\">1</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-12\" title=\"12\">  <span class=\"kw\">border</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-13\" title=\"13\">  <span class=\"kw\">height</span>: <span class=\"dv\">46</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-14\" title=\"14\">  <span class=\"kw\">font-size</span>: <span class=\"dv\">14</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-15\" title=\"15\">  <span class=\"kw\">padding</span>: <span class=\"dv\">4</span><span class=\"dt\">px</span> <span class=\"dv\">0</span> <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-16\" title=\"16\">}</a>\n<a class=\"sourceLine\" id=\"cb59-17\" title=\"17\"></a>\n<a class=\"sourceLine\" id=\"cb59-18\" title=\"18\"><span class=\"fu\">.tag-input</span> input<span class=\"in\">:focus</span> {</a>\n<a class=\"sourceLine\" id=\"cb59-19\" title=\"19\">  <span class=\"kw\">outline</span>: <span class=\"dv\">transparent</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-20\" title=\"20\">}</a>\n<a class=\"sourceLine\" id=\"cb59-21\" title=\"21\"></a>\n<a class=\"sourceLine\" id=\"cb59-22\" title=\"22\"><span class=\"fu\">.tags</span> {</a>\n<a class=\"sourceLine\" id=\"cb59-23\" title=\"23\">  <span class=\"kw\">display</span>: flex<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-24\" title=\"24\">  <span class=\"kw\">flex-wrap</span>: wrap<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-25\" title=\"25\">  <span class=\"kw\">padding</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-26\" title=\"26\">  <span class=\"kw\">margin</span>: <span class=\"dv\">8</span><span class=\"dt\">px</span> <span class=\"dv\">0</span> <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-27\" title=\"27\">}</a>\n<a class=\"sourceLine\" id=\"cb59-28\" title=\"28\"></a>\n<a class=\"sourceLine\" id=\"cb59-29\" title=\"29\"><span class=\"fu\">.tag</span> {</a>\n<a class=\"sourceLine\" id=\"cb59-30\" title=\"30\">  <span class=\"kw\">width</span>: <span class=\"bu\">auto</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-31\" title=\"31\">  <span class=\"kw\">height</span>: <span class=\"dv\">32</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-32\" title=\"32\">  <span class=\"kw\">display</span>: flex<span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-33\" title=\"33\">  <span class=\"kw\">align-items</span>: <span class=\"dv\">center</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-34\" title=\"34\">  <span class=\"kw\">justify-content</span>: <span class=\"dv\">center</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-35\" title=\"35\">  <span class=\"kw\">color</span>: <span class=\"cn\">#fff</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-36\" title=\"36\">  <span class=\"kw\">padding</span>: <span class=\"dv\">0</span> <span class=\"dv\">8</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-37\" title=\"37\">  <span class=\"kw\">font-size</span>: <span class=\"dv\">14</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-38\" title=\"38\">  <span class=\"kw\">list-style</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-39\" title=\"39\">  <span class=\"kw\">border-radius</span>: <span class=\"dv\">6</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-40\" title=\"40\">  <span class=\"kw\">margin</span>: <span class=\"dv\">0</span> <span class=\"dv\">8</span><span class=\"dt\">px</span> <span class=\"dv\">8</span><span class=\"dt\">px</span> <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-41\" title=\"41\">  <span class=\"kw\">background</span>: <span class=\"cn\">#0052cc</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-42\" title=\"42\">}</a>\n<a class=\"sourceLine\" id=\"cb59-43\" title=\"43\"></a>\n<a class=\"sourceLine\" id=\"cb59-44\" title=\"44\"><span class=\"fu\">.tag-title</span> {</a>\n<a class=\"sourceLine\" id=\"cb59-45\" title=\"45\">  <span class=\"kw\">margin-top</span>: <span class=\"dv\">3</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-46\" title=\"46\">}</a>\n<a class=\"sourceLine\" id=\"cb59-47\" title=\"47\"></a>\n<a class=\"sourceLine\" id=\"cb59-48\" title=\"48\"><span class=\"fu\">.tag-close-icon</span> {</a>\n<a class=\"sourceLine\" id=\"cb59-49\" title=\"49\">  <span class=\"kw\">display</span>: <span class=\"dv\">block</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-50\" title=\"50\">  <span class=\"kw\">width</span>: <span class=\"dv\">16</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-51\" title=\"51\">  <span class=\"kw\">height</span>: <span class=\"dv\">16</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-52\" title=\"52\">  <span class=\"kw\">line-height</span>: <span class=\"dv\">16</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-53\" title=\"53\">  <span class=\"kw\">text-align</span>: <span class=\"dv\">center</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-54\" title=\"54\">  <span class=\"kw\">font-size</span>: <span class=\"dv\">14</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-55\" title=\"55\">  <span class=\"kw\">margin-left</span>: <span class=\"dv\">8</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-56\" title=\"56\">  <span class=\"kw\">color</span>: <span class=\"cn\">#0052cc</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-57\" title=\"57\">  <span class=\"kw\">border-radius</span>: <span class=\"dv\">50</span><span class=\"dt\">%</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-58\" title=\"58\">  <span class=\"kw\">background</span>: <span class=\"cn\">#fff</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-59\" title=\"59\">  <span class=\"kw\">cursor</span>: <span class=\"dv\">pointer</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb59-60\" title=\"60\">}</a>\n</div>\n<pre><code class=\"language-js\">const TagInput = ({ tags }) =&#x26;gt; {\n  const [tagData, setTagData] = React.useState(tags);\n  const removeTagData = (indexToRemove) =&#x26;gt; {\n    setTagData([...tagData.filter((_, index) =&#x26;gt; index !== indexToRemove)]);\n  };\n  const addTagData = (event) =&#x26;gt; {\n    if (event.target.value !== &#x26;quot;&#x26;quot;) {\n      setTagData([...tagData, event.target.value]);\n      event.target.value = &#x26;quot;&#x26;quot;;\n    }\n  };\n  return (\n    &#x26;lt;div className=&#x26;quot;tag-input&#x26;quot;&#x26;gt;\n      &#x26;lt;ul className=&#x26;quot;tags&#x26;quot;&#x26;gt;\n        {tagData.map((tag, index) =&#x26;gt; (\n          &#x26;lt;li key={index} className=&#x26;quot;tag&#x26;quot;&#x26;gt;\n            &#x26;lt;span className=&#x26;quot;tag-title&#x26;quot;&#x26;gt;{tag}&#x26;lt;/span&#x26;gt;\n            &#x26;lt;span\n              className=&#x26;quot;tag-close-icon&#x26;quot;\n              onClick={() =&#x26;gt; removeTagData(index)}\n            &#x26;gt;\n              x\n            &#x26;lt;/span&#x26;gt;\n          &#x26;lt;/li&#x26;gt;\n        ))}\n      &#x26;lt;/ul&#x26;gt;\n      &#x26;lt;input\n        type=&#x26;quot;text&#x26;quot;\n        onKeyUp={(event) =&#x26;gt; (event.key === &#x26;quot;Enter&#x26;quot; ? addTagData(event) : null)}\n        placeholder=&#x26;quot;Press enter to add a tag&#x26;quot;\n      /&#x26;gt;\n    &#x26;lt;/div&#x26;gt;\n  );\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(\n  &#x26;lt;TagInput tags={[&#x26;quot;Nodejs&#x26;quot;, &#x26;quot;MongoDB&#x26;quot;]} /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders an uncontrolled <code>&lt;textarea&gt;</code> element that uses a callback function to pass its value to the parent component.</p>\n<ul>\n<li>Use the <code>defaultValue</code> passed down from the parent as the uncontrolled input field’s initial value.</li>\n<li>Use the <code>onChange</code> event to fire the <code>onValueChange</code> callback and send the new value to the parent.</li>\n</ul>\n<pre><code class=\"language-js\">const TextArea = ({\n  cols = 20,\n  rows = 2,\n  defaultValue,\n  onValueChange,\n  ...rest\n}) =&#x26;gt; {\n  return (\n    &#x26;lt;textarea\n      cols={cols}\n      rows={rows}\n      defaultValue={defaultValue}\n      onChange={({ target: { value } }) =&#x26;gt; onValueChange(value)}\n      {...rest}\n    /&#x26;gt;\n  );\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">ReactDOM.render(\n  &#x26;lt;TextArea\n    placeholder=&#x26;quot;Insert some text here...&#x26;quot;\n    onValueChange={(val) =&#x26;gt; console.log(val)}\n  /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a toggle component.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to initialize the <code>isToggleOn</code> state variable to <code>defaultToggled</code>.</li>\n<li>Render an <code>&lt;input&gt;</code> and bind its <code>onClick</code> event to update the <code>isToggledOn</code> state variable, applying the appropriate <code>className</code> to the wrapping <code>&lt;label&gt;</code>.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb64\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb64-1\" title=\"1\"><span class=\"fu\">.toggle</span> input<span class=\"ex\">[type</span><span class=\"op\">=</span><span class=\"st\">&quot;checkbox&quot;</span><span class=\"ex\">]</span> {</a>\n<a class=\"sourceLine\" id=\"cb64-2\" title=\"2\">  <span class=\"kw\">display</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb64-3\" title=\"3\">}</a>\n<a class=\"sourceLine\" id=\"cb64-4\" title=\"4\"></a>\n<a class=\"sourceLine\" id=\"cb64-5\" title=\"5\"><span class=\"fu\">.toggle.on</span> {</a>\n<a class=\"sourceLine\" id=\"cb64-6\" title=\"6\">  <span class=\"kw\">background-color</span>: <span class=\"cn\">green</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb64-7\" title=\"7\">}</a>\n<a class=\"sourceLine\" id=\"cb64-8\" title=\"8\"></a>\n<a class=\"sourceLine\" id=\"cb64-9\" title=\"9\"><span class=\"fu\">.toggle.off</span> {</a>\n<a class=\"sourceLine\" id=\"cb64-10\" title=\"10\">  <span class=\"kw\">background-color</span>: <span class=\"cn\">red</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb64-11\" title=\"11\">}</a>\n</div>\n<pre><code class=\"language-js\">const Toggle = ({ defaultToggled = false }) =&#x26;gt; {\n  const [isToggleOn, setIsToggleOn] = React.useState(defaultToggled);\n\nreturn (\n&#x26;lt;label className={isToggleOn ? &#x26;quot;toggle on&#x26;quot; : &#x26;quot;toggle off&#x26;quot;}&#x26;gt;\n&#x26;lt;input\ntype=&#x26;quot;checkbox&#x26;quot;\nchecked={isToggleOn}\nonChange={() =&#x26;gt; setIsToggleOn(!isToggleOn)}\n/&#x26;gt;\n{isToggleOn ? &#x26;quot;ON&#x26;quot; : &#x26;quot;OFF&#x26;quot;}\n&#x26;lt;/label&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(&#x26;lt;Toggle /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Renders a tooltip component.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create the <code>show</code> variable and initialize it to <code>false</code>.</li>\n<li>Render a container element that contains the tooltip element and the <code>children</code> passed to the component.</li>\n<li>Handle the <code>onMouseEnter</code> and <code>onMouseLeave</code> methods, by altering the value of the <code>show</code> variable, toggling the <code>className</code> of the tooltip.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb67\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb67-1\" title=\"1\"><span class=\"fu\">.tooltip-container</span> {</a>\n<a class=\"sourceLine\" id=\"cb67-2\" title=\"2\">  <span class=\"kw\">position</span>: <span class=\"dv\">relative</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-3\" title=\"3\">}</a>\n<a class=\"sourceLine\" id=\"cb67-4\" title=\"4\"></a>\n<a class=\"sourceLine\" id=\"cb67-5\" title=\"5\"><span class=\"fu\">.tooltip-box</span> {</a>\n<a class=\"sourceLine\" id=\"cb67-6\" title=\"6\">  <span class=\"kw\">position</span>: <span class=\"dv\">absolute</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-7\" title=\"7\">  <span class=\"kw\">background</span>: <span class=\"fu\">rgba(</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0.7</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-8\" title=\"8\">  <span class=\"kw\">color</span>: <span class=\"cn\">#fff</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-9\" title=\"9\">  <span class=\"kw\">padding</span>: <span class=\"dv\">5</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-10\" title=\"10\">  <span class=\"kw\">border-radius</span>: <span class=\"dv\">5</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-11\" title=\"11\">  <span class=\"kw\">top</span>: <span class=\"fu\">calc(</span><span class=\"dv\">100</span><span class=\"dt\">%</span> <span class=\"op\">+</span> <span class=\"dv\">5</span><span class=\"dt\">px</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-12\" title=\"12\">  <span class=\"kw\">display</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-13\" title=\"13\">}</a>\n<a class=\"sourceLine\" id=\"cb67-14\" title=\"14\"></a>\n<a class=\"sourceLine\" id=\"cb67-15\" title=\"15\"><span class=\"fu\">.tooltip-box.visible</span> {</a>\n<a class=\"sourceLine\" id=\"cb67-16\" title=\"16\">  <span class=\"kw\">display</span>: <span class=\"dv\">block</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-17\" title=\"17\">}</a>\n<a class=\"sourceLine\" id=\"cb67-18\" title=\"18\"></a>\n<a class=\"sourceLine\" id=\"cb67-19\" title=\"19\"><span class=\"fu\">.tooltip-arrow</span> {</a>\n<a class=\"sourceLine\" id=\"cb67-20\" title=\"20\">  <span class=\"kw\">position</span>: <span class=\"dv\">absolute</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-21\" title=\"21\">  <span class=\"kw\">top</span>: <span class=\"dv\">-10</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-22\" title=\"22\">  <span class=\"kw\">left</span>: <span class=\"dv\">50</span><span class=\"dt\">%</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-23\" title=\"23\">  <span class=\"kw\">border-width</span>: <span class=\"dv\">5</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-24\" title=\"24\">  <span class=\"kw\">border-style</span>: <span class=\"dv\">solid</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-25\" title=\"25\">  <span class=\"kw\">border-color</span>: <span class=\"dv\">transparent</span> <span class=\"dv\">transparent</span> <span class=\"fu\">rgba(</span><span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0</span><span class=\"op\">,</span> <span class=\"dv\">0.7</span><span class=\"fu\">)</span> <span class=\"dv\">transparent</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb67-26\" title=\"26\">}</a>\n</div>\n<pre><code class=\"language-js\">const Tooltip = ({ children, text, ...rest }) =&#x26;gt; {\n  const [show, setShow] = React.useState(false);\n\nreturn (\n&#x26;lt;div className=&#x26;quot;tooltip-container&#x26;quot;&#x26;gt;\n&#x26;lt;div className={show ? &#x26;quot;tooltip-box visible&#x26;quot; : &#x26;quot;tooltip-box&#x26;quot;}&#x26;gt;\n{text}\n&#x26;lt;span className=&#x26;quot;tooltip-arrow&#x26;quot; /&#x26;gt;\n&#x26;lt;/div&#x26;gt;\n&#x26;lt;div\nonMouseEnter={() =&#x26;gt; setShow(true)}\nonMouseLeave={() =&#x26;gt; setShow(false)}\n{...rest}\n&#x26;gt;\n{children}\n&#x26;lt;/div&#x26;gt;\n&#x26;lt;/div&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nReactDOM.render(\n  &#x26;lt;Tooltip text=&#x26;quot;Simple tooltip&#x26;quot;&#x26;gt;\n    &#x26;lt;button&#x26;gt;Hover me!&#x26;lt;/button&#x26;gt;\n  &#x26;lt;/Tooltip&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders a tree view of a JSON object or array with collapsible content.</p>\n<ul>\n<li>Use the value of the <code>toggled</code> prop to determine the initial state of the content (collapsed/expanded).</li>\n<li>Use the <code>useState()</code> hook to create the <code>isToggled</code> state variable and give it the value of the <code>toggled</code> prop initially.</li>\n<li>Render a <code>&lt;span&gt;</code> element and bind its <code>onClick</code> event to alter the component’s <code>isToggled</code> state.</li>\n<li>Determine the appearance of the component, based on <code>isParentToggled</code>, <code>isToggled</code>, <code>name</code> and checking for <code>Array.isArray()</code> on <code>data</code>.</li>\n<li>For each child in <code>data</code>, determine if it is an object or array and recursively render a sub-tree or a text element with the appropriate style.</li>\n</ul>\n<div class=\"sourceCode\" id=\"cb70\"><pre class=\"sourceCode css\"><code class=\"sourceCode css\"><a class=\"sourceLine\" id=\"cb70-1\" title=\"1\"><span class=\"fu\">.tree-element</span> {</a>\n<a class=\"sourceLine\" id=\"cb70-2\" title=\"2\">  <span class=\"kw\">margin</span>: <span class=\"dv\">0</span> <span class=\"dv\">0</span> <span class=\"dv\">0</span> <span class=\"dv\">4</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-3\" title=\"3\">  <span class=\"kw\">position</span>: <span class=\"dv\">relative</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-4\" title=\"4\">}</a>\n<a class=\"sourceLine\" id=\"cb70-5\" title=\"5\"></a>\n<a class=\"sourceLine\" id=\"cb70-6\" title=\"6\"><span class=\"fu\">.tree-element.is-child</span> {</a>\n<a class=\"sourceLine\" id=\"cb70-7\" title=\"7\">  <span class=\"kw\">margin-left</span>: <span class=\"dv\">16</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-8\" title=\"8\">}</a>\n<a class=\"sourceLine\" id=\"cb70-9\" title=\"9\"></a>\n<a class=\"sourceLine\" id=\"cb70-10\" title=\"10\">div<span class=\"fu\">.tree-element</span><span class=\"in\">:before</span> {</a>\n<a class=\"sourceLine\" id=\"cb70-11\" title=\"11\">  <span class=\"kw\">content</span>: <span class=\"st\">&quot;&quot;</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-12\" title=\"12\">  <span class=\"kw\">position</span>: <span class=\"dv\">absolute</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-13\" title=\"13\">  <span class=\"kw\">top</span>: <span class=\"dv\">24</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-14\" title=\"14\">  <span class=\"kw\">left</span>: <span class=\"dv\">1</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-15\" title=\"15\">  <span class=\"kw\">height</span>: <span class=\"fu\">calc(</span><span class=\"dv\">100</span><span class=\"dt\">%</span> <span class=\"op\">-</span> <span class=\"dv\">48</span><span class=\"dt\">px</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-16\" title=\"16\">  <span class=\"kw\">border-left</span>: <span class=\"dv\">1</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"cn\">gray</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-17\" title=\"17\">}</a>\n<a class=\"sourceLine\" id=\"cb70-18\" title=\"18\"></a>\n<a class=\"sourceLine\" id=\"cb70-19\" title=\"19\">p<span class=\"fu\">.tree-element</span> {</a>\n<a class=\"sourceLine\" id=\"cb70-20\" title=\"20\">  <span class=\"kw\">margin-left</span>: <span class=\"dv\">16</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-21\" title=\"21\">}</a>\n<a class=\"sourceLine\" id=\"cb70-22\" title=\"22\"></a>\n<a class=\"sourceLine\" id=\"cb70-23\" title=\"23\"><span class=\"fu\">.toggler</span> {</a>\n<a class=\"sourceLine\" id=\"cb70-24\" title=\"24\">  <span class=\"kw\">position</span>: <span class=\"dv\">absolute</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-25\" title=\"25\">  <span class=\"kw\">top</span>: <span class=\"dv\">10</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-26\" title=\"26\">  <span class=\"kw\">left</span>: <span class=\"dv\">0</span><span class=\"dt\">px</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-27\" title=\"27\">  <span class=\"kw\">width</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-28\" title=\"28\">  <span class=\"kw\">height</span>: <span class=\"dv\">0</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-29\" title=\"29\">  <span class=\"kw\">border-top</span>: <span class=\"dv\">4</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"dv\">transparent</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-30\" title=\"30\">  <span class=\"kw\">border-bottom</span>: <span class=\"dv\">4</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"dv\">transparent</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-31\" title=\"31\">  <span class=\"kw\">border-left</span>: <span class=\"dv\">5</span><span class=\"dt\">px</span> <span class=\"dv\">solid</span> <span class=\"cn\">gray</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-32\" title=\"32\">  <span class=\"kw\">cursor</span>: <span class=\"dv\">pointer</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-33\" title=\"33\">}</a>\n<a class=\"sourceLine\" id=\"cb70-34\" title=\"34\"></a>\n<a class=\"sourceLine\" id=\"cb70-35\" title=\"35\"><span class=\"fu\">.toggler.closed</span> {</a>\n<a class=\"sourceLine\" id=\"cb70-36\" title=\"36\">  <span class=\"kw\">transform</span>: <span class=\"fu\">rotate(</span><span class=\"dv\">90</span><span class=\"dt\">deg</span><span class=\"fu\">)</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-37\" title=\"37\">}</a>\n<a class=\"sourceLine\" id=\"cb70-38\" title=\"38\"></a>\n<a class=\"sourceLine\" id=\"cb70-39\" title=\"39\"><span class=\"fu\">.collapsed</span> {</a>\n<a class=\"sourceLine\" id=\"cb70-40\" title=\"40\">  <span class=\"kw\">display</span>: <span class=\"dv\">none</span><span class=\"op\">;</span></a>\n<a class=\"sourceLine\" id=\"cb70-41\" title=\"41\">}</a>\n</div>\n<pre><code class=\"language-js\">const TreeView = ({\n  data,\n  toggled = true,\n  name = null,\n  isLast = true,\n  isChildElement = false,\n  isParentToggled = true,\n}) =&#x26;gt; {\n  const [isToggled, setIsToggled] = React.useState(toggled);\n  const isDataArray = Array.isArray(data);\n\nreturn (\n&#x26;lt;div\nclassName={`tree-element ${isParentToggled &#x26;amp;&#x26;amp; &#x26;quot;collapsed&#x26;quot;} ${ isChildElement &#x26;amp;&#x26;amp; &#x26;quot;is-child&#x26;quot; }`}\n&#x26;gt;\n&#x26;lt;span\nclassName={isToggled ? &#x26;quot;toggler&#x26;quot; : &#x26;quot;toggler closed&#x26;quot;}\nonClick={() =&#x26;gt; setIsToggled(!isToggled)}\n/&#x26;gt;\n{name ? &#x26;lt;strong&#x26;gt;&#x26;amp;nbsp;&#x26;amp;nbsp;{name}: &#x26;lt;/strong&#x26;gt; : &#x26;lt;span&#x26;gt;&#x26;amp;nbsp;&#x26;amp;nbsp;&#x26;lt;/span&#x26;gt;}\n{isDataArray ? &#x26;quot;[&#x26;quot; : &#x26;quot;{&#x26;quot;}\n{!isToggled &#x26;amp;&#x26;amp; &#x26;quot;...&#x26;quot;}\n{Object.keys(data).map((v, i, a) =&#x26;gt;\ntypeof data[v] === &#x26;quot;object&#x26;quot; ? (\n&#x26;lt;TreeView\nkey={`${name}-${v}-${i}`}\ndata={data[v]}\nisLast={i === a.length - 1}\nname={isDataArray ? null : v}\nisChildElement\nisParentToggled={isParentToggled &#x26;amp;&#x26;amp; isToggled}\n/&#x26;gt;\n) : (\n&#x26;lt;p\nkey={`${name}-${v}-${i}`}\nclassName={isToggled ? &#x26;quot;tree-element&#x26;quot; : &#x26;quot;tree-element collapsed&#x26;quot;}\n&#x26;gt;\n{isDataArray ? &#x26;quot;&#x26;quot; : &#x26;lt;strong&#x26;gt;{v}: &#x26;lt;/strong&#x26;gt;}\n{data[v]}\n{i === a.length - 1 ? &#x26;quot;&#x26;quot; : &#x26;quot;,&#x26;quot;}\n&#x26;lt;/p&#x26;gt;\n)\n)}\n{isDataArray ? &#x26;quot;]&#x26;quot; : &#x26;quot;}&#x26;quot;}\n{!isLast ? &#x26;quot;,&#x26;quot; : &#x26;quot;&#x26;quot;}\n&#x26;lt;/div&#x26;gt;\n);\n};\n\n\n\n&#x3C;hr />\n\n```js\n\nconst data = {\n  lorem: {\n    ipsum: &#x26;quot;dolor sit&#x26;quot;,\n    amet: {\n      consectetur: &#x26;quot;adipiscing&#x26;quot;,\n      elit: [\n        &#x26;quot;duis&#x26;quot;,\n        &#x26;quot;vitae&#x26;quot;,\n        {\n          semper: &#x26;quot;orci&#x26;quot;,\n        },\n        {\n          est: &#x26;quot;sed ornare&#x26;quot;,\n        },\n        &#x26;quot;etiam&#x26;quot;,\n        [&#x26;quot;laoreet&#x26;quot;, &#x26;quot;tincidunt&#x26;quot;],\n        [&#x26;quot;vestibulum&#x26;quot;, &#x26;quot;ante&#x26;quot;],\n      ],\n    },\n    ipsum: &#x26;quot;primis&#x26;quot;,\n  },\n};\nReactDOM.render(\n  &#x26;lt;TreeView data={data} name=&#x26;quot;data&#x26;quot; /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Renders an uncontrolled <code>&lt;input&gt;</code> element that uses a callback function to inform its parent about value updates.</p>\n<ul>\n<li>Use the <code>defaultValue</code> passed down from the parent as the uncontrolled input field’s initial value.</li>\n<li>Use the <code>onChange</code> event to fire the <code>onValueChange</code> callback and send the new value to the parent.</li>\n</ul>\n<pre><code class=\"language-js\">const UncontrolledInput = ({ defaultValue, onValueChange, ...rest }) =&#x26;gt; {\n  return (\n    &#x26;lt;input\n      defaultValue={defaultValue}\n      onChange={({ target: { value } }) =&#x26;gt; onValueChange(value)}\n      {...rest}\n    /&#x26;gt;\n  );\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">ReactDOM.render(\n  &#x26;lt;UncontrolledInput\n    type=&#x26;quot;text&#x26;quot;\n    placeholder=&#x26;quot;Insert some text here...&#x26;quot;\n    onValueChange={console.log}\n  /&#x26;gt;,\n  document.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Handles asynchronous calls.</p>\n<ul>\n<li>Create a custom hook that takes a handler function, <code>fn</code>.</li>\n<li>Define a reducer function and an initial state for the custom hook’s state.</li>\n<li>Use the <code>useReducer()</code> hook to initialize the <code>state</code> variable and the <code>dispatch</code> function.</li>\n<li>Define an asynchronous <code>run</code> function that will run the provided callback, <code>fn</code>, while using <code>dispatch</code> to update <code>state</code> as necessary.</li>\n<li>Return an object containing the properties of <code>state</code> (<code>value</code>, <code>error</code> and <code>loading</code>) and the <code>run</code> function.</li>\n</ul>\n<pre><code class=\"language-js\">const useAsync = (fn) =&#x26;gt; {\n  const initialState = { loading: false, error: null, value: null };\n  const stateReducer = (_, action) =&#x26;gt; {\n    switch (action.type) {\n      case &#x26;quot;start&#x26;quot;:\n        return { loading: true, error: null, value: null };\n      case &#x26;quot;finish&#x26;quot;:\n        return { loading: false, error: null, value: action.value };\n      case &#x26;quot;error&#x26;quot;:\n        return { loading: false, error: action.error, value: null };\n    }\n  };\n\nconst [state, dispatch] = React.useReducer(stateReducer, initialState);\n\nconst run = async (args = null) =&#x26;gt; {\ntry {\ndispatch({ type: &#x26;quot;start&#x26;quot; });\nconst value = await fn(args);\ndispatch({ type: &#x26;quot;finish&#x26;quot;, value });\n} catch (error) {\ndispatch({ type: &#x26;quot;error&#x26;quot;, error });\n}\n};\n\nreturn { ...state, run };\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const RandomImage = (props) =&#x26;gt; {\n  const imgFetch = useAsync((url) =&#x26;gt;\n    fetch(url).then((response) =&#x26;gt; response.json())\n  );\n\nreturn (\n&#x26;lt;div&#x26;gt;\n&#x26;lt;button\nonClick={() =&#x26;gt; imgFetch.run(&#x26;quot;https://dog.ceo/api/breeds/image/random&#x26;quot;)}\ndisabled={imgFetch.isLoading}\n&#x26;gt;\nLoad image\n&#x26;lt;/button&#x26;gt;\n&#x26;lt;br /&#x26;gt;\n{imgFetch.loading &#x26;amp;&#x26;amp; &#x26;lt;div&#x26;gt;Loading...&#x26;lt;/div&#x26;gt;}\n{imgFetch.error &#x26;amp;&#x26;amp; &#x26;lt;div&#x26;gt;Error {imgFetch.error}&#x26;lt;/div&#x26;gt;}\n{imgFetch.value &#x26;amp;&#x26;amp; (\n&#x26;lt;img\nsrc={imgFetch.value.message}\nalt=&#x26;quot;avatar&#x26;quot;\nwidth={400}\nheight=&#x26;quot;auto&#x26;quot;\n/&#x26;gt;\n)}\n&#x26;lt;/div&#x26;gt;\n);\n};\n\nReactDOM.render(&#x26;lt;RandomImage /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Handles the event of clicking inside the wrapped component.</p>\n<ul>\n<li>Create a custom hook that takes a <code>ref</code> and a <code>callback</code> to handle the <code>'click'</code> event.</li>\n<li>Use the <code>useEffect()</code> hook to append and clean up the <code>click</code> event.</li>\n<li>Use the <code>useRef()</code> hook to create a <code>ref</code> for your click component and pass it to the <code>useClickInside</code> hook.</li>\n</ul>\n<pre><code class=\"language-js\">const useClickInside = (ref, callback) =&#x26;gt; {\n  const handleClick = (e) =&#x26;gt; {\n    if (ref.current &#x26;amp;&#x26;amp; ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n  React.useEffect(() =&#x26;gt; {\n    document.addEventListener(&#x26;quot;click&#x26;quot;, handleClick);\n    return () =&#x26;gt; {\n      document.removeEventListener(&#x26;quot;click&#x26;quot;, handleClick);\n    };\n  });\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const ClickBox = ({ onClickInside }) =&#x26;gt; {\n  const clickRef = React.useRef();\n  useClickInside(clickRef, onClickInside);\n  return (\n    &#x26;lt;div\n      className=&#x26;quot;click-box&#x26;quot;\n      ref={clickRef}\n      style={{\n        border: &#x26;quot;2px dashed orangered&#x26;quot;,\n        height: 200,\n        width: 400,\n        display: &#x26;quot;flex&#x26;quot;,\n        justifyContent: &#x26;quot;center&#x26;quot;,\n        alignItems: &#x26;quot;center&#x26;quot;,\n      }}\n    &#x26;gt;\n      &#x26;lt;p&#x26;gt;Click inside this element&#x26;lt;/p&#x26;gt;\n    &#x26;lt;/div&#x26;gt;\n  );\n};\n\nReactDOM.render(\n&#x26;lt;ClickBox onClickInside={() =&#x26;gt; alert(&#x26;quot;click inside&#x26;quot;)} /&#x26;gt;,\ndocument.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Handles the event of clicking outside of the wrapped component.</p>\n<ul>\n<li>Create a custom hook that takes a <code>ref</code> and a <code>callback</code> to handle the <code>click</code> event.</li>\n<li>Use the <code>useEffect()</code> hook to append and clean up the <code>click</code> event.</li>\n<li>Use the <code>useRef()</code> hook to create a <code>ref</code> for your click component and pass it to the <code>useClickOutside</code> hook.</li>\n</ul>\n<pre><code class=\"language-js\">const useClickOutside = (ref, callback) =&#x26;gt; {\n  const handleClick = (e) =&#x26;gt; {\n    if (ref.current &#x26;amp;&#x26;amp; !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n  React.useEffect(() =&#x26;gt; {\n    document.addEventListener(&#x26;quot;click&#x26;quot;, handleClick);\n    return () =&#x26;gt; {\n      document.removeEventListener(&#x26;quot;click&#x26;quot;, handleClick);\n    };\n  });\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const ClickBox = ({ onClickOutside }) =&#x26;gt; {\n  const clickRef = React.useRef();\n  useClickOutside(clickRef, onClickOutside);\n  return (\n    &#x26;lt;div\n      className=&#x26;quot;click-box&#x26;quot;\n      ref={clickRef}\n      style={{\n        border: &#x26;quot;2px dashed orangered&#x26;quot;,\n        height: 200,\n        width: 400,\n        display: &#x26;quot;flex&#x26;quot;,\n        justifyContent: &#x26;quot;center&#x26;quot;,\n        alignItems: &#x26;quot;center&#x26;quot;,\n      }}\n    &#x26;gt;\n      &#x26;lt;p&#x26;gt;Click out of this element&#x26;lt;/p&#x26;gt;\n    &#x26;lt;/div&#x26;gt;\n  );\n};\n\nReactDOM.render(\n&#x26;lt;ClickBox onClickOutside={() =&#x26;gt; alert(&#x26;quot;click outside&#x26;quot;)} /&#x26;gt;,\ndocument.getElementById(&#x26;quot;root&#x26;quot;)\n);\n</code></pre>\n<hr />\n<p>Executes a callback immediately after a component is mounted.</p>\n<ul>\n<li>Use <code>useEffect()</code> with an empty array as the second argument to execute the provided callback only once when the component is mounted.</li>\n<li>Behaves like the <code>componentDidMount()</code> lifecycle method of class components.</li>\n</ul>\n<pre><code class=\"language-js\">const useComponentDidMount = (onMountHandler) =&#x26;gt; {\n  React.useEffect(() =&#x26;gt; {\n    onMountHandler();\n  }, []);\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const Mounter = () =&#x26;gt; {\n  useComponentDidMount(() =&#x26;gt; console.log(&#x26;quot;Component did mount&#x26;quot;));\n\nreturn &#x26;lt;div&#x26;gt;Check the console!&#x26;lt;/div&#x26;gt;;\n};\n\nReactDOM.render(&#x26;lt;Mounter /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Executes a callback immediately before a component is unmounted and destroyed.</p>\n<ul>\n<li>Use <code>useEffect()</code> with an empty array as the second argument and return the provided callback to be executed only once before cleanup.</li>\n<li>Behaves like the <code>componentWillUnmount()</code> lifecycle method of class components.</li>\n</ul>\n<pre><code class=\"language-js\">const useComponentWillUnmount = (onUnmountHandler) =&#x26;gt; {\n  React.useEffect(\n    () =&#x26;gt; () =&#x26;gt; {\n      onUnmountHandler();\n    },\n    []\n  );\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const Unmounter = () =&#x26;gt; {\n  useComponentWillUnmount(() =&#x26;gt; console.log(&#x26;quot;Component will unmount&#x26;quot;));\n\nreturn &#x26;lt;div&#x26;gt;Check the console!&#x26;lt;/div&#x26;gt;;\n};\n\nReactDOM.render(&#x26;lt;Unmounter /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Copies the given text to the clipboard.</p>\n<ul>\n<li>Use the <a href=\"/js/s/copy-to-clipboard/\">copyToClipboard</a> snippet to copy the text to clipboard.</li>\n<li>Use the <code>useState()</code> hook to initialize the <code>copied</code> variable.</li>\n<li>Use the <code>useCallback()</code> hook to create a callback for the <code>copyToClipboard</code> method.</li>\n<li>Use the <code>useEffect()</code> hook to reset the <code>copied</code> state variable if the <code>text</code> changes.</li>\n<li>Return the <code>copied</code> state variable and the <code>copy</code> callback.</li>\n</ul>\n<pre><code class=\"language-js\">const useCopyToClipboard = (text) =&#x26;gt; {\n  const copyToClipboard = (str) =&#x26;gt; {\n    const el = document.createElement(&#x26;quot;textarea&#x26;quot;);\n    el.value = str;\n    el.setAttribute(&#x26;quot;readonly&#x26;quot;, &#x26;quot;&#x26;quot;);\n    el.style.position = &#x26;quot;absolute&#x26;quot;;\n    el.style.left = &#x26;quot;-9999px&#x26;quot;;\n    document.body.appendChild(el);\n    const selected =\n      document.getSelection().rangeCount &#x26;gt; 0\n        ? document.getSelection().getRangeAt(0)\n        : false;\n    el.select();\n    const success = document.execCommand(&#x26;quot;copy&#x26;quot;);\n    document.body.removeChild(el);\n    if (selected) {\n      document.getSelection().removeAllRanges();\n      document.getSelection().addRange(selected);\n    }\n    return success;\n  };\n\nconst [copied, setCopied] = React.useState(false);\n\nconst copy = React.useCallback(() =&#x26;gt; {\nif (!copied) setCopied(copyToClipboard(text));\n}, [text]);\nReact.useEffect(() =&#x26;gt; () =&#x26;gt; setCopied(false), [text]);\n\nreturn [copied, copy];\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const TextCopy = (props) =&#x26;gt; {\n  const [copied, copy] = useCopyToClipboard(&#x26;quot;Lorem ipsum&#x26;quot;);\n  return (\n    &#x26;lt;div&#x26;gt;\n      &#x26;lt;button onClick={copy}&#x26;gt;Click to copy&#x26;lt;/button&#x26;gt;\n      &#x26;lt;span&#x26;gt;{copied &#x26;amp;&#x26;amp; &#x26;quot;Copied!&#x26;quot;}&#x26;lt;/span&#x26;gt;\n    &#x26;lt;/div&#x26;gt;\n  );\n};\n\nReactDOM.render(&#x26;lt;TextCopy /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Debounces the given value.</p>\n<ul>\n<li>Create a custom hook that takes a <code>value</code> and a <code>delay</code>.</li>\n<li>Use the <code>useState()</code> hook to store the debounced value.</li>\n<li>Use the <code>useEffect()</code> hook to update the debounced value every time <code>value</code> is updated.</li>\n<li>Use <code>setTimeout()</code> to create a timeout that delays invoking the setter of the previous state variable by <code>delay</code> ms.</li>\n<li>Use <code>clearTimeout()</code> to clean up when dismounting the component.</li>\n<li>This is particularly useful when dealing with user input.</li>\n</ul>\n<pre><code class=\"language-js\">const useDebounce = (value, delay) =&#x26;gt; {\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n\nReact.useEffect(() =&#x26;gt; {\nconst handler = setTimeout(() =&#x26;gt; {\nsetDebouncedValue(value);\n}, delay);\n\n    return () =&#x26;gt; {\n      clearTimeout(handler);\n    };\n\n}, [value]);\n\nreturn debouncedValue;\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const Counter = () =&#x26;gt; {\n  const [value, setValue] = React.useState(0);\n  const lastValue = useDebounce(value, 500);\n\nreturn (\n&#x26;lt;div&#x26;gt;\n&#x26;lt;p&#x26;gt;\nCurrent: {value} - Debounced: {lastValue}\n&#x26;lt;/p&#x26;gt;\n&#x26;lt;button onClick={() =&#x26;gt; setValue(value + 1)}&#x26;gt;Increment&#x26;lt;/button&#x26;gt;\n&#x26;lt;/div&#x26;gt;\n);\n};\n\nReactDOM.render(&#x26;lt;Counter /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Implements <code>fetch</code> in a declarative manner.</p>\n<ul>\n<li>Create a custom hook that takes a <code>url</code> and <code>options</code>.</li>\n<li>Use the <code>useState()</code> hook to initialize the <code>response</code> and <code>error</code> state variables.</li>\n<li>Use the <code>useEffect()</code> hook to asynchronously call <code>fetch()</code> and update the state variables accordingly.</li>\n<li>Return an object containing the <code>response</code> and <code>error</code> state variables.</li>\n</ul>\n<pre><code class=\"language-js\">const useFetch = (url, options) =&#x26;gt; {\n  const [response, setResponse] = React.useState(null);\n  const [error, setError] = React.useState(null);\n\nReact.useEffect(() =&#x26;gt; {\nconst fetchData = async () =&#x26;gt; {\ntry {\nconst res = await fetch(url, options);\nconst json = await res.json();\nsetResponse(json);\n} catch (error) {\nsetError(error);\n}\n};\nfetchData();\n}, []);\n\nreturn { response, error };\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const ImageFetch = (props) =&#x26;gt; {\n  const res = useFetch(&#x26;quot;https://dog.ceo/api/breeds/image/random&#x26;quot;, {});\n  if (!res.response) {\n    return &#x26;lt;div&#x26;gt;Loading...&#x26;lt;/div&#x26;gt;;\n  }\n  const imageUrl = res.response.message;\n  return (\n    &#x26;lt;div&#x26;gt;\n      &#x26;lt;img src={imageUrl} alt=&#x26;quot;avatar&#x26;quot; width={400} height=&#x26;quot;auto&#x26;quot; /&#x26;gt;\n    &#x26;lt;/div&#x26;gt;\n  );\n};\n\nReactDOM.render(&#x26;lt;ImageFetch /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Implements <code>setInterval</code> in a declarative manner.</p>\n<ul>\n<li>Create a custom hook that takes a <code>callback</code> and a <code>delay</code>.</li>\n<li>Use the <code>useRef()</code> hook to create a <code>ref</code> for the callback function.</li>\n<li>Use a <code>useEffect()</code> hook to remember the latest <code>callback</code> whenever it changes.</li>\n<li>Use a <code>useEffect()</code> hook dependent on <code>delay</code> to set up the interval and clean up.</li>\n</ul>\n<pre><code class=\"language-js\">const useInterval = (callback, delay) =&#x26;gt; {\n  const savedCallback = React.useRef();\n\nReact.useEffect(() =&#x26;gt; {\nsavedCallback.current = callback;\n}, [callback]);\n\nReact.useEffect(() =&#x26;gt; {\nfunction tick() {\nsavedCallback.current();\n}\nif (delay !== null) {\nlet id = setInterval(tick, delay);\nreturn () =&#x26;gt; clearInterval(id);\n}\n}, [delay]);\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const Timer = (props) =&#x26;gt; {\n  const [seconds, setSeconds] = React.useState(0);\n  useInterval(() =&#x26;gt; {\n    setSeconds(seconds + 1);\n  }, 1000);\n\nreturn &#x26;lt;p&#x26;gt;{seconds}&#x26;lt;/p&#x26;gt;;\n};\n\nReactDOM.render(&#x26;lt;Timer /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Checks if the current environment matches a given media query and returns the appropriate value.</p>\n<ul>\n<li>Check if <code>window</code> and <code>window.matchMedia</code> exist, return <code>whenFalse</code> if not (e.g. SSR environment or unsupported browser).</li>\n<li>Use <code>window.matchMedia()</code> to match the given <code>query</code>, cast its <code>matches</code> property to a boolean and store in a state variable, <code>match</code>, using the <code>useState()</code> hook.</li>\n<li>Use the <code>useEffect()</code> hook to add a listener for changes and to clean up the listeners after the hook is destroyed.</li>\n<li>Return either <code>whenTrue</code> or <code>whenFalse</code> based on the value of <code>match</code>.</li>\n</ul>\n<pre><code class=\"language-js\">const useMediaQuery = (query, whenTrue, whenFalse) =&#x26;gt; {\n  if (typeof window === &#x26;quot;undefined&#x26;quot; || typeof window.matchMedia === &#x26;quot;undefined&#x26;quot;)\n    return whenFalse;\n\nconst mediaQuery = window.matchMedia(query);\nconst [match, setMatch] = React.useState(!!mediaQuery.matches);\n\nReact.useEffect(() =&#x26;gt; {\nconst handler = () =&#x26;gt; setMatch(!!mediaQuery.matches);\nmediaQuery.addListener(handler);\nreturn () =&#x26;gt; mediaQuery.removeListener(handler);\n}, []);\n\nreturn match ? whenTrue : whenFalse;\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const ResponsiveText = () =&#x26;gt; {\n  const text = useMediaQuery(\n    &#x26;quot;(max-width: 400px)&#x26;quot;,\n    &#x26;quot;Less than 400px wide&#x26;quot;,\n    &#x26;quot;More than 400px wide&#x26;quot;\n  );\n\nreturn &#x26;lt;span&#x26;gt;{text}&#x26;lt;/span&#x26;gt;;\n};\n\nReactDOM.render(&#x26;lt;ResponsiveText /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Checks if the client is online or offline.</p>\n<ul>\n<li>Create a function, <code>getOnLineStatus</code>, that uses the <code>NavigatorOnLine</code> web API to get the online status of the client.</li>\n<li>Use the <code>useState()</code> hook to create an appropriate state variable, <code>status</code>, and setter.</li>\n<li>Use the <code>useEffect()</code> hook to add listeners for appropriate events, updating state, and cleanup those listeners when unmounting.</li>\n<li>Finally return the <code>status</code> state variable.</li>\n</ul>\n<pre><code class=\"language-js\">const getOnLineStatus = () =&#x26;gt;\n  typeof navigator !== &#x26;quot;undefined&#x26;quot; &#x26;amp;&#x26;amp; typeof navigator.onLine === &#x26;quot;boolean&#x26;quot;\n    ? navigator.onLine\n    : true;\n\nconst useNavigatorOnLine = () =&#x26;gt; {\nconst [status, setStatus] = React.useState(getOnLineStatus());\n\nconst setOnline = () =&#x26;gt; setStatus(true);\nconst setOffline = () =&#x26;gt; setStatus(false);\n\nReact.useEffect(() =&#x26;gt; {\nwindow.addEventListener(&#x26;quot;online&#x26;quot;, setOnline);\nwindow.addEventListener(&#x26;quot;offline&#x26;quot;, setOffline);\n\n    return () =&#x26;gt; {\n      window.removeEventListener(&#x26;quot;online&#x26;quot;, setOnline);\n      window.removeEventListener(&#x26;quot;offline&#x26;quot;, setOffline);\n    };\n\n}, []);\n\nreturn status;\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const StatusIndicator = () =&#x26;gt; {\n  const isOnline = useNavigatorOnLine();\n\nreturn &#x26;lt;span&#x26;gt;You are {isOnline ? &#x26;quot;online&#x26;quot; : &#x26;quot;offline&#x26;quot;}.&#x26;lt;/span&#x26;gt;;\n};\n\nReactDOM.render(&#x26;lt;StatusIndicator /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Returns a stateful value, persisted in <code>localStorage</code>, and a function to update it.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to initialize the <code>value</code> to <code>defaultValue</code>.</li>\n<li>Use the <code>useRef()</code> hook to create a ref that will hold the <code>name</code> of the value in <code>localStorage</code>.</li>\n<li>Use 3 instances of the <code>useEffect()</code> hook for initialization, <code>value</code> change and <code>name</code> change respectively.</li>\n<li>When the component is first mounted, use <code>Storage.getItem()</code> to update <code>value</code> if there’s a stored value or <code>Storage.setItem()</code> to persist the current value.</li>\n<li>When <code>value</code> is updated, use <code>Storage.setItem()</code> to store the new value.</li>\n<li>When <code>name</code> is updated, use <code>Storage.setItem()</code> to create the new key, update the <code>nameRef</code> and use <code>Storage.removeItem()</code> to remove the previous key from <code>localStorage</code>.</li>\n<li><strong>NOTE:</strong> The hook is meant for use with primitive values (i.e. not objects) and doesn’t account for changes to <code>localStorage</code> due to other code. Both of these issues can be easily handled (e.g. JSON serialization and handling the <code>'storage'</code> event).</li>\n</ul>\n<pre><code class=\"language-js\">const usePersistedState = (name, defaultValue) =&#x26;gt; {\n  const [value, setValue] = React.useState(defaultValue);\n  const nameRef = React.useRef(name);\n\nReact.useEffect(() =&#x26;gt; {\ntry {\nconst storedValue = localStorage.getItem(name);\nif (storedValue !== null) setValue(storedValue);\nelse localStorage.setItem(name, defaultValue);\n} catch {\nsetValue(defaultValue);\n}\n}, []);\n\nReact.useEffect(() =&#x26;gt; {\ntry {\nlocalStorage.setItem(nameRef.current, value);\n} catch {}\n}, [value]);\n\nReact.useEffect(() =&#x26;gt; {\nconst lastName = nameRef.current;\nif (name !== lastName) {\ntry {\nlocalStorage.setItem(name, value);\nnameRef.current = name;\nlocalStorage.removeItem(lastName);\n} catch {}\n}\n}, [name]);\n\nreturn [value, setValue];\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const MyComponent = ({ name }) =&#x26;gt; {\n  const [val, setVal] = usePersistedState(name, 10);\n  return (\n    &#x26;lt;input\n      value={val}\n      onChange={(e) =&#x26;gt; {\n        setVal(e.target.value);\n      }}\n    /&#x26;gt;\n  );\n};\n\nconst MyApp = () =&#x26;gt; {\nconst [name, setName] = React.useState(&#x26;quot;my-value&#x26;quot;);\nreturn (\n&#x26;lt;&#x26;gt;\n&#x26;lt;MyComponent name={name} /&#x26;gt;\n&#x26;lt;input\nvalue={name}\nonChange={(e) =&#x26;gt; {\nsetName(e.target.value);\n}}\n/&#x26;gt;\n&#x26;lt;/&#x26;gt;\n);\n};\n\nReactDOM.render(&#x26;lt;MyApp /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Stores the previous state or props.</p>\n<ul>\n<li>Create a custom hook that takes a <code>value</code>.</li>\n<li>Use the <code>useRef()</code> hook to create a <code>ref</code> for the <code>value</code>.</li>\n<li>Use the <code>useEffect()</code> hook to remember the latest <code>value</code>.</li>\n</ul>\n<pre><code class=\"language-js\">const usePrevious = (value) =&#x26;gt; {\n  const ref = React.useRef();\n  React.useEffect(() =&#x26;gt; {\n    ref.current = value;\n  });\n  return ref.current;\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const Counter = () =&#x26;gt; {\n  const [value, setValue] = React.useState(0);\n  const lastValue = usePrevious(value);\n\nreturn (\n&#x26;lt;div&#x26;gt;\n&#x26;lt;p&#x26;gt;\nCurrent: {value} - Previous: {lastValue}\n&#x26;lt;/p&#x26;gt;\n&#x26;lt;button onClick={() =&#x26;gt; setValue(value + 1)}&#x26;gt;Increment&#x26;lt;/button&#x26;gt;\n&#x26;lt;/div&#x26;gt;\n);\n};\n\nReactDOM.render(&#x26;lt;Counter /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Checks if the code is running on the browser or the server.</p>\n<ul>\n<li>Create a custom hook that returns an appropriate object.</li>\n<li>Use <code>typeof window</code>, <code>window.document</code> and <code>Document.createElement()</code> to check if the code is running on the browser.</li>\n<li>Use the <code>useState()</code> hook to define the <code>inBrowser</code> state variable.</li>\n<li>Use the <code>useEffect()</code> hook to update the <code>inBrowser</code> state variable and clean up at the end.</li>\n<li>Use the <code>useMemo()</code> hook to memoize the return values of the custom hook.</li>\n</ul>\n<pre><code class=\"language-js\">const isDOMavailable = !!(\n  typeof window !== &#x26;quot;undefined&#x26;quot; &#x26;amp;&#x26;amp;\n  window.document &#x26;amp;&#x26;amp;\n  window.document.createElement\n);\n\nconst useSSR = () =&#x26;gt; {\nconst [inBrowser, setInBrowser] = React.useState(isDOMavailable);\n\nReact.useEffect(() =&#x26;gt; {\nsetInBrowser(isDOMavailable);\nreturn () =&#x26;gt; {\nsetInBrowser(false);\n};\n}, []);\n\nconst useSSRObject = React.useMemo(\n() =&#x26;gt; ({\nisBrowser: inBrowser,\nisServer: !inBrowser,\ncanUseWorkers: typeof Worker !== &#x26;quot;undefined&#x26;quot;,\ncanUseEventListeners: inBrowser &#x26;amp;&#x26;amp; !!window.addEventListener,\ncanUseViewport: inBrowser &#x26;amp;&#x26;amp; !!window.screen,\n}),\n[inBrowser]\n);\n\nreturn React.useMemo(\n() =&#x26;gt; Object.assign(Object.values(useSSRObject), useSSRObject),\n[inBrowser]\n);\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const SSRChecker = (props) =&#x26;gt; {\n  let { isBrowser, isServer } = useSSR();\n\nreturn &#x26;lt;p&#x26;gt;{isBrowser ? &#x26;quot;Running on browser&#x26;quot; : &#x26;quot;Running on server&#x26;quot;}&#x26;lt;/p&#x26;gt;;\n};\n\nReactDOM.render(&#x26;lt;SSRChecker /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Implements <code>setTimeout</code> in a declarative manner.</p>\n<ul>\n<li>Create a custom hook that takes a <code>callback</code> and a <code>delay</code>.</li>\n<li>Use the <code>useRef()</code> hook to create a <code>ref</code> for the callback function.</li>\n<li>Use the <code>useEffect()</code> hook to remember the latest callback.</li>\n<li>Use the <code>useEffect()</code> hook to set up the timeout and clean up.</li>\n</ul>\n<pre><code class=\"language-js\">const useTimeout = (callback, delay) =&#x26;gt; {\n  const savedCallback = React.useRef();\n\nReact.useEffect(() =&#x26;gt; {\nsavedCallback.current = callback;\n}, [callback]);\n\nReact.useEffect(() =&#x26;gt; {\nfunction tick() {\nsavedCallback.current();\n}\nif (delay !== null) {\nlet id = setTimeout(tick, delay);\nreturn () =&#x26;gt; clearTimeout(id);\n}\n}, [delay]);\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const OneSecondTimer = (props) =&#x26;gt; {\n  const [seconds, setSeconds] = React.useState(0);\n  useTimeout(() =&#x26;gt; {\n    setSeconds(seconds + 1);\n  }, 1000);\n\nreturn &#x26;lt;p&#x26;gt;{seconds}&#x26;lt;/p&#x26;gt;;\n};\n\nReactDOM.render(&#x26;lt;OneSecondTimer /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Provides a boolean state variable that can be toggled between its two states.</p>\n<ul>\n<li>Use the <code>useState()</code> hook to create the <code>value</code> state variable and its setter.</li>\n<li>Create a function that toggles the value of the <code>value</code> state variable and memoize it, using the <code>useCallback()</code> hook.</li>\n<li>Return the <code>value</code> state variable and the memoized toggler function.</li>\n</ul>\n<pre><code class=\"language-js\">const useToggler = (initialState) =&#x26;gt; {\n  const [value, setValue] = React.useState(initialState);\n\nconst toggleValue = React.useCallback(() =&#x26;gt; setValue((prev) =&#x26;gt; !prev), []);\n\nreturn [value, toggleValue];\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const Switch = () =&#x26;gt; {\n  const [val, toggleVal] = useToggler(false);\n  return &#x26;lt;button onClick={toggleVal}&#x26;gt;{val ? &#x26;quot;ON&#x26;quot; : &#x26;quot;OFF&#x26;quot;}&#x26;lt;/button&#x26;gt;;\n};\nReactDOM.render(&#x26;lt;Switch /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />\n<p>Handles the <code>beforeunload</code> window event.</p>\n<ul>\n<li>Use the <code>useRef()</code> hook to create a ref for the callback function, <code>fn</code>.</li>\n<li>Use the <code>useEffect()</code> hook and <code>EventTarget.addEventListener()</code> to handle the <code>'beforeunload'</code> (when the user is about to close the window).</li>\n<li>Use <code>EventTarget.removeEventListener()</code> to perform cleanup after the component is unmounted.</li>\n</ul>\n<pre><code class=\"language-js\">const useUnload = (fn) =&#x26;gt; {\n  const cb = React.useRef(fn);\n\nReact.useEffect(() =&#x26;gt; {\nconst onUnload = cb.current;\nwindow.addEventListener(&#x26;quot;beforeunload&#x26;quot;, onUnload);\nreturn () =&#x26;gt; {\nwindow.removeEventListener(&#x26;quot;beforeunload&#x26;quot;, onUnload);\n};\n}, [cb]);\n};\n</code></pre>\n<hr />\n<pre><code class=\"language-js\">const App = () =&#x26;gt; {\n  useUnload((e) =&#x26;gt; {\n    e.preventDefault();\n    const exit = confirm(&#x26;quot;Are you sure you want to leave?&#x26;quot;);\n    if (exit) window.close();\n  });\n  return &#x26;lt;div&#x26;gt;Try closing the window.&#x26;lt;/div&#x26;gt;;\n};\nReactDOM.render(&#x26;lt;App /&#x26;gt;, document.getElementById(&#x26;quot;root&#x26;quot;));\n</code></pre>\n<hr />","pages":[{"url":"/docs/articles/","relativePath":"docs/articles/index.md","relativeDir":"docs/articles","base":"index.md","name":"index","frontmatter":{"title":"Articles","weight":2,"excerpt":"resources","seo":{"title":"","description":"This section is similar to a blog but is more technical in nature and time invariant with regard to content.","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"docs"},"html":"<h2>Articles</h2>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/basic-web-dev/\"><strong>✅⇒articles/basic-web-dev/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/buffers/\"><strong>✅⇒articles/buffers/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/dev-dep/\"><strong>✅⇒articles/dev-dep/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/event-loop/\"><strong>✅⇒articles/event-loop/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/fs-module/\"><strong>✅⇒articles/fs-module/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/how-the-web-works/\"><strong>✅⇒articles/how-the-web-works/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/http/\"><strong>✅⇒articles/http/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/install/\"><strong>✅⇒articles/install/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/intro/\"><strong>✅⇒articles/intro/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/module-exports/\"><strong>✅⇒articles/module-exports/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-api-express/\"><strong>✅⇒articles/node-api-express/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-cli-args/\"><strong>✅⇒articles/node-cli-args/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-common-modules/\"><strong>✅⇒articles/node-common-modules/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-env-variables/\"><strong>✅⇒articles/node-env-variables/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-js-language/\"><strong>✅⇒articles/node-js-language/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-package-manager/\"><strong>✅⇒articles/node-package-manager/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-repl/\"><strong>✅⇒articles/node-repl/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/node-run-cli/\"><strong>✅⇒articles/node-run-cli/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/nodejs/\"><strong>✅⇒articles/nodejs/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/nodevsbrowser/\"><strong>✅⇒articles/nodevsbrowser/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/npm/\"><strong>✅⇒articles/npm/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/npx/\"><strong>✅⇒articles/npx/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/os-module/\"><strong>✅⇒articles/os-module/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/reading-files/\"><strong>✅⇒articles/reading-files/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/semantic-html/\"><strong>✅⇒articles/semantic-html/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/semantic/\"><strong>✅⇒articles/semantic/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/the-uniform-resource-locator-(url)/\"><strong>✅⇒articles/the-uniform-resource-locator-(url)/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/understanding-firebase/\"><strong>✅⇒articles/understanding-firebase/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/v8/\"><strong>✅⇒articles/v8/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/web-standards-checklist/\"><strong>✅⇒articles/web-standards-checklist/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/webdev-tools/\"><strong>✅⇒articles/webdev-tools/🌍</strong></a></h3>\n<h3><a href=\"https://bgoonz-blog.netlify.app/docs/articles/writing-files/\"><strong>✅⇒articles/writing-files/🌍</strong></a></h3>"},{"url":"/docs/about/hobbies-n-interests/","relativePath":"docs/about/hobbies-n-interests.md","relativeDir":"docs/about","base":"hobbies-n-interests.md","name":"hobbies-n-interests","frontmatter":{"title":"My Hobbies & Interests","sections":[{"title":"My Hobbies & Interests","section_id":"links","subtitle":"lorem-ipsum","col_number":"three","type":"section_docs"},{"title":"lorem-ipsum","section_id":"lorem-ipsum","subtitle":"lorem-ipsum","col_number":"three","grid_items":[],"type":"section_grid"}],"seo":{"title":"","description":"","robots":[],"extra":[]},"template":"advanced"},"html":"<blockquote class=\"instagram-media\" data-instgrm-captioned data-instgrm-permalink=\"https://www.instagram.com/p/CQXdtMrhI5Y/?utm_source=ig_embed&amp;utm_campaign=loading\" data-instgrm-version=\"14\" style=\" background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);\"><div style=\"padding:16px;\"> <a href=\"https://www.instagram.com/p/CQXdtMrhI5Y/?utm_source=ig_embed&amp;utm_campaign=loading\" style=\" background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;\" target=\"_blank\"> <div style=\" display: flex; flex-direction: row; align-items: center;\"> <div style=\"background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;\"></div> <div style=\"display: flex; flex-direction: column; flex-grow: 1; justify-content: center;\"> <div style=\" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;\"></div> <div style=\" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;\"></div></div></div><div style=\"padding: 19% 0;\"></div> <div style=\"display:block; height:50px; margin:0 auto 12px; width:50px;\"><svg width=\"50px\" height=\"50px\" viewBox=\"0 0 60 60\" version=\"1.1\" xmlns=\"https://www.w3.org/2000/svg\" xmlns:xlink=\"https://www.w3.org/1999/xlink\"><g stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g transform=\"translate(-511.000000, -20.000000)\" fill=\"#000000\"><g><path d=\"M556.869,30.41 C554.814,30.41 553.148,32.076 553.148,34.131 C553.148,36.186 554.814,37.852 556.869,37.852 C558.924,37.852 560.59,36.186 560.59,34.131 C560.59,32.076 558.924,30.41 556.869,30.41 M541,60.657 C535.114,60.657 530.342,55.887 530.342,50 C530.342,44.114 535.114,39.342 541,39.342 C546.887,39.342 551.658,44.114 551.658,50 C551.658,55.887 546.887,60.657 541,60.657 M541,33.886 C532.1,33.886 524.886,41.1 524.886,50 C524.886,58.899 532.1,66.113 541,66.113 C549.9,66.113 557.115,58.899 557.115,50 C557.115,41.1 549.9,33.886 541,33.886 M565.378,62.101 C565.244,65.022 564.756,66.606 564.346,67.663 C563.803,69.06 563.154,70.057 562.106,71.106 C561.058,72.155 560.06,72.803 558.662,73.347 C557.607,73.757 556.021,74.244 553.102,74.378 C549.944,74.521 548.997,74.552 541,74.552 C533.003,74.552 532.056,74.521 528.898,74.378 C525.979,74.244 524.393,73.757 523.338,73.347 C521.94,72.803 520.942,72.155 519.894,71.106 C518.846,70.057 518.197,69.06 517.654,67.663 C517.244,66.606 516.755,65.022 516.623,62.101 C516.479,58.943 516.448,57.996 516.448,50 C516.448,42.003 516.479,41.056 516.623,37.899 C516.755,34.978 517.244,33.391 517.654,32.338 C518.197,30.938 518.846,29.942 519.894,28.894 C520.942,27.846 521.94,27.196 523.338,26.654 C524.393,26.244 525.979,25.756 528.898,25.623 C532.057,25.479 533.004,25.448 541,25.448 C548.997,25.448 549.943,25.479 553.102,25.623 C556.021,25.756 557.607,26.244 558.662,26.654 C560.06,27.196 561.058,27.846 562.106,28.894 C563.154,29.942 563.803,30.938 564.346,32.338 C564.756,33.391 565.244,34.978 565.378,37.899 C565.522,41.056 565.552,42.003 565.552,50 C565.552,57.996 565.522,58.943 565.378,62.101 M570.82,37.631 C570.674,34.438 570.167,32.258 569.425,30.349 C568.659,28.377 567.633,26.702 565.965,25.035 C564.297,23.368 562.623,22.342 560.652,21.575 C558.743,20.834 556.562,20.326 553.369,20.18 C550.169,20.033 549.148,20 541,20 C532.853,20 531.831,20.033 528.631,20.18 C525.438,20.326 523.257,20.834 521.349,21.575 C519.376,22.342 517.703,23.368 516.035,25.035 C514.368,26.702 513.342,28.377 512.574,30.349 C511.834,32.258 511.326,34.438 511.181,37.631 C511.035,40.831 511,41.851 511,50 C511,58.147 511.035,59.17 511.181,62.369 C511.326,65.562 511.834,67.743 512.574,69.651 C513.342,71.625 514.368,73.296 516.035,74.965 C517.703,76.634 519.376,77.658 521.349,78.425 C523.257,79.167 525.438,79.673 528.631,79.82 C531.831,79.965 532.853,80.001 541,80.001 C549.148,80.001 550.169,79.965 553.369,79.82 C556.562,79.673 558.743,79.167 560.652,78.425 C562.623,77.658 564.297,76.634 565.965,74.965 C567.633,73.296 568.659,71.625 569.425,69.651 C570.167,67.743 570.674,65.562 570.82,62.369 C570.966,59.17 571,58.147 571,50 C571,41.851 570.966,40.831 570.82,37.631\"></path></g></g></g></svg></div><div style=\"padding-top: 8px;\"> <div style=\" color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;\">View this post on Instagram</div></div><div style=\"padding: 12.5% 0;\"></div> <div style=\"display: flex; flex-direction: row; margin-bottom: 14px; align-items: center;\"><div> <div style=\"background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(0px) translateY(7px);\"></div> <div style=\"background-color: #F4F4F4; height: 12.5px; transform: rotate(-45deg) translateX(3px) translateY(1px); width: 12.5px; flex-grow: 0; margin-right: 14px; margin-left: 2px;\"></div> <div style=\"background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(9px) translateY(-18px);\"></div></div><div style=\"margin-left: 8px;\"> <div style=\" background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;\"></div> <div style=\" width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)\"></div></div><div style=\"margin-left: auto;\"> <div style=\" width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);\"></div> <div style=\" background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);\"></div> <div style=\" width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);\"></div></div></div> <div style=\"display: flex; flex-direction: column; flex-grow: 1; justify-content: center; margin-bottom: 24px;\"> <div style=\" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;\"></div> <div style=\" background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;\"></div></div></a><p style=\" color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; line-height:17px; margin-bottom:0; margin-top:8px; overflow:hidden; padding:8px 0 7px; text-align:center; text-overflow:ellipsis; white-space:nowrap;\"><a href=\"https://www.instagram.com/p/CQXdtMrhI5Y/?utm_source=ig_embed&amp;utm_campaign=loading\" style=\" color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:normal; line-height:17px; text-decoration:none;\" target=\"_blank\">A post shared by Bryan Guner Music (@bgoonz)</a></p></div></blockquote> <script async src=\"//www.instagram.com/embed.js\"></script>"},{"url":"/docs/content/recent-projects/","relativePath":"docs/content/recent-projects.md","relativeDir":"docs/content","base":"recent-projects.md","name":"recent-projects","frontmatter":{"title":"Embeded Websites & Projects","weight":2,"seo":{"title":"Gatsby Plugins For This Sites Content Model","description":"This is my markdown notes tempate","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Gatsby Plugins For This Sites Content Model","keyName":"property"},{"name":"og:description","value":"This is the Gatsby Plugins For This Sites Content Model page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Gatsby Plugins For This Sites Content Model"},{"name":"twitter:description","value":"This is the Gatsby Plugins For This Sites Content Model page"}]},"template":"docs"},"html":"<br>\n<br>\n<br>\n<h1>Family Promise Project:</h1>\n<h1>Table of contents</h1>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/README\">Home</a></li>\n</ul>\n<h2>navigation</h2>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/navigation/navigation\">NAVIGATION</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/navigation/calendar\">Calendar</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/navigation/youtube\">Youtube:</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/navigation/roadmap\">Roadmap:</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/navigation/team-members\">TEAM MEMBERS</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/navigation/running-list-of-notes-links-and-pertinent-info-from-meetings\">Running List Of Notes Links &#x26; Pertinent Info From Meetings</a></li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/navigation/trello/README\">Trello</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/navigation/trello/github-trello-integration\">Github/Trello Integration</a></li>\n</ul>\n</li>\n</ul>\n<h2>UX</h2>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/README\">UX_TOPICS</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/action-items\">Action Items:</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/accessibility\">Accessibility</a></li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/figma-notes/README\">Figma Notes</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/figma-notes/notes\">Notes</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/figma-notes/prototyping-in-figma\">Prototyping In Figma</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/figma-notes/more-notes\">More Notes</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/ux-design/README\">UX-Design</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/ux-design/facebook-graph-api\">Facebook Graph API</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/ant-design/README\">Ant Design</a></p>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/ant-design/ant-components/README\">ANT Components</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/ant-design/ant-components/buttons\">Buttons</a></li>\n</ul>\n</li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/ant-design/ant-docs\">ANT DOCS</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/ant-design/application-codesandbox\">Application (Codesandbox)</a></li>\n</ul>\n</li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/examples\">Examples</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ux/untitled/how-to-add-external-url-links-to-your-prototype\">How to add external URL links to your prototype</a></li>\n</ul>\n</li>\n</ul>\n<h2>CANVAS</h2>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/design/README\">Design</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/design/whats-inclusive-design\">What's Inclusive Design?</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/design/accessibility\">Accessibility</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/design/what-are-design-systems\">What are Design Systems?</a></li>\n</ul>\n</li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/canvas\">Canvas</a></li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/notes/README\">Notes</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/notes/user-experience-design\">User Experience Design</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/notes/user-research\">User Research</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/notes/interaction-design\">Interaction Design</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/ux-engineer/README\">UX-Engineer</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/ux-engineer/patterns\">Patterns</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/ux-engineer/design-tools\">Design Tools</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/ux-engineer/design-critiques\">Design Critiques</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/ux-engineer/product-review\">Product Review</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/ux-engineer/quiz\">Quiz</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/canvas/ux-engineer/seven-principles-of-design\">Seven Principles of Design</a></li>\n</ul>\n</li>\n</ul>\n<h2>Front End</h2>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/front-end/untitled\">Frontend:</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/front-end/redux\">Redux</a></li>\n</ul>\n<h2>Back End</h2>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/back-end/untitled/README\">Backend:</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/back-end/untitled/api\">API</a></li>\n</ul>\n</li>\n</ul>\n<h2>Research</h2>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/research/untitled/README\">Research Navigation</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/research/untitled/front-end\">Front End</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/research/untitled/back-end\">Back End</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/research/untitled/ux\">UX</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/research/untitled/ptm\">PTM</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/research/untitled/general\">General</a></li>\n</ul>\n</li>\n</ul>\n<h2>DS_API</h2>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/ds_api/untitled\">Data Science API</a></li>\n</ul>\n<h2>ROLES</h2>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/roles/untitled/README\">TEAM ROLES</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/roles/untitled/bryan-guner\">Bryan Guner</a></li>\n</ul>\n</li>\n</ul>\n<h2>Action Items</h2>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/action-items/untitled\">Trello</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/action-items/maps\">Maps</a></li>\n</ul>\n<h2>ARCHITECTURE</h2>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/architecture/dns\">DNS</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/architecture/aws\">AWS</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/architecture/heroku\">Heroku</a></li>\n</ul>\n<h2>Questions</h2>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/questions/from-previous-cohort\">From Previous Cohort</a></li>\n</ul>\n<h2>Standup Notes</h2>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/standup-notes/meeting-notes/README\">Meeting Notes</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/standup-notes/meeting-notes/overview\">Stakeholder Meeting 1</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/standup-notes/meeting-notes/9-29-2021\">9/29/2021</a></li>\n</ul>\n</li>\n</ul>\n<h2>GitHub &#x26; Project Practice</h2>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/github-and-project-practice/untitled/README\">GitHub</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/github-and-project-practice/untitled/untitled\">Github Guide</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/github-and-project-practice/untitled/github-actions\">Github Actions:</a></li>\n</ul>\n</li>\n</ul>\n<h2>MISC</h2>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/misc/untitled\">MISCELLANEOUS</a></li>\n</ul>\n<h2>Background Information</h2>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/background-information/background-info/README\">Background Info</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/background-information/background-info/swagger-open-api-specification\">Swagger OPEN API SPECIFICATION</a></li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/background-information/background-info/github/README\">GITHUB:</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/background-information/background-info/github/git-bash\">Git Bash</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/background-information/background-info/github/git-prune\">Git Prune:</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>DOCS</h2>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/coding/README\">Coding</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/coding/environment-variables\">Environment Variables</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/coding/git-rebase\">Git Rebase:</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/coding/git-workflow\">Git Workflow:</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/coding/linting-and-formatting\">Linting and Formatting</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/project-docs/README\">Project Docs</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/project-docs/eng-docs-home\">Eng-Docs-Home</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/project-docs/basic-node-api\">Basic Node API</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/project-docs/contributing-to-this-scaffold-project\">Contributing to this scaffold project</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/project-docs/examples\">Examples:</a></li>\n</ul>\n</li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/project-description\">PROJECT DESCRIPTION (Feature List)</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/labs-learners-guide\">Labs Learners Guide</a></li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/react/README\">REACT</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/react/untitled\">Create React App</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/react/awesome-react\">Awesome React</a></li>\n</ul>\n</li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/untitled\">Links</a></li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/labs-engineering-docs/README\">Labs Engineering Docs</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/labs-engineering-docs/okta-basics\">Okta Basics</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/labs-engineering-docs/roadmap\">Roadmap</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/docs/labs-engineering-docs/repositories\">Repositories</a></li>\n</ul>\n</li>\n</ul>\n<h2>Workflow</h2>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/workflow/workflow\">Workflow</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/workflow/advice\">Advice</a></li>\n</ul>\n<h2>AWS</h2>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/aws/aws/README\">AWS</a></p>\n<ul>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/aws/aws/elastic-beanstalk/README\">Elastic Beanstalk</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/aws/aws/elastic-beanstalk/elastic-beanstalk-dns\">Elastic Beanstalk DNS</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://bryan-guner.gitbook.io/lambda-labs/aws/aws/amplify/README\">Amplify:</a></p>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/aws/aws/amplify/amplify-dns\">Amplify-DNS</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/aws/untitled-1\">Account Basics</a></li>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/aws/aws-networking\">AWS-Networking</a></li>\n</ul>\n<h2>Career &#x26; Job Hunt</h2>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/career-and-job-hunt/career\">Career</a></li>\n</ul>\n<h2>Group 1</h2>\n<ul>\n<li><a href=\"https://bryan-guner.gitbook.io/lambda-labs/group-1/live-implementation\">Live Implementation</a></li>\n</ul>\n<iframe src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FbOwyinWBikQ5jdEpSx5WcI%2FFamily-Promise-Copy\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"Family_Promise_embed\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<iframe src=\"https://codesandbox.io/embed/family-promise-embed-b434z?autoresize=1&fontsize=12&hidenavigation=1&theme=dark&view=preview\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"Family_Promise_embed\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<br>\n<br>\n<br>\n<h1>   Family-Promise Application</h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://a.familypromiseservicetracker.dev/dashboard\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<h1>   Speach Recognition api </h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://random-static-html-deploys.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<h1>   Paste To Markdown </h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://euangoddard.github.io/clipboard2markdown/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        \n        \n        \n<br>\n<br>\n<h1>   Paste Excel Tabel To Markdown </h1>\n<iframe  class=\"block-content\" src=\"https://codepen.io/bgoonz/embed/JjNaPpL?default-tab=result&theme-id=light\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1>Paste excel to HTML</h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://pedantic-wing-adbf82.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<h1>  Cloud Storage </h1>\n<br>\n<h2> Up to 1TB of cloud Storage for file sharing!</h2>\n<iframe src=\"https://onedrive.live.com/embed?cid=D21009FDD967A241&resid=D21009FDD967A241%21538729&authkey=AHSDSyoYqzg2K2E\" height=\"275px\" width=\"17%\" style=\"zoom:0.69; align-self:center;display:auto;display: block;border:12px solid gold;\">\n</iframe>\n<br>\n<br>\n<br>\n<h1>     Resource Archive           </h1>\n<br>\n<iframe src=\"https://resourcerepo2.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<h1>   Lambda Student Site </h1>\n<br>\n<iframe class=\"inner\" src=\"https://lambda-resources.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<br>\n<h1> Text Tools     </h1>\n<br>\n<iframe src=\"https://devtools42.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1> Ternary Converter   </h1>\n<br>\n<iframe src=\"https://ternary42.netlify.app/\" height=\"800px\" width=\"600px!important\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1>  Github HTML Render from link </h1>\n<br>\n<iframe src=\"https://githtmlpreview.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1> Data Structures</h1>\n<br>\n<iframe src=\"https://determined-dijkstra-ee7390.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1>  Interview     </h1>\n<br>\n<iframe  src=\"https://web-dev-interview-prep-quiz-website.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<h1> Form Builder GUI </h1>\n<br>\n<iframe  src=\"https://fourm-builder-gui.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<h1> Border Builder </h1>\n<br>\n<iframe  src=\"https://codepen.io/bgoonz/embed/zYwLVmb?default-tab=html%2Cresult\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<h1>                </h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://ds-algo-official.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        \n        \n        \n<br>\n<br>\n<br>\n<h1>                </h1>\n<br>\n        \n        \n <iframe height=\"800\" style=\"width: 100%;\" scrolling=\"yes\" title=\"Simple Typing Carousel \" src=\"https://codepen.io/bgoonz/embed/ExZvGoZ?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/bgoonz/pen/ExZvGoZ\">\n  Simple Typing Carousel </a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>\n<br>\n<br>\n<br>\n<br>\n <iframe height=\"300\" style=\"width: 90%;\" scrolling=\"no\" title=\"Fibonacci Carousel\"\n      src=\"https://codepen.io/bgoonz/embed/JjNagJo?default-tab=result&theme-id=dark\" frameborder=\"no\" loading=\"lazy\"\n      allowtransparency=\"true\" allowfullscreen=\"true\">\n      See the Pen <a href=\"https://codepen.io/bgoonz/pen/JjNagJo\">\n        Fibonacci Carousel</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n      on <a href=\"https://codepen.io\">CodePen</a>.\n    </iframe>\n    <br>\n    <br>\n    <br>\n    <iframe height=\"300\" style=\"width: 90%;\" scrolling=\"no\" title=\"embed-twitter-feed\"\n      src=\"https://codepen.io/bgoonz/embed/poPOqEO?default-tab=result&theme-id=dark\" frameborder=\"no\" loading=\"lazy\"\n      allowtransparency=\"true\" allowfullscreen=\"true\">\n      See the Pen <a href=\"https://codepen.io/bgoonz/pen/poPOqEO\">\n        embed-twitter-feed</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n      on <a href=\"https://codepen.io\">CodePen</a>.\n    </iframe>\n    <br>\n    <br>\n    <br>\n    <iframe height=\"300\" style=\"width: 90%;\" scrolling=\"no\" src=\"//jsfiddle.net/bgoonz/j4xt839d/embedded/result/\"\n      allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n    <br>\n    <br>\n    <br>\n    <iframe height=\"300\" style=\"width: 90%;\" scrolling=\"no\" src=\"//jsfiddle.net/bgoonz/76osauer/1/embedded/result/\"\n      allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n    <br>\n    <br>\n    <br>\n    <iframe height=\"300\" style=\"width: 90%;\" scrolling=\"no\" src=\"//jsfiddle.net/bgoonz/vtz7820m/embedded/result/dark/\"\n      allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n    <br>\n    <br>\n    <br>\n    <iframe height=\"300\" style=\"width: 90%;\" scrolling=\"no\"\n      src=\"//jsfiddle.net/bgoonz/1dye9uws/2/embedded/js,html,css,result/dark/\" allowfullscreen=\"allowfullscreen\"\n      frameborder=\"0\"></iframe>\n    <br>\n    <br>\n    <br>\n    <iframe height=\"300\" style=\"width: 90%;\" scrolling=\"no\" src=\"//jsfiddle.net/bgoonz/3mpgzkx7/1/embedded/\"\n      allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe> \n    <br>\n    <br>\n    <br>\n    <iframe loading=\"lazy\" src=\"https://codepen.io/bgoonz/embed/zYwJQaw?default-tab=html%2Cresult\"\n      style=\"width:90%; height:575px; border:0; border-radius: 4px; overflow:hidden;\" title=\"hvbrd-sockets (forked)\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n    <br>\n    <br>\n    <!----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->\n    <br>\n    <iframe loading=\"lazy\" src=\"https://codesandbox.io/embed/bigo-3wqy4?fontsize=14&hidenavigation=1&theme=dark\"\n      style=\"width:90%; height:575px; border:0; border-radius: 4px; overflow:hidden;\" title=\"hvbrd-sockets (forked)\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n    <br>\n    <br>\n    <br>\n    <!----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->\n    <iframe loading=\"lazy\"\n      src=\"https://codesandbox.io/embed/hvbrd-sockets-forked-vsi2o?fontsize=14&hidenavigation=1&theme=dark\"\n      style=\"width:90%; height:575px; border:0; border-radius: 4px; overflow:hidden;\" title=\"hvbrd-sockets (forked)\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n    <!----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->\n    <br>\n    <br>\n    <iframe loading=\"lazy\" src=\"https://codesandbox.io/embed/summer-surf-p6dei?fontsize=14&hidenavigation=1&theme=dark\"\n      style=\"width:90%; height:575px; border:0; border-radius: 4px; overflow:hidden;\" title=\"summer-surf-p6dei\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n    <br>\n    <br>\n    <br>\n    <br>\n    <!----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->\n    <br> <br>\n    <br>\n    <iframe loading=\"lazy\"\n      src=\"https://codesandbox.io/embed/sharp-feistel-x8bvv?fontsize=14&hidenavigation=1&theme=dark\"\n      style=\"width:90%; height:575px; border:0; border-radius: 4px; overflow:hidden;\" title=\"sharp-feistel-x8bvv\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n    <br>\n    <!----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->\n    <!----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->\n    <center>\n      <br>\n      <br>\n      <br>\n      <br>\n      <iframe loading=\"lazy\" height=\"575\" style=\"width: 90%;\" scrolling=\"no\"\n        title=\"3D Cover Flow in React! | @keyframers 3.7\"\n        src=\"https://codepen.io/bgoonz/embed/ExZvGoZ?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\"\n        allowtransparency=\"true\" allowfullscreen=\"true\">\n        See the Pen <a href='https://codepen.io/bgoonz42/pen/RwpeaWr'>3D Cover Flow in React! | @keyframers\n          3.7</a> by Bryan\n        C Guner\n        (<a href='https://codepen.io/bgoonz42'>@bgoonz42</a>) on <a href='https://codepen.io'>CodePen</a>.\n      </iframe>\n      <br>\n      <br>\n      <br>\n      <br>\n      <br>\n      <iframe loading=\"lazy\" height=\"575\" style=\"width: 90%;\" scrolling=\"no\" title=\"Simple Typing Carousel \"\n        src=\"https://codepen.io/bgoonz/embed/ExZvGoZ?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\"\n        allowtransparency=\"true\" allowfullscreen=\"true\">\n        See the Pen <a href=\"https://codepen.io/bgoonz/pen/ExZvGoZ\">\n          Simple Typing Carousel </a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n        on <a href=\"https://codepen.io\">CodePen</a>.\n      </iframe>\n      <br>\n      <br>\n      <br>\n      <iframe loading=\"lazy\" height=\"575\" style=\"width: 90%;\" scrolling=\"no\"\n        title=\"3D Cover Flow in React! | @keyframers 3.7\"\n        src=\"https://codepen.io/bgoonz42/embed/RwpeaWr?height=375&theme=dark&default-tab=js,result\" frameborder=\"no\"\n        loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n        See the Pen <a href='https://codepen.io/bgoonz42/pen/RwpeaWr'>3D Cover Flow in React! | @keyframers\n          3.7</a> by Bryan\n        C Guner\n        (<a href='https://codepen.io/bgoonz42'>@bgoonz42</a>) on <a href='https://codepen.io'>CodePen</a>.\n      </iframe>\n      <br>\n      <br>\n      <br>\n    \n        <br>\n    <iframe loading=\"lazy\" src=\"https://portfolio42.netlify.app/\"\n      style=\"width:90%; height:575px; border:0; border-radius: 4px; overflow:hidden;\" title=\"hvbrd-sockets (forked)\"\n      sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n    <br>\n    \n      <br>\n      <!-------------------------------------------------------------------------------------->\n      <iframe loading=\"lazy\" height=\"575\" style=\"width: 90%;\" scrolling=\"no\" title=\"Video Background 1\"\n        src=\"https://codesandbox.io/embed/bgoonzblog20-oo3x5?fontsize=14&hidenavigation=1&theme=dark\"\n        style=\"width:90%; height:575px; border:0; border-radius: 4px; overflow:hidden;\" title=\"bgoonzblog2.0\"\n        sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"></iframe>\n      <br>\n      <br>\n      <br>\n      <!-------------------------------------------------------------------------------------->\n      <br>\n      <iframe loading=\"lazy\" height=\"575\" style=\"width: 90%;\" scrolling=\"no\" title=\"Video Background 1\"\n        src=\"https://codepen.io/bgoonz/embed/BaRLKBd?default-tab=html%2Cresult&theme-id=dark\" frameborder=\"no\"\n        loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n        See the Pen <a href=\"https://codepen.io/bgoonz/pen/BaRLKBd\">\n          Video Background 1</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n        on <a href=\"https://codepen.io\">CodePen</a>.\n      </iframe>\n      <!-------------------------------------------------------------------------------------->\n      <br><br>\n      <!-------------------------------------------------------------------------------------->\n      <br><br>\n      <center>\n        <br>\n        <br>\n        <iframe loading=\"lazy\" height=\"575\" style=\"width: 90%;\" scrolling=\"no\"\n          title=\"CSS-only Colorful Calendar Concept\" src=\"https://documentation-site-react2.vercel.app/\"\n          frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n          See the Pen <a href=\"https://codepen.io/bgoonz/pen/vYmKQYj\">\n            CSS-only Colorful Calendar Concept</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n          on <a href=\"https://codepen.io\">CodePen</a>.\n        </iframe>\n        <br>\n        <br>\n        <br>\n        <!-------------------------------------------------------------------------------------->\n        <br><br>\n        <iframe loading=\"lazy\" height=\"575\" style=\"width: 90%;\" scrolling=\"no\" title=\"FullTextSearchjs\"\n          src=\"https://codepen.io/bgoonz/embed/QWvMWoQ?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\"\n          allowtransparency=\"true\" allowfullscreen=\"true\">\n          See the Pen <a href=\"https://codepen.io/bgoonz/pen/QWvMWoQ\">\n            FullTextSearchjs</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n          on <a href=\"https://codepen.io\">CodePen</a>.\n        </iframe>\n        <br>\n        <br>\n        <br>\n        <!-------------------------------------------------------------------------------------->\n        <br>\n        <iframe loading=\"lazy\" height=\"575\" style=\"width: 90%;\" scrolling=\"no\" title=\"CSS Grid: Info Card\"\n          src=\"https://codepen.io/bgoonz42/embed/MWmpjmy?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\"\n          allowtransparency=\"true\" allowfullscreen=\"true\">\n          See the Pen <a href=\"https://codepen.io/bgoonz42/pen/MWmpjmy\">\n            CSS Grid: Info Card</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz42\">@bgoonz42</a>)\n          on <a href=\"https://codepen.io\">CodePen</a>.\n        </iframe>\n        <br>\n        <br>\n        <br>\n        <br>\n        <!-------------------------------------------------------------------------------------->\n        <iframe loading=\"lazy\" height=\"575\" style=\"width: 90%;\" scrolling=\"no\"\n          title=\"CSS-only Colorful Calendar Concept\"\n          src=\"https://codepen.io/bgoonz/embed/vYmKQYj?default-tab=html%2Cresult&theme-id=dark\" frameborder=\"no\"\n          loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n          See the Pen <a href=\"https://codepen.io/bgoonz/pen/vYmKQYj\">\n            CSS-only Colorful Calendar Concept</a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n          on <a href=\"https://codepen.io\">CodePen</a>.\n        </iframe>\n        <br>\n        <br>\n        <br>"},{"url":"/docs/react/cheatsheet/","relativePath":"docs/react/cheatsheet.md","relativeDir":"docs/react","base":"cheatsheet.md","name":"cheatsheet","frontmatter":{"title":"React Cheat Sheets:","weight":0,"excerpt":"cheat sheet","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h1>React Patterns:</h1>\n<iframe src=\"https://codesandbox.io/embed/lucid-pateu-ln8ex?fontsize=14&hidenavigation=1&theme=dark&view=preview\"\n     style=\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\"\n     title=\"lucid-pateu-ln8ex\"\n     allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\"\n     sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\"\n   ></iframe>\n<h2>React Cheat Sheet</h2>\n<p>React:</p>\n<ul>\n<li><code>&#x3C;script src=\"https://unpkg.com/react@15/dist/react.js\">&#x3C;/script></code></li>\n<li><code>$ npm install react --save</code></li>\n<li><code>$ bower install react --save</code></li>\n</ul>\n<p>React DOM:</p>\n<ul>\n<li><code>&#x3C;script src=\"https://unpkg.com/react-dom@15/dist/react-dom.js\">&#x3C;/script></code></li>\n<li><code>$ npm install react-dom</code></li>\n<li><code>$ bower install react-dom --save</code></li>\n</ul>\n<h2>Rendering</h2>\n<h3>Rendering (ES5)</h3>\n<pre><code class=\"language-js\">ReactDOM.render(React.createElement(Link, { name: 'HackHall.com' }), document.getElementById('menu'));\n</code></pre>\n<h3>Rendering (ES5+JSX)</h3>\n<pre><code class=\"language-js\">ReactDOM.render(&#x3C;Link name=\"HackHall.com\" />, document.getElementById('menu'));\n</code></pre>\n<h2>Server-side Rendering</h2>\n<pre><code class=\"language-js\">var ReactDOMServer = require('react-dom/server');\nReactDOMServer.renderToString(Link, { name: 'HackHall.com' });\nReactDOMServer.renderToStaticMarkup(Link, { name: 'HackHall.com' });\n</code></pre>\n<h2>Components</h2>\n<h3>ES5</h3>\n<pre><code class=\"language-js\">var Link = React.createClass({\n    displayName: 'Link',\n    render: function () {\n        return React.createElement('a', { className: 'btn', title: this.props.name }, 'Click ->', this.props.name);\n    }\n});\n</code></pre>\n<h3>ES5 + JSX</h3>\n<pre><code class=\"language-js\">var Link = React.createClass({\n    render: function () {\n        return (\n            &#x3C;a className=\"btn\" title={this.props.name}>\n                Click -> this.props.name\n            &#x3C;/a>\n        );\n    }\n});\n</code></pre>\n<h3>ES6 + JSX</h3>\n<pre><code class=\"language-js\">class Link extends React.Component {\n    render() {\n        return (\n            &#x3C;a className=\"btn\" title={this.props.name}>\n                Click -> this.props.name\n            &#x3C;/a>\n        );\n    }\n}\n</code></pre>\n<h2>Advanced Components</h2>\n<h3>Options (ES5)</h3>\n<ul>\n<li><code>propTypes object</code>: Type validation in development mode</li>\n<li><code>getDefaultProps function()</code>: object of default props</li>\n<li><code>getInitialState function()</code>: object of the initial state</li>\n</ul>\n<p>ES5:</p>\n<pre><code class=\"language-js\">var Link = React.createClass({\n    propTypes: { name: React.PropTypes.string },\n    getDefaultProps: function () {\n        return { initialCount: 0 };\n    },\n    getInitialState: function () {\n        return { count: this.props.initialCount };\n    },\n    tick: function () {\n        this.setState({ count: this.state.count + 1 });\n    },\n    render: function () {\n        return React.createElement(\n            'a',\n            { className: 'btn', href: '#', title: this.props.name, onClick: this.tick.bind(this) },\n            'Click ->',\n            this.props.name ? this.props.name : 'webapplog.com',\n            ' (Clicked: ' + this.state.count + ')'\n        );\n    }\n});\n</code></pre>\n<p>ES5 + JSX:</p>\n<pre><code class=\"language-js\">var Link = React.createClass({\n    propTypes: { name: React.PropTypes.string },\n    getDefaultProps: function () {\n        return { initialCount: 0 };\n    },\n    getInitialState: function () {\n        return { count: this.props.initialCount };\n    },\n    tick: function () {\n        this.setState({ count: this.state.count + 1 });\n    },\n    render: function () {\n        return (\n            &#x3C;a onClick={this.tick.bind(this)} href=\"#\" className=\"btn\" title={this.props.name}>\n                Click -> {this.props.name ? this.props.name : 'webapplog.com'}\n                (Clicked: {this.state.count})\n            &#x3C;/a>\n        );\n    }\n});\n</code></pre>\n<p>ES6 + JSX:</p>\n<pre><code class=\"language-js\">export class Link extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { count: props.initialCount };\n    }\n    tick() {\n        this.setState({ count: this.state.count + 1 });\n    }\n    render() {\n        return (\n            &#x3C;a onClick={this.tick.bind(this)} href=\"#\" className=\"btn\" title={this.props.name}>\n                Click -> {this.props.name ? this.props.name : 'webapplog.com'}\n                (Clicked: {this.state.count})\n            &#x3C;/a>\n        );\n    }\n}\nLink.propTypes = { initialCount: React.PropTypes.number };\nLink.defaultProps = { initialCount: 0 };\n</code></pre>\n<h2>Lifecycle Events</h2>\n<p>Modern React lifecycle methods (v16+)\n<img src=\"DZ-97vzW4AAbcZj.jpg\"></p>\n<p>Legacy Lifecycle Events:</p>\n<ul>\n<li><code>componentWillMount function()</code></li>\n<li><code>componentDidMount function()</code></li>\n<li><code>componentWillReceiveProps function(nextProps)</code></li>\n<li><code>shouldComponentUpdate function(nextProps, nextState)-> bool</code></li>\n<li><code>componentWillUpdate function(nextProps, nextState)</code></li>\n<li><code>componentDidUpdate function(prevProps, prevState)</code></li>\n<li><code>componentWillUnmount function()</code></li>\n</ul>\n<p>Sequence of lifecycle events:</p>\n<p><img src=\"lifecycle-events.png\"></p>\n<p>Inspired by <a href=\"http://react.tips\">http://react.tips</a></p>\n<h2>Special Props</h2>\n<ul>\n<li><code>key</code>: Unique identifier for an element to turn arrays/lists into hashes for better performance, e.g., <code>key={id}</code></li>\n<li><code>ref</code>: Reference to an element via <code>this.refs.NAME</code>, e.g., <code>ref=\"email\"</code> will create <code>this.refs.email</code> DOM node or <code>ReactDOM.findDOMNode(this.refs.email)</code></li>\n<li><code>style</code>: Accept an object of styles, instead of a string (immutable since v0.14), e.g., <code>style={{color: red}}</code></li>\n<li><code>className</code>: the HTML <code>class</code> attribute, e.g., <code>className=\"btn\"</code></li>\n<li><code>htmlFor</code>: the HTML <code>for</code> attribute, e.g., <code>htmlFor=\"email\"</code></li>\n<li><code>dangerouslySetInnerHTML</code>: raw HTML by providing an object with the key <code>__html</code></li>\n<li><code>children</code>: content of the element via <code>this.props.children</code>, e.g., <code>this.props.children[0]</code></li>\n<li><code>data-NAME</code>: custom attribute, e.g., <code>data-tooltip-text=\"...\"</code></li>\n</ul>\n<h2>propTypes</h2>\n<p>Types available under <code>React.PropTypes</code>:</p>\n<ul>\n<li><code>any</code></li>\n<li><code>array</code></li>\n<li><code>bool</code></li>\n<li><code>element</code></li>\n<li><code>func</code></li>\n<li><code>node</code></li>\n<li><code>number</code></li>\n<li><code>object</code></li>\n<li><code>string</code></li>\n</ul>\n<p>To make required, append <code>.isRequired</code>.</p>\n<p>More methods:</p>\n<ul>\n<li><code>instanceOf(constructor)</code></li>\n<li><code>oneOf(['News', 'Photos'])</code></li>\n<li><code>oneOfType([propType, propType])</code></li>\n</ul>\n<h3>Custom Validation</h3>\n<pre><code class=\"language-js\">propTypes: {\n  customProp: function(props, propName, componentName) {\n    if (!/regExPattern/.test(props[propName])) {\n      return new Error('Validation failed!');\n    }\n  }\n}\n</code></pre>\n<h2>Component Properties and Methods</h2>\n<p>Properties:</p>\n<ul>\n<li><code>this.refs</code>: Lists components with a <code>ref</code> prop</li>\n<li><code>this.props</code>: Any props passed to an element (immutable)</li>\n<li><code>this.state</code>: State set by setState and getInitialState (muttable) — avoid setting state manually with <code>this.state=...</code></li>\n<li><code>this.isMounted</code>: Flag whether the element has a corresponding DOM node or not</li>\n</ul>\n<p>Methods:</p>\n<ul>\n<li><code>setState(changes)</code>: Change state (partially) to <code>this.state</code> and trigger re-render</li>\n<li><code>replaceState(newState)</code>: Replace <code>this.state</code> and trigger re-render</li>\n<li><code>forceUpdate()</code>: Trigger DOM re-render immediately</li>\n</ul>\n<h2>React Addons</h2>\n<p>As npm modules:</p>\n<ul>\n<li><a href=\"http://facebook.github.io/react/docs/animation.html\"><code>react-addons-css-transition-group</code></a></li>\n<li><a href=\"http://facebook.github.io/react/docs/perf.html\"><code>react-addons-perf</code></a></li>\n<li><a href=\"http://facebook.github.io/react/docs/test-utils.html\"><code>react-addons-test-utils</code></a></li>\n<li><a href=\"http://facebook.github.io/react/docs/pure-render-mixin.html\"><code>react-addons-pure-render-mixin</code></a></li>\n<li><a href=\"http://facebook.github.io/react/docs/two-way-binding-helpers.html\"><code>react-addons-linked-state-mixin</code></a></li>\n<li><code>react-addons-clone-with-props</code></li>\n<li><code>react-addons-create-fragment</code></li>\n<li><code>react-addons-css-transition-group</code></li>\n<li><code>react-addons-linked-state-mixin</code></li>\n<li><code>react-addons-pure-render-mixin</code></li>\n<li><code>react-addons-shallow-compare</code></li>\n<li><code>react-addons-transition-group</code></li>\n<li><a href=\"http://facebook.github.io/react/docs/update.html\"><code>react-addons-update</code></a></li>\n</ul>\n<h2>React Components</h2>\n<ul>\n<li><a href=\"https://github.com/brillout/awesome-react-components\">https://github.com/brillout/awesome-react-components</a> and <a href=\"http://devarchy.com/react-components\">http://devarchy.com/react-components</a>: List of React components</li>\n<li><a href=\"http://www.material-ui.com\">Material-UI</a>: Material design React components</li>\n<li><a href=\"http://react-toolbox.com\">http://react-toolbox.com</a>: Set of React components that implement Google Material Design specification</li>\n<li><a href=\"https://js.coach\">https://js.coach</a>: Opinionated catalog of open source JS (mostly React) packages</li>\n<li><a href=\"https://react.rocks\">https://react.rocks</a>: Catalog of React components</li>\n<li><a href=\"https://khan.github.io/react-components\">https://khan.github.io/react-components</a>: Khan Academy React components</li>\n<li><a href=\"http://www.reactjsx.com\">http://www.reactjsx.com</a>: Registry of React components</li>\n</ul>\n<h3>Cheat Sheet:</h3>\n<pre><code class=\"language-js\">/* *******************************************************************************************\n * REACT.JS CHEATSHEET\n * DOCUMENTATION: https://reactjs.org/docs/\n * FILE STRUCTURE: https://reactjs.org/docs/faq-structure.html\n * ******************************************************************************************* */\n</code></pre>\n<p>npm install --save react // declarative and flexible JavaScript library for building UI\nnpm install --save react-dom // serves as the entry point of the DOM-related rendering paths\nnpm install --save prop-types // runtime type checking for React props and similar objects</p>\n<pre><code>// notes: don't forget the command lines\n\n\n/* *******************************************************************************************\n * REACT\n * https://reactjs.org/docs/react-api.html\n * ******************************************************************************************* */\n\n\n// Create and return a new React element of the given type.\n// Code written with JSX will be converted to use React.createElement().\n// You will not typically invoke React.createElement() directly if you are using JSX.\nReact.createElement(\n  type,\n  [props],\n  [...children]\n)\n\n// Clone and return a new React element using element as the starting point.\n// The resulting element will have the original element’s props with the new props merged in shallowly.\nReact.cloneElement(\n  element,\n  [props],\n  [...children]\n)\n\n// Verifies the object is a React element. Returns true or false.\nReact.isValidElement(object)\n\nReact.Children  // provides utilities for dealing with the this.props.children opaque data structure.\n\n// Invokes a function on every immediate child contained within children with this set to thisArg.\nReact.Children.map(children, function[(thisArg)])\n\n// Like React.Children.map() but does not return an array.\nReact.Children.forEach(children, function[(thisArg)])\n\n// Returns the total number of components in children,\n// equal to the number of times that a callback passed to map or forEach would be invoked.\nReact.Children.count(children)\n\n// Verifies that children has only one child (a React element) and returns it.\n// Otherwise this method throws an error.\nReact.Children.only(children)\n\n// Returns the children opaque data structure as a flat array with keys assigned to each child.\n// Useful if you want to manipulate collections of children in your render methods,\n// especially if you want to reorder or slice this.props.children before passing it down.\nReact.Children.toArray(children)\n\n// The React.Fragment component lets you return multiple elements in a render() method without creating an additional DOM element\n// You can also use it with the shorthand &#x3C;>&#x3C;/> syntax.\nReact.Fragment\n\n\n/* *******************************************************************************************\n * REACT.COMPONENT\n * React.Component is an abstract base class, so it rarely makes sense to refer to React.Component\n * directly. Instead, you will typically subclass it, and define at least a render() method.\n * https://reactjs.org/docs/react-component.html\n * ******************************************************************************************* */\n\n\nclass Component extends React.Component {\n  // Will be called before it is mounted\n  constructor(props) {\n    // Call this method before any other statement\n    // or this.props will be undefined in the constructor\n    super(props);\n\n    // The constructor is also often used to bind event handlers to the class instance.\n    // Binding makes sure the method has access to component attributes like this.props and this.state\n    this.method = this.method.bind(this);\n\n    // The constructor is the right place to initialize state.\n    this.state = {\n      active: true,\n\n      // In rare cases, it’s okay to initialize state based on props.\n      // This effectively “forks” the props and sets the state with the initial props.\n      // If you “fork” props by using them for state, you might also want to implement componentWillReceiveProps(nextProps)\n      // to keep the state up-to-date with them. But lifting state up is often easier and less bug-prone.\n      color: props.initialColor\n    };\n  }\n\n  // Enqueues changes to the component state and\n  // tells React that this component and its children need to be re-rendered with the updated state.\n  // setState() does not always immediately update the component. It may batch or defer the update until later.\n  // This makes reading this.state right after calling setState() a potential pitfall.\n  // Instead, use componentDidUpdate or a setState callback.\n  // You may optionally pass an object as the first argument to setState() instead of a function.\n  setState(updater[, callback]) { }\n\n  // Invoked just before mounting occurs (before render())\n  // This is the only lifecycle hook called on server rendering.\n  componentWillMount() { }\n\n  // Invoked immediately after a component is mounted.\n  // Initialization that requires DOM nodes should go here.\n  // If you need to load data from a remote endpoint, this is a good place to instantiate the network request.\n  // This method is a good place to set up any subscriptions. If you do that, don’t forget to unsubscribe in componentWillUnmount().\n  componentDidMount() { }\n\n  // Invoked before a mounted component receives new props.\n  // If you need to update the state in response to prop changes (for example, to reset it),\n  // you may compare this.props and nextProps and perform state transitions using this.setState() in this method.\n  componentWillReceiveProps(nextProps) { }\n\n  // Let React know if a component’s output is not affected by the current change in state or props.\n  // The default behavior is to re-render on every state change, and in the vast majority of cases you should rely on the default behavior.\n  // shouldComponentUpdate() is invoked before rendering when new props or state are being received. Defaults to true.\n  // This method is not called for the initial render or when forceUpdate() is used.\n  // Returning false does not prevent child components from re-rendering when their state changes.\n  shouldComponentUpdate(nextProps, nextState) { }\n\n  // Invoked just before rendering when new props or state are being received.\n  // Use this as an opportunity to perform preparation before an update occurs. This method is not called for the initial render.\n  // Note that you cannot call this.setState() here; nor should you do anything else\n  // (e.g. dispatch a Redux action) that would trigger an update to a React component before componentWillUpdate() returns.\n  // If you need to update state in response to props changes, use componentWillReceiveProps() instead.\n  componentWillUpdate(nextProps, nextState) { }\n\n  // Invoked immediately after updating occurs. This method is not called for the initial render.\n  // Use this as an opportunity to operate on the DOM when the component has been updated.\n  // This is also a good place to do network requests as long as you compare the current props to previous props (e.g. a network request may not be necessary if the props have not changed).\n  componentDidUpdate(prevProps, prevState) { }\n\n  // Invoked immediately before a component is unmounted and destroyed.\n  // Perform any necessary cleanup in this method, such as invalidating timers, canceling network requests,\n  // or cleaning up any subscriptions that were created in componentDidMount().\n  componentWillUnmount() { }\n\n  // Error boundaries are React components that catch JavaScript errors anywhere in their child component tree,\n  // log those errors, and display a fallback UI instead of the component tree that crashed.\n  // Error boundaries catch errors during rendering, in lifecycle methods, and in constructors of the whole tree below them.\n  componentDidCatch() { }\n\n  // This method is required.\n  // It should be pure, meaning that it does not modify component state,\n  // it returns the same result each time it’s invoked, and\n  // it does not directly interact with the browser (use lifecycle methods for this)\n  // It must return one of the following types: react elements, string and numbers, portals, null or booleans.\n  render() {\n    // Contains the props that were defined by the caller of this component.\n    console.log(this.props);\n\n    // Contains data specific to this component that may change over time.\n    // The state is user-defined, and it should be a plain JavaScript object.\n    // If you don’t use it in render(), it shouldn’t be in the state.\n    // For example, you can put timer IDs directly on the instance.\n    // Never mutate this.state directly, as calling setState() afterwards may replace the mutation you made.\n    // Treat this.state as if it were immutable.\n    console.log(this.state);\n\n    return (\n      &#x3C;div>\n        {/* Comment goes here */}\n        Hello, {this.props.name}!\n      &#x3C;/div>\n    );\n  }\n}\n\n// Can be defined as a property on the component class itself, to set the default props for the class.\n// This is used for undefined props, but not for null props.\nComponent.defaultProps = {\n  color: 'blue'\n};\n\ncomponent = new Component();\n\n// By default, when your component’s state or props change, your component will re-render.\n// If your render() method depends on some other data, you can tell React that the component needs re-rendering by calling forceUpdate().\n// Normally you should try to avoid all uses of forceUpdate() and only read from this.props and this.state in render().\ncomponent.forceUpdate(callback)\n\n\n/* *******************************************************************************************\n * REACT.DOM\n * The react-dom package provides DOM-specific methods that can be used at the top level of\n * your app and as an escape hatch to get outside of the React model if you need to.\n * Most of your components should not need to use this module.\n * https://reactjs.org/docs/react-dom.html\n * ******************************************************************************************* */\n\n\n// Render a React element into the DOM in the supplied container and return a reference\n// to the component (or returns null for stateless components).\nReactDOM.render(element, container[, callback])\n\n// Same as render(), but is used to hydrate a container whose HTML contents were rendered\n// by ReactDOMServer. React will attempt to attach event listeners to the existing markup.\nReactDOM.hydrate(element, container[, callback])\n\n// Remove a mounted React component from the DOM and clean up its event handlers and state.\n// If no component was mounted in the container, calling this function does nothing.\n// Returns true if a component was unmounted and false if there was no component to unmount.\nReactDOM.unmountComponentAtNode(container)\n\n// If this component has been mounted into the DOM, this returns the corresponding native browser\n// DOM element. This method is useful for reading values out of the DOM, such as form field values\n// and performing DOM measurements. In most cases, you can attach a ref to the DOM node and avoid\n// using findDOMNode at all.\nReactDOM.findDOMNode(component)\n\n// Creates a portal. Portals provide a way to render children into a DOM node that exists outside\n// the hierarchy of the DOM component.\nReactDOM.createPortal(child, container)\n\n\n/* *******************************************************************************************\n * REACTDOMSERVER\n * The ReactDOMServer object enables you to render components to static markup.\n * https://reactjs.org/docs/react-dom.html\n * ******************************************************************************************* */\n\n\n// Render a React element to its initial HTML. React will return an HTML string.\n// You can use this method to generate HTML on the server and send the markup down on the initial\n// request for faster page loads and to allow search engines to crawl your pages for SEO purposes.\nReactDOMServer.renderToString(element)\n\n// Similar to renderToString, except this doesn’t create extra DOM attributes that React uses\n// internally, such as data-reactroot. This is useful if you want to use React as a simple static\n// page generator, as stripping away the extra attributes can save some bytes.\nReactDOMServer.renderToStaticMarkup(element)\n\n// Render a React element to its initial HTML. Returns a Readable stream that outputs an HTML string.\n// The HTML output by this stream is exactly equal to what ReactDOMServer.renderToString would return.\n// You can use this method to generate HTML on the server and send the markup down on the initial\n// request for faster page loads and to allow search engines to crawl your pages for SEO purposes.\nReactDOMServer.renderToNodeStream(element)\n\n// Similar to renderToNodeStream, except this doesn’t create extra DOM attributes that React uses\n// internally, such as data-reactroot. This is useful if you want to use React as a simple static\n// page generator, as stripping away the extra attributes can save some bytes.\nReactDOMServer.renderToStaticNodeStream(element)\n\n\n/* *******************************************************************************************\n * TYPECHECKING WITH PROPTYPES\n * https://reactjs.org/docs/typechecking-with-proptypes.html\n * ******************************************************************************************* */\n\n\nimport PropTypes from 'prop-types';\n\nMyComponent.propTypes = {\n  // You can declare that a prop is a specific JS type. By default, these\n  // are all optional.\n  optionalArray: PropTypes.array,\n  optionalBool: PropTypes.bool,\n  optionalFunc: PropTypes.func,\n  optionalNumber: PropTypes.number,\n  optionalObject: PropTypes.object,\n  optionalString: PropTypes.string,\n  optionalSymbol: PropTypes.symbol,\n\n  // Anything that can be rendered: numbers, strings, elements or an array\n  // (or fragment) containing these types.\n  optionalNode: PropTypes.node,\n\n  // A React element.\n  optionalElement: PropTypes.element,\n\n  // You can also declare that a prop is an instance of a class. This uses\n  // JS's instanceof operator.\n  optionalMessage: PropTypes.instanceOf(Message),\n\n  // You can ensure that your prop is limited to specific values by treating\n  // it as an enum.\n  optionalEnum: PropTypes.oneOf(['News', 'Photos']),\n\n  // An object that could be one of many types\n  optionalUnion: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(Message)\n  ]),\n\n  // An array of a certain type\n  optionalArrayOf: PropTypes.arrayOf(PropTypes.number),\n\n  // An object with property values of a certain type\n  optionalObjectOf: PropTypes.objectOf(PropTypes.number),\n\n  // An object taking on a particular shape\n  optionalObjectWithShape: PropTypes.shape({\n    color: PropTypes.string,\n    fontSize: PropTypes.number\n  }),\n\n  // You can chain any of the above with `isRequired` to make sure a warning\n  // is shown if the prop isn't provided.\n  requiredFunc: PropTypes.func.isRequired,\n\n  // A value of any data type\n  requiredAny: PropTypes.any.isRequired,\n\n  // You can also specify a custom validator. It should return an Error\n  // object if the validation fails. Don't `console.warn` or throw, as this\n  // won't work inside `oneOfType`.\n  customProp: function(props, propName, componentName) {\n    if (!/matchme/.test(props[propName])) {\n      return new Error(\n        'Invalid prop `' + propName + '` supplied to' +\n        ' `' + componentName + '`. Validation failed.'\n      );\n    }\n  },\n\n  // You can also supply a custom validator to `arrayOf` and `objectOf`.\n  // It should return an Error object if the validation fails. The validator\n  // will be called for each key in the array or object. The first two\n  // arguments of the validator are the array or object itself, and the\n  // current item's key.\n  customArrayProp: PropTypes.arrayOf(function(propValue, key, componentName, location, propFullName) {\n    if (!/matchme/.test(propValue[key])) {\n      return new Error(\n        'Invalid prop `' + propFullName + '` supplied to' +\n        ' `' + componentName + '`. Validation failed.'\n      );\n    }\n  })\n};\n</code></pre>"},{"url":"/docs/javascript/clean-code/","relativePath":"docs/javascript/clean-code.md","relativeDir":"docs/javascript","base":"clean-code.md","name":"clean-code","frontmatter":{"title":"lorem-ipsum","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h2>Lorem ipsum</h2>\n<p>Lorem ipsum dolor sit amet, <strong>consectetur adipiscing elit</strong>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<ul>\n<li>Lorem ipsum</li>\n<li>dolor sit amet</li>\n</ul>"},{"url":"/docs/quick-reference/minifiction/","relativePath":"docs/quick-reference/minifiction.md","relativeDir":"docs/quick-reference","base":"minifiction.md","name":"minifiction","frontmatter":{"title":"How To Minify Code For Better Web Performance ","weight":1,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<p>In production, it is recommended to minify any JavaScript code that is included with your application. <strong>Minification can help your website load several times faster,</strong> especially as the size of your JavaScript source code grows.</p>\n<p>Here's one way to set it up:</p>\n<ol>\n<li><a href=\"https://nodejs.org/\">Install Node.js</a></li>\n<li>Run npm init -y in your project folder (<strong>don't skip this step!</strong>)</li>\n<li>Run npm install terser</li>\n</ol>\n<p>Now, to minify a file called like_button.js, run in the terminal:</p>\n<p>This will produce a file called like_button.min.js with the minified code in the same directory. If you're typing this often, you can <a href=\"https://medium.freecodecamp.org/introduction-to-npm-scripts-1dbb2ae01633\">create an npm script</a> to give this command a name.</p>\n<h2>How to Minify Your Minify your HTML, CSS and JavaScript Using an Online Tool\n\n</h2>\n<p>Many of these online tools have a similar process which involve the following steps:</p>\n<p>Paste in your source code or upload the source code file.\nOptimize the settings for a specific output (if options are available)\nClick a button to minify or compress the code.\nCopy the minified code output or download the minified code file.</p>\n<p>For this example, I’m going to use the minify tools from minifycode.com.</p>\n<p>First, locate the css file (commonly named style.css) in your site files and open the file using a page editor. Then copy the entire css code to your clipboard.</p>\n<p><img src=\"https://www.elegantthemes.com/blog/wp-content/uploads/2018/12/min4.png\"></p>\n<p>Go to <a href=\"http://minifycode.com/css-minifier/\">minifycode.com</a> and click the CSS minifier tab. Then paste the CSS code into the input box and click the Minify CSS button.</p>\n<p><img src=\"https://www.elegantthemes.com/blog/wp-content/uploads/2018/12/min5.png\"></p>\n<p>After the new minified code is generated, copy the code.</p>\n<p><img src=\"https://www.elegantthemes.com/blog/wp-content/uploads/2018/12/min6.png\"></p>\n<p>Then go back to the css file of your website and replace the code with the new minified version.</p>\n<p>That’s it!</p>\n<p>Repeat the same process to minify your site’s JavaScript and Html file(s) as well.</p>\n<h3>Overview\n\n</h3>\n<p>Minification refers to the process of removing unnecessary or redundant data without affecting how the resource is processed by the browser - e.g. code comments and formatting, removing unused code, using shorter variable and function names, and so on.</p>\n<p>See <a href=\"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/optimize-encoding-and-transfer#minification-preprocessing--context-specific-optimizations\">preprocessing &#x26; context-specific optimizations</a> to learn more.</p>\n<h3>Recommendations</h3>\n<p>You should minify your HTML, CSS, and JavaScript resources:</p>\n<ul>\n<li>To minify HTML, try <a href=\"https://github.com/kangax/html-minifier\">HTMLMinifier</a></li>\n<li>To minify CSS, try <a href=\"https://github.com/ben-eb/cssnano\">CSSNano</a> and <a href=\"https://github.com/css/csso\">csso</a>.</li>\n<li>To minify JavaScript, try <a href=\"https://github.com/mishoo/UglifyJS2\">UglifyJS</a>. The <a href=\"https://developers.google.com/closure/compiler\">Closure Compiler</a> is also <a href=\"https://github.com/samccone/The-cost-of-transpiling-es2015-in-2016#summary-of-findings\">very effective</a>. You can create a build process that uses these tools to minify and rename the development files and save them to a production directory.</li>\n</ul>\n<p>Alternatively, the <a href=\"https://developers.google.com/speed/pagespeed/module\">PageSpeed Module</a>, integrates with an Apache or Nginx web server to automatically optimize your site, including resource minification.</p>"},{"url":"/docs/articles/http/","relativePath":"docs/articles/http.md","relativeDir":"docs/articles","base":"http.md","name":"http","frontmatter":{"title":"The HTTP Protocol","weight":0,"excerpt":"The HTTP Protocol","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h2>The HTTP Protocol\n\n</h2>\n<ul>\n<li>Requires: a connection between client and server</li>\n<li>Stateless: no login process, each request is independent</li>\n<li>Simple format: request header, blank line, possible payload</li>\n<li>Symmetrical: allows data to be sent and recieved</li>\n<li>Very easy to implement but scales very well</li>\n</ul>\n<h2>Example HTTP Request</h2>\n<p>Note lines folded for display.</p>\n<p>What do each of these headers mean? Which are required? Many are defined in the <a href=\"ftp://ftp.isi.edu/in-notes/rfc2616.txt\">HTTP standard</a> but others can be defined via the HTTP extension framework.</p>\n<h2>Example HTTP Response</h2>\n<h2>Example HTTP POST Request</h2>\n<p>Note lines folded for display.</p>\n<p>This is a POST request, note how the data is encoded in the request body.</p>\n<h2>Example HTTP GET Request</h2>\n<p>Note lines folded for display.</p>\n<p>This is the same form submitted via a GET request, here the data is encoded in request URL. Note also the If-Modified-Since header in this request, sent because my browser has just asked for the same resource.</p>\n<h2>HTTP Redirect</h2>\n<p>Alternately</p>\n<p>The HTTP redirect is a server response that can be used to indicate that a resource has moved to a new location. An alternate is to include the above meta tag in a page header to force a redirect from the current page.</p>\n<h2>HTTP Verbs</h2>\n<ul>\n<li>GET - get a resource, <em>Idempotent</em></li>\n<li>POST - send some data to a resource</li>\n<li>HEAD - get headers for a resource</li>\n<li>PUT - create a new resource</li>\n<li>DELETE - delete a resource</li>\n</ul>\n<h2>Common HTTP Response Status Codes</h2>\n<p>Some notable response codes:</p>\n<ul>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#2xx_Success\">200 OK</a> - Request succeeded and everything went well</li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#3xx_Redirection\">301 Moved Permanently</a> - Requested resource has moved and all future requests should be made to new location</li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error\">403 Forbidden</a> - Response refused by server (even if request is valid)</li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error\">404 Not Found</a> - Server could not find requested resource (though it may be available in the future)</li>\n<li><a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#5xx_Server_Error\">500 Internal Server Error</a> - Generic error message response when server encountered an error</li>\n</ul>\n<p>See also: <a href=\"http://en.wikipedia.org/wiki/List_of_HTTP_status_codes\">full list of HTTP status codes</a></p>\n<h2>Resources</h2>\n<ul>\n<li>Use <a href=\"https://addons.mozilla.org/en-US/firefox/addon/3829\">Live HTTP Headers</a> in Firefox to view headers of requests that you make. Also available as a <a href=\"https://chrome.google.com/webstore/detail/live-http-headers/iaiioopjkcekapmldfgbebdclcnpgnlo\">Chrome Extension</a>.</li>\n<li>Similarly, in Google Chrome, the <a href=\"http://www.chromium.org/devtools/google-chrome-developer-tools-tutorial#resources\">Resources panel</a> in the Developer tools allows you to view the request headers and content for each request that was made when you're looking at a page.</li>\n<li>Wikipedia's <a href=\"http://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\">entry on HTTP</a> gives a good overview of the protocol.</li>\n</ul>"},{"url":"/blog/functions-in-python/","relativePath":"blog/functions-in-python.md","relativeDir":"blog","base":"functions-in-python.md","name":"functions-in-python","frontmatter":{"title":"Functions in Python","subtitle":"Functions in Python","date":"2021-10-14","thumb_image_alt":"lorem-ipsum","excerpt":"wubalubadubdub","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"post","thumb_image":"images/python2.jpg"},"html":"<h2>Functions</h2>\n<pre><code class=\"language-python\">def hello(name):\n    print('Hello {}'.format(name))\n</code></pre>\n<h3>Return Values and return Statements</h3>\n<p>When creating a function using the def statement, you can specify what the return value should be with a return statement. A return statement consists of the following:</p>\n<ul>\n<li>The return keyword.</li>\n<li>The value or expression that the function should return.</li>\n</ul>\n<pre><code class=\"language-python\">import random\ndef getAnswer(answerNumber):\n    if answerNumber == 1:\n        return 'It is certain'\n    elif answerNumber == 2:\n        return 'It is decidedly so'\n    elif answerNumber == 3:\n        return 'Yes'\n    elif answerNumber == 4:\n        return 'Reply hazy try again'\n    elif answerNumber == 5:\n        return 'Ask again later'\n    elif answerNumber == 6:\n        return 'Concentrate and ask again'\n    elif answerNumber == 7:\n        return 'My reply is no'\n    elif answerNumber == 8:\n        return 'Outlook not so good'\n    elif answerNumber == 9:\n        return 'Very doubtful'\n\nr = random.randint(1, 9)\nfortune = getAnswer(r)\nprint(fortune)\n</code></pre>\n<h3>The None Value</h3>\n<pre><code class=\"language-python\">spam = print('Hello!')\nspam is None\n</code></pre>\n<p>Note: never compare to <code>None</code> with the <code>==</code> operator. Always use <code>is</code>.</p>\n<h3>print Keyword Arguments</h3>\n<pre><code class=\"language-python\">print('Hello', end='')\nprint('World')\n</code></pre>\n<pre><code class=\"language-python\">print('cats', 'dogs', 'mice')\n</code></pre>\n<pre><code class=\"language-python\">print('cats', 'dogs', 'mice', sep=',')\n</code></pre>\n<h3>Local and Global Scope</h3>\n<ul>\n<li>Code in the global scope cannot use any local variables.</li>\n<li>However, a local scope can access global variables.</li>\n<li>Code in a function’s local scope cannot use variables in any other local scope.</li>\n<li>You can use the same name for different variables if they are in different scopes. That is, there can be a local variable named spam and a global variable also named spam.</li>\n</ul>\n<h3>The global Statement</h3>\n<p>If you need to modify a global variable from within a function, use the global statement:</p>\n<pre><code class=\"language-python\">def spam():\n    global eggs\n    eggs = 'spam'\n\neggs = 'global'\nspam()\nprint(eggs)\n</code></pre>\n<p>There are four rules to tell whether a variable is in a local scope or global scope:</p>\n<ol>\n<li>If a variable is being used in the global scope (that is, outside of all functions), then it is always a global variable.</li>\n<li>If there is a global statement for that variable in a function, it is a global variable.</li>\n<li>Otherwise, if the variable is used in an assignment statement in the function, it is a local variable.</li>\n<li>But if the variable is not used in an assignment statement, it is a global variable.</li>\n</ol>"},{"url":"/blog/big-o-complexity/","relativePath":"blog/big-o-complexity.md","relativeDir":"blog","base":"big-o-complexity.md","name":"big-o-complexity","frontmatter":{"title":"Big O Computational Complexity","subtitle":"Explained using gif animations","date":"2021-09-11","thumb_image_alt":"neural network","excerpt":"Bubble sort, sorts an array of integers by bubbling the largest integer to the top.","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"post","thumb_image":"images/neural-c16cd3ca.PNG","image":"images/my-back-0b8b3eaf.png"},"html":"<h3>Sorting Algorithms<img src=\"https://cdn-images-1.medium.com/max/800/0*Ck9aeGY-d5tbz7dT\"><img src=\"https://cdn-images-1.medium.com/max/800/0*AByxtBjFrPVVYmyu\"><img src=\"https://cdn-images-1.medium.com/max/800/0*GeYNxlRcbt2cf0rY\"><img src=\"https://cdn-images-1.medium.com/max/800/0*gbNU6wrszGPrfAZG\"><img src=\"https://cdn-images-1.medium.com/max/800/0*GeU8YwwCoK8GiSTD\"><img src=\"https://cdn-images-1.medium.com/max/800/0*IxqGb72XDVDeeiMl\"><img src=\"https://cdn-images-1.medium.com/max/800/0*HMCR--9niDt5zY6M\"><img src=\"https://cdn-images-1.medium.com/max/800/0*WLl_HpdBGXYx284T\"><img src=\"https://cdn-images-1.medium.com/max/800/0*-LyHJXGPTYsWLDZf\"><img src=\"https://cdn-images-1.medium.com/max/800/0*-naVYGTXzE2Yoali\">\n\n</h3>\n<h3>Bubble Sort</h3>\n<p>Time Complexity: Quadratic O(n^2)</p>\n<ul>\n<li>The inner for-loop contributes to O(n), however in a worst case scenario the while loop will need to run n times before bringing all n elements to their final resting spot.</li>\n</ul>\n<p>Space Complexity: O(1)</p>\n<ul>\n<li>Bubble Sort will always use the same amount of memory regardless of n.</li>\n</ul>\n<p><a href=\"https://gist.github.com/eengineergz/e67e56bed7c5a20a54851867ba5efef6\">https://gist.github.com/eengineergz/e67e56bed7c5a20a54851867ba5efef6</a></p>\n<ul>\n<li>The first major sorting algorithm one learns in introductory programming courses.</li>\n<li>Gives an intro on how to convert unsorted data into sorted data.</li>\n</ul>\n<blockquote>\n<p>It’s almost never used in production code because:</p>\n</blockquote>\n<ul>\n<li><em>It’s not efficient</em></li>\n<li><em>It’s not commonly used</em></li>\n<li><em>There is stigma attached to it</em></li>\n<li><em>Bubbling Up : Term that infers that an item is in motion, moving in some direction, and has some final resting destination.</em></li>\n<li><em>Bubble sort, sorts an array of integers by bubbling the largest integer to the top.</em></li>\n</ul>\n<p><a href=\"https://gist.github.com/eengineergz/fd4acc0c89033bd219ebf9d3ec40b053\">https://gist.github.com/eengineergz/fd4acc0c89033bd219ebf9d3ec40b053</a><a href=\"https://gist.github.com/eengineergz/80934783c628c70ac2a5a48119a82d54\">https://gist.github.com/eengineergz/80934783c628c70ac2a5a48119a82d54</a></p>\n<ul>\n<li><em>Worst Case &#x26; Best Case are always the same because it makes nested loops.</em></li>\n<li><em>Double for loops are polynomial time complexity or more specifically in this case Quadratic (Big O) of: O(n²)</em></li>\n</ul>\n<h3>Selection Sort</h3>\n<p>Time Complexity: Quadratic O(n^2)</p>\n<ul>\n<li>Our outer loop will contribute O(n) while the inner loop will contribute O(n / 2) on average. Because our loops are nested we will get O(n²);</li>\n</ul>\n<p>Space Complexity: O(1)</p>\n<ul>\n<li>Selection Sort will always use the same amount of memory regardless of n.</li>\n</ul>\n<p><a href=\"https://gist.github.com/eengineergz/4abc0fe0bf01599b0c4104b0ba633402\">https://gist.github.com/eengineergz/4abc0fe0bf01599b0c4104b0ba633402</a></p>\n<ul>\n<li>Selection sort organizes the smallest elements to the start of the array.</li>\n</ul>\n<blockquote>\n<p>Summary of how Selection Sort should work:</p>\n</blockquote>\n<ol>\n<li><em>Set MIN to location 0</em></li>\n<li><em>Search the minimum element in the list.</em></li>\n<li><em>Swap with value at location Min</em></li>\n<li><em>Increment Min to point to next element.</em></li>\n<li><em>Repeat until list is sorted.</em></li>\n</ol>\n<p><a href=\"https://gist.github.com/eengineergz/61f130c8e0097572ed908fe2629bdee0\">https://gist.github.com/eengineergz/61f130c8e0097572ed908fe2629bdee0</a></p>\n<h3>Insertion Sort</h3>\n<p>Time Complexity: Quadratic O(n^2)</p>\n<ul>\n<li>Our outer loop will contribute O(n) while the inner loop will contribute O(n / 2) on average. Because our loops are nested we will get O(n²);</li>\n</ul>\n<p>Space Complexity: O(n)</p>\n<ul>\n<li>Because we are creating a subArray for each element in the original input, our Space Comlexity becomes linear.</li>\n</ul>\n<p><a href=\"https://gist.github.com/eengineergz/a9f4b8596c7546ac92746db659186d8c\">https://gist.github.com/eengineergz/a9f4b8596c7546ac92746db659186d8c</a></p>\n<h3>Merge Sort</h3>\n<p>Time Complexity: Log Linear O(nlog(n))</p>\n<ul>\n<li>Since our array gets split in half every single time we contribute O(log(n)). The while loop contained in our helper merge function contributes O(n) therefore our time complexity is O(nlog(n)); Space Complexity: O(n)</li>\n<li>We are linear O(n) time because we are creating subArrays.</li>\n</ul>\n<h3>Example of Merge Sort</h3>\n<p><a href=\"https://gist.github.com/eengineergz/18fbb7edc9f5c4820ccfcecacf3c5e48\">https://gist.github.com/eengineergz/18fbb7edc9f5c4820ccfcecacf3c5e48</a><a href=\"https://gist.github.com/eengineergz/cbb533137a7f957d3bc4077395c1ff64\">https://gist.github.com/eengineergz/cbb533137a7f957d3bc4077395c1ff64</a></p>\n<ul>\n<li><strong>Merge sort is O(nlog(n)) time.</strong></li>\n<li><em>We need a function for merging and a function for sorting.</em></li>\n</ul>\n<blockquote>\n<p>Steps:</p>\n</blockquote>\n<ol>\n<li><em>If there is only one element in the list, it is already sorted; return the array.</em></li>\n<li><em>Otherwise, divide the list recursively into two halves until it can no longer be divided.</em></li>\n<li><em>Merge the smallest lists into new list in a sorted order.</em></li>\n</ol>\n<h3>Quick Sort</h3>\n<p>Time Complexity: Quadratic O(n^2)</p>\n<ul>\n<li>Even though the average time complexity O(nLog(n)), the worst case scenario is always quadratic.</li>\n</ul>\n<p>Space Complexity: O(n)</p>\n<ul>\n<li>Our space complexity is linear O(n) because of the partition arrays we create.</li>\n<li>QS is another Divide and Conquer strategy.</li>\n<li>Some key ideas to keep in mind:</li>\n<li>It is easy to sort elements of an array relative to a particular target value.</li>\n<li>An array of 0 or 1 elements is already trivially sorted.</li>\n</ul>\n<p><a href=\"https://gist.github.com/eengineergz/24bcbc5248a8c4e1671945e9512da57e\">https://gist.github.com/eengineergz/24bcbc5248a8c4e1671945e9512da57e</a></p>\n<h3>Binary Search</h3>\n<p>Time Complexity: Log Time O(log(n))</p>\n<p>Space Complexity: O(1)</p>\n<blockquote>\n<p><em>Recursive Solution</em></p>\n</blockquote>\n<p><a href=\"https://gist.github.com/eengineergz/c82c00a4bcba4b69b7d326d6cad3ac8c\">https://gist.github.com/eengineergz/c82c00a4bcba4b69b7d326d6cad3ac8c</a></p>\n<blockquote>\n<p><em>Min Max Solution</em></p>\n</blockquote>\n<p><a href=\"https://gist.github.com/eengineergz/eb8d1e1684db15cc2c8af28e13f38751\">https://gist.github.com/eengineergz/eb8d1e1684db15cc2c8af28e13f38751</a><a href=\"https://gist.github.com/eengineergz/bc3f576b9795ccef12a108e36f9f820a\">https://gist.github.com/eengineergz/bc3f576b9795ccef12a108e36f9f820a</a></p>\n<ul>\n<li><em>Must be conducted on a sorted array.</em></li>\n<li><em>Binary search is logarithmic time, not exponential b/c n is cut down by two, not growing.</em></li>\n<li><em>Binary Search is part of Divide and Conquer.</em></li>\n</ul>\n<h3>Insertion Sort</h3>\n<ul>\n<li><strong>Works by building a larger and larger sorted region at the left-most end of the array.</strong></li>\n</ul>\n<blockquote>\n<p>Steps:</p>\n</blockquote>\n<ol>\n<li><em>If it is the first element, and it is already sorted; return 1.</em></li>\n<li><em>Pick next element.</em></li>\n<li><em>Compare with all elements in the sorted sub list</em></li>\n<li><em>Shift all the elements in the sorted sub list that is greater than the value to be sorted.</em></li>\n<li><em>Insert the value</em></li>\n<li><em>Repeat until list is sorted.</em></li>\n</ol>\n<p><a href=\"https://gist.github.com/eengineergz/ffead1de0836c4bcc6445780a604f617\">https://gist.github.com/eengineergz/ffead1de0836c4bcc6445780a604f617</a></p>"},{"url":"/docs/quick-reference/topRepos/","relativePath":"docs/quick-reference/topRepos.md","relativeDir":"docs/quick-reference","base":"topRepos.md","name":"topRepos","frontmatter":{"title":"Top Repos","weight":1,"seo":{"title":"Top Repos","description":"This is the Top Repos page","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Top Repos","keyName":"property"},{"name":"og:description","value":"This is the Top Repos page","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Top Repos"},{"name":"twitter:description","value":"This is the Top Repos page"}]},"template":"docs"},"html":"<h1>My Top Repos / Websites:</h1>\n<ul>\n<li><a href=\"https://github.com/bgoonz/PYTHON_PRAC\">Python Practice</a></li>\n<li><a href=\"https://lambda-resources.netlify.app/\">Lambda Bootcamp Website</a></li>\n<li><a href=\"https://github.com/bgoonz/React_Notes_V3\">React Notes</a></li>\n<li><a href=\"https://github.com/bgoonz/Project-Showcase\">Project Showcase</a></li>\n<li><a href=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\">Data Structures &#x26; Algorithms</a></li>\n<li><a href=\"https://github.com/bgoonz/Lambda-Resource-Static-Assets\">Lambda Site Static Content Server</a></li>\n<li><a href=\"https://github.com/bgoonz/mini-project-showcase\">Mini-Project Showcase</a></li>\n<li><a href=\"https://github.com/bgoonz/Useful-Snippets-js\">Useful Snippets</a></li>\n<li><a href=\"https://github.com/bgoonz/Markdown-Templates\">Markdown Templates</a></li>\n<li><a href=\"https://github.com/bgoonz/zumzi-chat-messenger\">Zumzi Video Conferencing App (mesibo api backend)</a></li>\n</ul>\n<p><a href=\"https://pages.databricks.com/rs/094-YMS-629/images/dynamic-time-warping-background.html\">https://pages.databricks.com/rs/094-YMS-629/images/dynamic-time-warping-background.html</a></p>"},{"url":"/blog/git-gateway/","relativePath":"blog/git-gateway.md","relativeDir":"blog","base":"git-gateway.md","name":"git-gateway","frontmatter":{"title":"Git Bash","subtitle":"understanding git bsh","date":"2021-09-30","thumb_image_alt":"lorem-ipsum","excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"post","thumb_image":"images/git.png"},"html":"<h2>Lorem ipsum</h2>\n<p>Lorem ipsum dolor sit amet, <strong>consectetur adipiscing elit</strong>, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n<ul>\n<li>Lorem ipsum</li>\n<li>dolor sit amet</li>\n</ul>"},{"url":"/showcase/","relativePath":"showcase.md","relativeDir":"","base":"showcase.md","name":"showcase","frontmatter":{"title":"Showcase","sections":[{"section_id":"hero","type":"section_hero","title":"Showcase","image":"images/charming-dolphin.gif","content":"Some of my more engaging projects!\n"},{"section_id":"showcase","type":"section_grid","col_number":"three","grid_items":[{"title":"Git HTML PREVIEW","title_url":"https://github.com/bgoonz/GIT-HTML-PREVIEW-TOOL","image":"images/futuristic-mars.gif","content":"Preview html files by pasting their url into the search bar\n\n**Access-Control-Allow-Origin Header When Site A tries to fetch content from Site B**\n","actions":[{"label":"Live Site","url":"/https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/","style":"icon","icon_class":"github","new_window":true,"no_follow":false,"type":"action"}],"image_alt":"git html preview"},{"title":"Guitar Effects Automation Using Subsequence Dynamic Time Warping","title_url":"https://github.com/bgoonz/Revamped-Automatic-Guitar-Effect-Triggering","image":"images/curious-europa.gif","content":"**Modified subsequence dynamic time warping feature detection using pure data implemented in python**\n","actions":[{"label":"Slide Show","url":"https://1drv.ms/p/s!AkGiZ9n9CRDSpY88x407JwfEKNrDxg?e=faHSx9","style":"link","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}]},{"title":"Data Structures Interactive Learning Hub","title_url":"https://ds-algo-official-c3dw6uapg-bgoonz.vercel.app/","image":"images/ds-algo.gif","content":"**Big O notation is the language we use for talking about how long an algorithm takes to run. It's how we compare the efficiency of different approaches to a problem.**\n","actions":[{"label":"Live Site","url":"https://github.com/bgoonz/DS-ALGO-OFFICIAL","style":"icon","icon_class":"github","new_window":true,"no_follow":false,"type":"action"}]},{"title":"Learning Redux","title_url":"https://learning-redux42.netlify.app/","image_alt":"lorem-ipsum","content":"***React Redux provides a pair of custom React hooks that allow your React components to interact with the Redux store.***\n","actions":[{"label":"Website","url":"https://learning-redux42.netlify.app/","style":"icon","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}],"type":"grid_item","image":"images/best-birch.gif"},{"title":"Mihir-Beg-Music.com","title_url":"https://panoramic-eggplant-452e4.netlify.app/","image":"images/7a8bc98e902a2f6dea90386cdfb154c2.png","content":"Artist Showcase & Podcasting Site\n","actions":[{"label":"Live Site","url":"https://panoramic-eggplant-452e4.netlify.app/","style":"link","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}]},{"title":"Aux Blog w NextJS","title_url":"https://bgoonz-blog-v3-0.netlify.app/","image_alt":"get in touch","content":"**Here lives my alternate/backup blog site!**\n","actions":[{"label":"git repo","url":"https://github.com/bgoonz/alternate-blog-theme","style":"icon","icon_class":"github","new_window":true,"no_follow":false,"type":"action"}],"type":"grid_item","image":"images/21ecc2f26e2641c8e9aae5479481bbe2 (5).png"},{"title":"Potluck Planner","title_url":"https://potluck-landing.netlify.app/","image_alt":"lorem-ipsum","content":"## Potluck Planner\n\nIf you have ever tried to organize a potluck through text messages, online to-do lists or spreadsheets, you'll understand why this app is essential.In the world of social gatherings and potlucks the \"Potluck Planner\" is king. This is your place for all things pot luck.\n\n","actions":[],"type":"grid_item","image":"images/potluck-planner.JPG"},{"title":"Zumzi Video Conferencing","title_url":"https://github.com/bgoonz/zumzi-chat-messenger","image_alt":"video chat","content":"**Features:   Live Streaming, Screen Sharing, Fine control over all video & audio parameters and user permissions, Supports video streaming at various resolutions: Standard, HD, FHD and 4K, Group Chat, One-to-One chat, Invite Participants**\n","actions":[{"label":"Live Site","url":"https://goofy-perlman-0f61df.netlify.app/","style":"link","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}],"type":"grid_item","image":"images/energetic-sunflower.png"},{"title":"Web Audio Workstation","title_url":"lorem-ipsum","image_alt":"lorem-ipsum","content":"Made using jQuery and Vanilla JS\n\n","actions":[{"label":"Go To Live Site","url":"https://mihirbegmusiclab.netlify.app/","style":"link","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"},{"label":"Github Repo","url":"https://github.com/bgoonz/MihirBegMusicLab","style":"link","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}],"type":"grid_item","image":"images/royal-kangaroo.JPG"}]}],"seo":{"title":"Showcase","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Showcase","keyName":"property"},{"name":"og:description","value":"project showcase","keyName":"property"},{"name":"og:image","value":"images/My Post-4ecb169f.png","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Showcase"},{"name":"twitter:description","value":"This is the showcase page"},{"name":"twitter:image","value":"images/5.jpg","relativeUrl":true}],"description":"Git HTML PREVIEW, Guitar Effects, Data Structures, Redux, Podcast Blog, Contact Form, Potluck Planner, Video Conferencing, Web Audio Workstation"},"template":"advanced"},"html":""},{"url":"/docs/quick-reference/how-2-reinstall-npm/","relativePath":"docs/quick-reference/how-2-reinstall-npm.md","relativeDir":"docs/quick-reference","base":"how-2-reinstall-npm.md","name":"how-2-reinstall-npm","frontmatter":{"title":"How To Reinstall NPM and Node.js On Your System","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<p>The Node Package Manager (usually shortened to npm) and Node.js are popular technologies among JavaScript developers. npm is the default package management utility that is installed automatically on your machine when you download and install Node.js.</p>\n<p>npm assists in building, consuming, managing, and sharing small pieces of code. On the other hand, Node.js provides a server-side environment for creating powerful applications. </p>\n<p>However, at times, npm can get corrupted, become incompatible with other programs, or just experience performance issues. In such cases, it may help to reinstall npm on your system and save yourself the hassles. Similarly, reinstalling Node.js may assist you in clearing out any performance errors.</p>\n<p>And since npm is shipped with Node.js by default, installing Node.js will also install npm on your system.</p>\n<h2>How to check if reinstallation succeeded</h2>\n<p>Note that after completing the reinstallation process, you can check if it was successful by running the following commands on the terminal:</p>\n<p>Then, if everything went well, the system will output your installed versions.</p>\n<p>Something like this:</p>\n<p>Since npm is usually updated more frequently than Node.js, your installation may not come with the latest npm version. </p>\n<p>So, if your installed npm version is not the latest, you can update it by running the following command:</p>\n<p>The above command will install the latest, stable npm version. However, if you want to experiment with things by using a version that will be released in the future, you can run the following:</p>\n<p>If you want to update Node.js to the latest version, <a href=\"https://renovate.whitesourcesoftware.com/blog/update-node-js/\">you can read this article.</a></p>\n<h2>How to reinstall npm and Node.js on Windows</h2>\n<p>If the npm or Node.js running on your Windows environment is broken, you can reinstall and get the most out of them.</p>\n<p>You can use any of the following methods:</p>\n<ul>\n<li>Reinstalling using a Node version manager</li>\n<li>Reinstalling using a Node installer</li>\n</ul>\n<p>Let’s talk about each of them.</p>\n<h3>a) Reinstalling using a Node version manager</h3>\n<p>A Node version manager is a tool you can use to install various versions of Node.js and npm and shift between them seamlessly.</p>\n<p>A popular Node version management tool you can use is <a href=\"https://github.com/coreybutler/nvm-windows/\">nvm-windows</a>. It’s a powerful command line utility that allows you to manage multiple installations of Node.js comfortably.</p>\n<p>Before installing the utility, it is recommended to remove all the existing versions of Node.js and npm from your Windows computer. This will prevent any conflict issues when installing the software. </p>\n<p>You can uninstall them by doing the following:</p>\n<ul>\n<li>Go to the Windows Control Panel and uninstall the Node.js program.</li>\n<li>If any Node.js installation directories are still remaining, delete them. An example is C:\\Program Files\\mynodejs.</li>\n<li>If any npm install location is still remaining, delete it. An example is C:\\Users\\&#x3C;username>\\AppData\\Roaming\\npm.</li>\n</ul>\n<p>Then, once your system is clean, go to <a href=\"https://github.com/coreybutler/nvm-windows/releases\">this page</a> and download and run the latest nvm-windows installer. After it has been installed, you can start the Command Prompt or Powershell as an Administrator and use the tool to reinstall Node.js and npm.</p>\n<p>If you want to reinstall a specific Node.js version, you can run the following command:</p>\n<p>Let’s say you want to reinstall Node.js version 12.18.0, you can run:</p>\n<p>If you want to reinstall the latest stable Node.js version, you can run:</p>\n<p>If you want to check the list of Node.js versions available for download, you can run:</p>\n<p>To use the installed Node.js version in your project, you can switch to it:</p>\n<h3>b) Reinstalling using a Node installer</h3>\n<p>Using the official Node installer is the easiest way to reinstall Node.js and npm on your Windows environment.</p>\n<p>To use this option, you can go to the <a href=\"https://nodejs.org/en/download/\">Node.js download page</a> and reinstall the latest Node.js version.</p>\n<p>It is recommended to download the version labeled LTS (Long-term Supported) because it has been tested with npm. Although the version labeled Current comes with the latest features, it may be unstable and unreliable.</p>\n<p><img src=\"https://www.whitesourcesoftware.com/wp-content/media/2020/09/12121.png\"></p>\n<p>After selecting the version you want to download, and clicking the Windows Installer option, the installation wizard will magically complete the installation process for you. </p>\n<p>Ultimately, the installer will automatically overwrite your existing, malfunctioned Node.js version with a new one.</p>\n<h2>How to reinstall npm and Node.js on macOS</h2>\n<p>Before reinstalling Node.js and npm on your macOS system, you’ll need to remove any previously installed versions.</p>\n<p>Here are some ways you can use to uninstall them:</p>\n<ul>\n<li>Manually—this involves manually removing any references of Node and npm from your system. Unfortunately, this process is difficult since there may be several directories with Node resources. For example, you may need to delete the node executable and node_modules from /usr/local/lib, delete .npm from the home directory, and delete many other directories.</li>\n<li>Using a script—this involves running a script to uninstall Node.js and npm automatically from your macOS system. You can find a simple script to use <a href=\"https://gist.github.com/nicerobot/2697848\">here</a>.</li>\n<li>Using <a href=\"https://brew.sh/\">Homebrew</a>—this package management utility lets you complete the uninstallation process fast and easily. You can run the following command:</li>\n</ul>\n<p>Then, once your system is clean, you can use any of the following methods to reinstall Node.js and npm on macOS:</p>\n<ul>\n<li>Reinstalling using a Node installer</li>\n<li>Reinstalling using Homebrew</li>\n<li>Reinstalling using a Node version manager</li>\n</ul>\n<p>Let’s talk about each of them.</p>\n<h3>a) Reinstalling using a Node installer</h3>\n<p>To use the official Node installer for reinstalling the tools, go to the <a href=\"https://nodejs.org/en/download/\">Node.js download page</a> and select the version you want to install—just as we described previously. </p>\n<p>Remember to choose the macOS installer option. If you run the installer, it will complete the reinstallation process for you automatically.   </p>\n<h3>b) Reinstalling using Homebrew</h3>\n<p>To reinstall using Homebrew, just run the following command on the macOS terminal:</p>\n<h3>c) Reinstalling using a Node version manager</h3>\n<p>You can also reinstall the two tools using the <a href=\"https://github.com/nvm-sh/nvm\">nvm</a> Node version manager. Since the process for using nvm is the same for both macOS and Linux, we’ll describe how to use it in the next section. </p>\n<h2>How to reinstall npm and Node.js on Linux</h2>\n<p>Just like in the previous cases, you’ll need to remove any installed version of Node.js and npm before reinstalling them on a Linux distribution, such as Ubuntu. </p>\n<p>Here are some ways you can use to uninstall them:</p>\n<ul>\n<li>Using the apt package manager—you can remove Node.js by running the following command:</li>\n</ul>\n<p>The above command will delete the distro-stable version while retaining the configuration files for later use. However, if you intend to remove the package as well as its configuration files, run the following:</p>\n<p>Finally, you can delete any unused packages that were installed automatically with the deleted package:</p>\n<ul>\n<li>Using nvm—you can also use the nvm Node version manager to uninstall Node.js from your system. We’ll illustrate how to do this in the next section. </li>\n</ul>\n<p>Then, once your machine is clean, you can use any of the following methods to reinstall Node.js and npm on Linux:</p>\n<ul>\n<li>Reinstalling using a Node version manager</li>\n<li>Reinstalling using the apt package manager</li>\n</ul>\n<p>Let’s talk about each of them.</p>\n<h3>a) Reinstalling using a Node version manager</h3>\n<p>As earlier mentioned, you can use the <a href=\"https://github.com/nvm-sh/nvm/\">nvm</a> Node version manager to reinstall Node.js and npm on both macOS and Linux.</p>\n<p>To install the script-based tool, you can use either Wget or cURL.</p>\n<p>If using Wget, execute the following on the terminal:</p>\n<p>If using cURL, execute this:</p>\n<p>The above commands will install nvm version 0.35.0 on your system. Remember to check <a href=\"https://github.com/nvm-sh/nvm/releases\">the latest version</a> and refer to it accordingly on the command you want to run.</p>\n<p>To verify if it was installed successfully, run the following:</p>\n<p>If all went well, it would output nvm.</p>\n<p>After installing nvm, you can use it to reinstall Node.js on your system.</p>\n<p>Simply, execute the following command:</p>\n<p>To reinstall a specific Node.js version, run:</p>\n<p>For example, to reinstall Node.js version 12.18.0, execute:</p>\n<p>Once reinstallation is complete, you can set that Node.js version for use as the system-wide default version:</p>\n<p>Furthermore, you can check the list of Node.js versions available for download by executing the following:</p>\n<p>To remove a Node.js version that you’ve set up using nvm, start by establishing if the version is currently active on your system:</p>\n<p>If it is not actively running, execute the following to uninstall it:</p>\n<p>On the other hand, if the version targeted for removal is the current active version, you’ll need to deactivate nvm first:</p>\n<p>Then, you can use the above uninstall command to remove it from your system. </p>\n<h3>b) Reinstalling using the apt package manager</h3>\n<p>A simpler way to reinstall Node.js and npm on a Linux distribution, such as Ubuntu, is to use the apt package manager. </p>\n<p>To do so, you can start by refreshing your local package index:</p>\n<p>Then, reinstall the distro-stable Node.js version from the repositories: </p>\n<p>In most cases, this is all you need to get up and running with Node.js. Also, you may want to reinstall npm by running the following command:</p>\n<h2>Conclusion</h2>\n<p>That’s how to reinstall npm and Node.js on Windows, macOS, and Linux.</p>\n<p>After completing the reinstallation, you’ll avoid any performance issues that often arise from using malfunctioned versions of the technologies.</p>\n<p>---</p>\n<p>---</p>\n<p>Node.js is a popular open-source, cross-platform server-side environment for building robust applications. Since a vibrant community of contributors backs it, the platform is continuously updated to introduce new features, security patches, and other performance improvements.    node –version   node -v  wget -qO- <a href=\"https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh\">https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh</a> | bash  curl -o- <a href=\"https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh\">https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh</a> | bash  command -v nvm  nvm install node  nvm install –lts  nvm install &#x3C;version-number>  nvm install 12.18.3  nvm use 12.18.3  nvm lsnvm ls-remotenpm install -g nn &#x3C;version-number>n 12.18.3    nn ltsn latestnvm install &#x3C;version-number>nvm install 12.18.3nvm use 12.18.3nvm install latestnvm listnvm list availablewget <a href=\"https://nodejs.org/dist/v12.18.3/node-v12.18.3-linux-x64.tar.xzsudo\">https://nodejs.org/dist/v12.18.3/node-v12.18.3-linux-x64.tar.xzsudo</a> apt-get install xz-utilstar -C /usr/local -strip-components 1 -xJf node-v12.18.3-linux-x64.tar.xzbrew install nodebrew update #ensure Homebrew is up to date firstbrew upgrade nodebrew switch node 12.18.3</p>\n<p>So, updating to the latest Node.js version can help you to make the most of the technology. You can decide to work with the Long-term Supported (LTS) version or the Current version that comes with the latest features. </p>\n<p>Typically, LTS is recommended for most users because it is a stable version that provides predictable update releases as well as a slower introduction of substantial changes. </p>\n<p>In this article, you will learn how to quickly and easily update Node.js on different operating systems—macOS, Linux, and Windows.</p>\n<p>As we’ll demonstrate, there are many ways of updating to the next version of Node.js. So, you can choose the option that best meets your system requirements and preferences.</p>\n<p>These are the updating options we’ll talk about:</p>\n<ul>\n<li>Updating using a Node version manager on macOS or Linux</li>\n<li>Updating using a Node version manager on Windows</li>\n<li>Updating using a Node installer on Linux</li>\n<li>Updating using a Node installer on macOS and Windows</li>\n<li>Updating using Homebrew on macOS</li>\n</ul>\n<h2>Checking your version of Node.js</h2>\n<p>Before getting started, you can check the version of Node.js currently deployed on your system by running the following command on the terminal:</p>\n<p>or (shortened method):</p>\n<p>Let’s now talk about the different ways on how to update Node.js.</p>\n<h2>1. Updating using a Node version manager on macOS or Linux</h2>\n<p>A Node version manager is a utility that lets you install different Node.js versions and switch flawlessly between them on your machine. You can also use it to update your version of Node.js.</p>\n<p>On macOS or Linux, you can use either of the following Node version managers:</p>\n<ul>\n<li>nvm</li>\n<li>n</li>\n</ul>\n<p>Let’s talk about each of them.</p>\n<p>a) nvm</p>\n<p><a href=\"https://github.com/nvm-sh/nvm\">nvm</a> is a script-based version manager for Node.js. To install it on macOS or Linux, you can use either Wget or cURL.</p>\n<p>For Wget, run the following command on the terminal:</p>\n<p>For cURL, run the following:</p>\n<p>The above commands assume that you’re installing nvm version 0.35.3. So, you’ll need to check <a href=\"https://github.com/nvm-sh/nvm/releases\">the latest version</a> before installing it on your machine. </p>\n<p>With these commands, you can clone the repository to ~/.nvm. This way, you can make changes to your bash profile, allowing you to access nvm system-wide.</p>\n<p>To confirm if the installation was successful, you can run the following command:</p>\n<p>If everything went well, it’d output nvm.</p>\n<p>Next, you can simply download and update to the latest Node.js version by running the following:</p>\n<p>Note that node refers to an alias of the latest Node.js version. </p>\n<p>You can also reference LTS versions in aliases as well as .nvmrc files using the notation lts/* for the most recent LTS releases. </p>\n<p>Here is an example:</p>\n<p>If you want to install and upgrade to a specific version, you can run the following:</p>\n<p>For example, if you want to update Node.js to version 12.18.3, you can run:</p>\n<p>After the upgrade, you can set that version to be the default version to use throughout your system:</p>\n<p>You can see the list of installed Node.js versions by running this command:</p>\n<p>Also, you can see the list of versions available for installation by running this command:</p>\n<p>b) n</p>\n<p><a href=\"https://www.npmjs.com/package/n\">n</a> is another useful Node version manager you can use for updating Node.js on macOS and Linux. </p>\n<p>Since it’s an <a href=\"https://renovate.whitesourcesoftware.com/blog/updating-npm-packages/\">npm-based package</a>, if you already have Node.js available on your environment, you can simply install it by running this command:</p>\n<p>Then, to download and update to your desired Node.js version, execute the following:</p>\n<p>For example, if you want to update Node.js to version 12.18.3, you can run:</p>\n<p>To see a list of your downloaded Node.js versions, run n on its own:</p>\n<p>You can specify to update to the newest LTS version by running:</p>\n<p>You can also specify to update to the latest current version by running:</p>\n<p>You can specify to update to the newest LTS version by running:</p>\n<h2></h2>\n<h2>2. Updating using a Node version manager on Windows</h2>\n<p>On Windows, you can use the following Node version manager:</p>\n<ul>\n<li>nvm-windows</li>\n</ul>\n<p>Let’s talk about it.</p>\n<p><strong>a) nvm-windows</strong></p>\n<p><a href=\"https://github.com/coreybutler/nvm-windows/\">nvm-windows</a> is a Node version management tool for the Windows operating system. While it’s not the same as nvm, both tools share several usage similarities for Node.js version management.</p>\n<p>Before installing nvm-windows, it’s recommended to uninstall any available Node.js versions from your machine. This will avoid potential conflict issues during installation.</p>\n<p>Next, you can download and run the latest <a href=\"https://github.com/coreybutler/nvm-windows/releases\">nvm-setup.zip</a> installer.</p>\n<p>Also, since the utility runs in an Admin shell, you’ll need to begin the Command Prompt or Powershell as an Administrator before using it. </p>\n<p>If you want to install and upgrade to a specific version, you can run the following:</p>\n<p>You can specify to update to the newest LTS version by running:</p>\n<p>For example, if you want to update Node.js to version 12.18.3, you can run:</p>\n<p>After the upgrade, you can switch to that version:</p>\n<p>You can also specify to update to the latest stable Node.js version:</p>\n<p>You can see the list of installed Node.js versions by running this command:</p>\n<p>Also, you can see the list of versions available for download by running this command:</p>\n<h2></h2>\n<h2>3. Updating using a Node installer on Linux</h2>\n<p>Using a Node installer is the least recommended way of upgrading Node.js on Linux. Nonetheless, if it’s the only route you can use, then follow the following steps:</p>\n<ul>\n<li>Go to the official <a href=\"https://nodejs.org/en/download/\">Node.js downloads site</a>, which has different Linux binary packages, and select your preferred built-in installer or source code. You can choose either the LTS releases or the latest current releases.</li>\n<li>Download the binary package using your browser. Or, you can download it using the following Wget command on the terminal:</li>\n</ul>\n<p><img src=\"https://www.whitesourcesoftware.com/wp-content/media/2020/08/node-js-linux.png\"></p>\n<ul>\n<li>Download the binary package using your browser. Or, you can download it using the following Wget command on the terminal:</li>\n</ul>\n<p>Remember to change the version number on the Wget command depending on the one you want.</p>\n<ul>\n<li>Install the xz-utils utility using the following command:</li>\n</ul>\n<p>This utility will be used for unpacking the binary package. </p>\n<ul>\n<li>Finally, run the following command to unpack and install the binary package on usr/local:</li>\n</ul>\n<h2></h2>\n<h2>4. Updating using a Node installer on macOS and Windows</h2>\n<p>Another way of updating your Node.js on macOS and Windows is to go to the official <a href=\"https://nodejs.org/en/download/\">download site</a> and install the most recent version. This way, it’ll overwrite your existing old version with the latest one.</p>\n<p>You can follow the following steps to update it using this method:</p>\n<ul>\n<li>On the Node.js download page, select either the LTS version or the latest current version.</li>\n</ul>\n<p><img src=\"https://www.whitesourcesoftware.com/wp-content/media/2020/08/node-js-mac-windows.png\"></p>\n<ul>\n<li>Depending on your system, click either the Windows Installer option or the macOS installer option.</li>\n<li>Run the installation wizard. It will magically complete the installation process and upgrade your Node.js version by replacing it with the new, updated one.</li>\n</ul>\n<h2>5. Updating using Homebrew on macOS</h2>\n<p><a href=\"https://brew.sh/\">Homebrew</a> is a popular package management utility for macOS. </p>\n<p>To use it for installing Node.js, run the following command on your macOS terminal:</p>\n<p>Later, if you’d like to update it, run the following commands:</p>\n<p>Furthermore, you can switch between installed Node.js versions:</p>"},{"url":"/blog/flow-control-in-python/","relativePath":"blog/flow-control-in-python.md","relativeDir":"blog","base":"flow-control-in-python.md","name":"flow-control-in-python","frontmatter":{"title":"flow-control-in-python","subtitle":"flow-control-in-python","date":"2021-10-14","thumb_image_alt":"lorem-ipsum","excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"post","thumb_image":"images/python1.jpg","image":"images/python2-15e88a3a.jpg"},"html":"<h2>Read It</h2>\n<ul>\n<li><a href=\"https://www.pythoncheatsheet.org\">Website</a></li>\n<li><a href=\"https://github.com/wilfredinni/python-cheatsheet\">Github</a></li>\n<li><a href=\"https://github.com/wilfredinni/Python-cheatsheet/raw/master/python_cheat_sheet.pdf\">PDF</a></li>\n<li><a href=\"https://mybinder.org/v2/gh/wilfredinni/python-cheatsheet/master?filepath=jupyter_notebooks\">Jupyter Notebook</a></li>\n</ul>\n<h2>Flow Control</h2>\n<h3>Comparison Operators</h3>\n<table>\n<thead>\n<tr>\n<th>Operator</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>==</code></td>\n<td>Equal to</td>\n</tr>\n<tr>\n<td><code>!=</code></td>\n<td>Not equal to</td>\n</tr>\n<tr>\n<td><code>&#x3C;</code></td>\n<td>Less than</td>\n</tr>\n<tr>\n<td><code>></code></td>\n<td>Greater Than</td>\n</tr>\n<tr>\n<td><code>&#x3C;=</code></td>\n<td>Less than or Equal to</td>\n</tr>\n<tr>\n<td><code>>=</code></td>\n<td>Greater than or Equal to</td>\n</tr>\n</tbody>\n</table>\n<p>These operators evaluate to True or False depending on the values you give them.</p>\n<p>Examples:</p>\n<pre><code class=\"language-python\">42 == 42\n</code></pre>\n<pre><code class=\"language-python\">40 == 42\n</code></pre>\n<pre><code class=\"language-python\">'hello' == 'hello'\n</code></pre>\n<pre><code class=\"language-python\">'hello' == 'Hello'\n</code></pre>\n<pre><code class=\"language-python\">'dog' != 'cat'\n</code></pre>\n<pre><code class=\"language-python\">42 == 42.0\n</code></pre>\n<pre><code class=\"language-python\">42 == '42'\n</code></pre>\n<h3>Boolean evaluation</h3>\n<p>Never use <code>==</code> or <code>!=</code> operator to evaluate boolean operation. Use the <code>is</code> or <code>is not</code> operators,\nor use implicit boolean evaluation.</p>\n<p>NO (even if they are valid Python):</p>\n<pre><code class=\"language-python\">True == True\n</code></pre>\n<pre><code class=\"language-python\">True != False\n</code></pre>\n<p>YES (even if they are valid Python):</p>\n<pre><code class=\"language-python\">True is True\n</code></pre>\n<pre><code class=\"language-python\">True is not False\n</code></pre>\n<p>These statements are equivalent:</p>\n<pre><code class=\"language-Python\">if a is True:\n   pass\nif a is not False:\n   pass\nif a:\n   pass\n</code></pre>\n<p>And these as well:</p>\n<pre><code class=\"language-Python\">if a is False:\n   pass\nif a is not True:\n   pass\nif not a:\n   pass\n</code></pre>\n<h3>Boolean Operators</h3>\n<p>There are three Boolean operators: and, or, and not.</p>\n<p>The <em>and</em> Operator’s <em>Truth</em> Table:</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Evaluates to</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>True and True</td>\n<td>True</td>\n</tr>\n<tr>\n<td>True and False</td>\n<td>False</td>\n</tr>\n<tr>\n<td>False and True</td>\n<td>False</td>\n</tr>\n<tr>\n<td>False and False</td>\n<td>False</td>\n</tr>\n</tbody>\n</table>\n<p>The <em>or</em> Operator’s <em>Truth</em> Table:</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Evaluates to</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>True or True</td>\n<td>True</td>\n</tr>\n<tr>\n<td>True or False</td>\n<td>True</td>\n</tr>\n<tr>\n<td>False or True</td>\n<td>True</td>\n</tr>\n<tr>\n<td>False or False</td>\n<td>False</td>\n</tr>\n</tbody>\n</table>\n<p>The <em>not</em> Operator’s <em>Truth</em> Table:</p>\n<table>\n<thead>\n<tr>\n<th>Expression</th>\n<th>Evaluates to</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>not True</td>\n<td>False</td>\n</tr>\n<tr>\n<td>not False</td>\n<td>True</td>\n</tr>\n</tbody>\n</table>\n<h3>Mixing Boolean and Comparison Operators</h3>\n<pre><code class=\"language-python\">(4 &#x3C; 5) and (5 &#x3C; 6)\n</code></pre>\n<pre><code class=\"language-python\">(4 &#x3C; 5) and (9 &#x3C; 6)\n</code></pre>\n<pre><code class=\"language-python\">(1 == 2) or (2 == 2)\n</code></pre>\n<p>You can also use multiple Boolean operators in an expression, along with the comparison operators:</p>\n<pre><code class=\"language-python\">2 + 2 == 4 and not 2 + 2 == 5 and 2 * 2 == 2 + 2\n</code></pre>\n<h3>if Statements</h3>\n<pre><code class=\"language-python\">if name == 'Alice':\n    print('Hi, Alice.')\n</code></pre>\n<h3>else Statements</h3>\n<pre><code class=\"language-python\">name = 'Bob'\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelse:\n    print('Hello, stranger.')\n</code></pre>\n<h3>elif Statements</h3>\n<pre><code class=\"language-python\">name = 'Bob'\nage = 5\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelif age &#x3C; 12:\n    print('You are not Alice, kiddo.')\n</code></pre>\n<pre><code class=\"language-python\">name = 'Bob'\nage = 30\n\nif name == 'Alice':\n    print('Hi, Alice.')\nelif age &#x3C; 12:\n    print('You are not Alice, kiddo.')\nelse:\n    print('You are neither Alice nor a little kid.')\n</code></pre>\n<h3>while Loop Statements</h3>\n<pre><code class=\"language-python\">spam = 0\n\nwhile spam &#x3C; 5:\n    print('Hello, world.')\n    spam = spam + 1\n</code></pre>\n<h3>break Statements</h3>\n<p>If the execution reaches a break statement, it immediately exits the while loop’s clause:</p>\n<pre><code class=\"language-python\">while True:\n    print('Please type your name.')\n    name = input()\n    if name == 'your name':\n        break\n\nprint('Thank you!')\n</code></pre>\n<h3>continue Statements</h3>\n<p>When the program execution reaches a continue statement, the program execution immediately jumps back to the start of the loop.</p>\n<pre><code class=\"language-python\">while True:\n    print('Who are you?')\n    name = input()\n    if name != 'Joe':\n        continue\n    print('Hello, Joe. What is the password? (It is a fish.)')\n    password = input()\n    if password == 'swordfish':\n        break\n\nprint('Access granted.')\n</code></pre>\n<h3>for Loops and the range() Function</h3>\n<pre><code class=\"language-python\">print('My name is')\nfor i in range(5):\n    print('Jimmy Five Times ({})'.format(str(i)))\n</code></pre>\n<p>The <em>range()</em> function can also be called with three arguments. The first two arguments will be the start and stop values, and the third will be the step argument. The step is the amount that the variable is increased by after each iteration.</p>\n<pre><code class=\"language-python\">for i in range(0, 10, 2):\n   print(i)\n</code></pre>\n<p>You can even use a negative number for the step argument to make the for loop count down instead of up.</p>\n<pre><code class=\"language-python\">for i in range(5, -1, -1):\n    print(i)\n</code></pre>\n<h3>For else statement</h3>\n<p>This allows you to specify a statement to execute after the full loop has been executed. Only\nuseful when a <code>break</code> condition can occur in the loop:</p>\n<pre><code class=\"language-python\">for i in [1, 2, 3, 4, 5]:\n   if i == 3:\n       break\nelse:\n   print(\"only executed when no item of the list is equal to 3\")\n</code></pre>\n<h3>Importing Modules</h3>\n<pre><code class=\"language-python\">import random\n\nfor i in range(5):\n    print(random.randint(1, 10))\n</code></pre>\n<pre><code class=\"language-python\">import random, sys, os, math\n</code></pre>\n<pre><code class=\"language-python\">from random import *\n</code></pre>\n<h3>Ending a Program with sys.exit</h3>\n<pre><code class=\"language-python\">import sys\n\nwhile True:\n    print('Type exit to exit.')\n    response = input()\n    if response == 'exit':\n        sys.exit()\n    print('You typed {}.'.format(response))\n</code></pre>"},{"url":"/docs/docs/what-does-it-mean-2-render/","relativePath":"docs/docs/what-does-it-mean-2-render.md","relativeDir":"docs/docs","base":"what-does-it-mean-2-render.md","name":"what-does-it-mean-2-render","frontmatter":{"title":"lorem-ipsum","weight":0,"excerpt":"lorem-ipsum","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h1><a href=\"https://www.amsivedigital.com/wp-content/uploads/2014/07/How-Web-Browswers-Work-2.png\"><img src=\"https://www.amsivedigital.com/wp-content/uploads/2014/07/How-Web-Browswers-Work-2.png\"></a>There<a href=\"https://www.amsivedigital.com/wp-content/uploads/2014/07/How-Web-Browswers-Work-3.png\"><img src=\"https://www.amsivedigital.com/wp-content/uploads/2014/07/How-Web-Browswers-Work-3.png\"></a><a href=\"https://www.amsivedigital.com/wp-content/uploads/2014/07/How-Web-Browsers-Work-4.png\"><img src=\"https://www.amsivedigital.com/wp-content/uploads/2014/07/How-Web-Browsers-Work-4.png\"></a><a href=\"https://www.amsivedigital.com/wp-content/uploads/2014/07/How-Web-Browsers-Work-5.png\"><img src=\"https://www.amsivedigital.com/wp-content/uploads/2014/07/How-Web-Browsers-Work-5.png\"></a><a href=\"https://www.amsivedigital.com/wp-content/uploads/2014/07/How-Web-Browswers-Work-6.png\"><img src=\"https://www.amsivedigital.com/wp-content/uploads/2014/07/How-Web-Browswers-Work-6.png\"></a>\n\n</h1>\n<ol>\n<li>\n<p><strong>Layout Engine –</strong></p>\n<p> this takes input from the browser (URL bar, search box, mouse clicks and key presses) and passes them to the rendering engine</p>\n</li>\n<li>\n<p><strong>Rendering Engine</strong></p>\n<p> – this takes HTML code and interprets it into what you see visually. For instance, a <b> tag would be interpreted by the rendering engine as a set of instructions to make the text inside of the element bold.</p>\n</li>\n<li>\n<p>**User Interface **</p>\n<p>– This is the visual presentation of controls in the browser, for instance the back and forward buttons, bookmarks, and all chrome that appears around the main browser window where web pages display.</p>\n</li>\n<li>\n<p><strong>JavaScript Engine</strong></p>\n<p> – This engine takes JavaScript code, parses it, executes it, and returns the results.</p>\n</li>\n<li>\n<p><strong>Network Layer</strong></p>\n<p> – This is a function of the browser that happens behind the scenes and handles network functions such as encryption, http and ftp requests, and all network settings such as timeouts and the handling of HTTP status codes</p>\n</li>\n<li>\n<p><strong>Storage</strong></p>\n<p> – Browser’s must store some data which can include cached files, cookies, and recently browsers have updated to be able to store data and objects created with JavaScript</p>\n</li>\n<li>\n<p><strong>Operating System Interface</strong></p>\n<p> – The browser must interact with the operating system to draw out several elements of the page like drop down boxes and the chrome of a window (close, maximize, and minimize buttons)</p>\n</li>\n</ol>\n<h2>Let’s Focus on the Rendering Engine</h2>\n<p>The rendering engine has a very important job as it displays what you see on your screen. It communicates with the networking layer of the browser to grab HTML code and other items passed from a remote server. Then it follows these steps:</p>\n<p><strong>1. Parsing HTML and creating the DOM Tree</strong> – HTML is a hierarchal structure that begins with a &#x3C;html> tag, usually contains a &#x3C;head> and &#x3C;body> tag, and elements can be nested within elements. These HTML elements are parsed and turned into a “DOM tree” by the rendering engine. It is a tree like structure made out of the HTML, where each tag is a branch starting at the root element.</p>\n<p><strong>2. Render Tree Construction</strong> – CSS attributes (style attributes) are also parsed and combined with the DOM tree to create a “render tree”. This is a tree of visual elements such as height/width and color ordered in the hierarchy in which they are to be displayed in the browser.</p>\n<p><strong>3. Layout Process</strong> – Once the render tree is constructed, the rendering engine recursively goes through the HTML elements in the tree and figure out where they should be placed on the screen. This starts at the top left in position 0,0 and elements and attributes are mapped to coordinates on the screen.</p>\n<p><strong>4. Painting</strong> – Each node (branch) of the render tree is drawn out on the screen by communicating with the Operating System Interface which contains designs and styles for how UI elements should look.</p>\n<p>A search engine spider cannot “see” a web page the way we do and will instead use a set of rules programmed into it to construct the DOM tree and understand the elements that are a part of it. For Google to understand that a word on the page is in the body context of the page, it must be able to process the entire page.</p>\n<h2>Throwing JavaScript into the Mix</h2>\n<p>JavaScript is a programming language which allows things to happen inside of the browser and makes web pages interactive. Things like popup windows, actions that occur on a button press and elements that move across the page are all things done by JavaScript. This means that JavaScript code executes after the web page has been rendered and painted onto the screen, and when it executes it triggers a re-render to account for changes made.\nAn example of this is the Like button on Facebook. When you look at it on page load, it says “Like” and shows a thumb up. When you click it, it dynamically changes to say “Unlike” and swaps the thumbs up icon for a thumb down.</p>\n<p>Content on the page can be manipulated by JavaScript to display things in your browser that do not appear when you view a web page’s source code. You can have words that appear in the body of your page to a user that do not appear in the source code of the site and search engine spiders who do not render the page will be unable to detect that content.</p>\n<p><em>This is how Facebook would look to a search engine spider that did not render content</em></p>\n<h2>What Does This Mean for SEO?</h2>\n<p>The fact that Google looks at the fully rendered version of a webpage means that you can no longer look solely at the source code of a site to understand how it is perceived by a search engine spider. You should assume that search engine spiders see the same page you see in your browser as it appears on page load. Here are some examples of when this matters:</p>\n<ul>\n<li>If you use an image carousel, images are hidden and you have to wait or click through to see all of the images. You should assume that Google perceives these types of sliders the same way a user would and puts more weight on the images and text that appear to the user the second the page is loaded.</li>\n<li>If you have content that is dynamically served through JavaScript, for instance widgets or feeds that are overlaid on the page or A/B tests that are overlaid with JavaScript, Google will see that content</li>\n<li>If you use 3rd party scripts or style sheets, Google will see the content of those resources if they can. You can verify that everything on your page can be seen by Google by using the new fetch as Googlebot rendering tool in Webmaster Tools.</li>\n</ul>\n<p>How to Use the New Rendering Tool in Webmaster Tools</p>\n<p>In Webmaster Tools, go to Crawl > Fetch as Google then enter the URL you want to test and click FETCH AND RENDER</p>\n<p>Google will then show you a screenshot of the page as they see it. You can also view files that Google was unable to retrieve and include in the render. This helps with diagnosing issues with indexability and can point out issues with content that does not appear in the site’s source code.</p>"},{"url":"/docs/tools/","relativePath":"docs/tools/index.md","relativeDir":"docs/tools","base":"index.md","name":"index","frontmatter":{"title":"Tools","excerpt":"See some interesting tools developed by the Web-Dev-Hubcommunity to help automate parts of your workflow.","seo":{"title":"Tools","description":"paste to markdown, excel table to markdown, excel to html, cloud storage, text manipulation, ternary converter, github html preview, form builder, border","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Tools","keyName":"property"},{"name":"og:description","value":"paste to markdown, excel table to markdown, excel to html, cloud storage, text manipulation, ternary converter, github html preview, form builder, border","keyName":"property"},{"name":"twitter:card","value":"summary"},{"name":"twitter:title","value":"Tools"},{"name":"twitter:description","value":"This is the tools page"},{"name":"og:image","value":"images/tex.PNG","keyName":"property","relativeUrl":true}]},"template":"docs"},"html":"<br>\n<br>\n<h1>   Paste To Markdown </h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://euangoddard.github.io/clipboard2markdown/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        \n        \n   \n<br>\n<br>\n<h1>   Paste Excel Tabel To Markdown </h1>\n<iframe  class=\"block-content\" src=\"https://codepen.io/bgoonz/embed/JjNaPpL?default-tab=result&theme-id=light\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1>Paste excel to HTML</h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://pedantic-wing-adbf82.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<h1>  Cloud Storage </h1>\n<br>\n<h2> Up to 1TB of cloud Storage for file sharing!</h2>\n<iframe src=\"https://onedrive.live.com/embed?cid=D21009FDD967A241&resid=D21009FDD967A241%21538729&authkey=AHSDSyoYqzg2K2E\" height=\"275px\" width=\"17%\" style=\"zoom:0.69; align-self:center;display:auto;display: block;border:12px solid gold;\">\n</iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<h1> Text Tools     </h1>\n<br>\n<iframe src=\"https://devtools42.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1> Ternary Converter   </h1>\n<br>\n<iframe src=\"https://ternary42.netlify.app/\" height=\"800px\" width=\"600px!important\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1>  Github HTML Render from link </h1>\n<br>\n<iframe src=\"https://githtmlpreview.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<h1> Form Builder GUI </h1>\n<br>\n<iframe  src=\"https://fourm-builder-gui.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<h1> Border Builder </h1>\n<br>\n<iframe  src=\"https://codepen.io/bgoonz/embed/zYwLVmb?default-tab=html%2Cresult\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<br>\n<br>\n<br>\n<br>\n<br>\n<h1>                </h1>\n<br>\n<iframe  class=\"block-content\" src=\"https://ds-algo-official.netlify.app/\" height=\"800px\" width=\"1600px\" scrolling=\"yes\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\" title=\"YouTube video\n        player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n        encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        \n        \n        \n<br>\n<br>\n<br>\n<h1>                </h1>\n<br>\n        \n        \n <iframe height=\"800\" style=\"width: 100%;\" scrolling=\"yes\" title=\"Simple Typing Carousel \" src=\"https://codepen.io/bgoonz/embed/ExZvGoZ?default-tab=html%2Cresult\" frameborder=\"no\" loading=\"lazy\" allowtransparency=\"true\" allowfullscreen=\"true\">\n  See the Pen <a href=\"https://codepen.io/bgoonz/pen/ExZvGoZ\">\n  Simple Typing Carousel </a> by Bryan C Guner (<a href=\"https://codepen.io/bgoonz\">@bgoonz</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n</iframe>"},{"url":"/","relativePath":"index.md","relativeDir":"","base":"index.md","name":"index","frontmatter":{"title":"Web Dev Hub Home","sections":[{"section_id":"Intro","type":"section_hero","title":"I am a musician, electrical engineer & web developer","image":"images/api-c99e353f761d318322c853c03ebcf21b.gif","content":"###### **A passionate student of web development from New Jersey U.S.A**\n\n**Please note that this website is in development and is often broken!**\n\n[](https://www.vagrantup.com/)[![](https://img.icons8.com/color/96/000000/gmail.png)](mailto:bryan.guner@gmail.com)[![](https://img.icons8.com/color/96/000000/youtube.png)](https://www.youtube.com/channel/UC9-rYyUMsnEBK8G8fCyrXXA/videos)[![](https://img.icons8.com/color/96/000000/instagram-new.png)](https://www.instagram.com/bgoonz/?hl=en) [![](https://img.icons8.com/color/96/000000/medium-logo.png)](https://bryanguner.medium.com/)\n\n[ ](https://webpack.js.org/)[ ](https://www.adobe.com/products/xd.html)\n\n[![Netlify Status](https://api.netlify.com/api/v1/badges/a1b7ee1a-11a7-4bd2-a341-2260656e216f/deploy-status)](https://app.netlify.com/sites/bgoonz-blog/deploys)\n\n[![Bryans github activity graph](https://activity-graph.herokuapp.com/graph?username=bgoonz\\&custom_title=This%20is%20Bryans%20Activity\\&hide_border=true\\&theme=chartreuse-dark)](https://github.com/bgoonz/github-readme-activity-graph)\n","actions":[{"label":"Contact","url":"https://sidebar-blog.netlify.app/contact/","style":"secondary","icon_class":"linkedin","new_window":true,"no_follow":false,"type":"action"}]},{"section_id":"features","type":"section_grid","col_number":"three","grid_items":[{"content":"Memoization, Tabulation, and Sorting Algorithms by Example\nWhy is looking at runtime not a reliable method of calculating time complexity?\n","actions":[{"label":"Get Started","url":"/docs","style":"link"}],"title":"A Quick Guide To Big O","image":"images/my-back.png","title_url":"https://medium.com/star-gazers/a-quick-guide-to-big-o-notation-memoization-tabulation-and-sorting-algorithms-by-example-803ff193c522"},{"content":"*Python has a built in help function that let’s you see a description of the source code without having to navigate to it… “-SickNasty … Autor Unknown”  .*\n","actions":[{"label":"View Posts","url":"https://levelup.gitconnected.com/python-study-guide-for-a-native-javascript-developer-5cfdf3d2bdfb","style":"link"}],"image_alt":"python","title":"Python Guide","title_url":"https://levelup.gitconnected.com/python-study-guide-for-a-native-javascript-developer-5cfdf3d2bdfb","image":"images/smiling-maple.png"},{"content":"<div id=\"search\"></div> <div id=\"search\" />\n","actions":[{"label":"Learn More","url":"/docs/tools","style":"link"}],"title":"Guitar Effects Triggering w DTW","title_url":"https://github.com/bgoonz/Revamped-Automatic-Guitar-Effect-Triggering","image":"images/panoramic-owl.png"},{"title_url":"https://bryanguner.medium.com/introductory-react-part-2-cda01615a186","image_alt":"img of dtw","content":"As I learn to build web applications in React I will blog about it in this series in an attempt to capture the questions that a complete beginner might encounter that a more seasoned developer would take for granted!\n","actions":[],"type":"grid_item","title":"Beginner Guide React","image":"images/successful-panda.gif"},{"title_url":"https://dev.to/bgoonz/scope-and-context-in-javascript-5cma","image_alt":"img of react","content":"Scope & Context in JS\n\nThe **scope** of a program in JavaScript is the set of variables that are available for use within the program. \n","actions":[],"type":"grid_item","image":"images/pleasant-birch.png","title":"Scope & Closure"},{"image_alt":"Every idea needs a medium","content":"PostgreSQL Cheat Sheet, Everything You Need to Get Started With VSCode + Extensions & Resources, Super Simple Intro To HTML,  Understanding Git... etc....\n","actions":[],"type":"grid_item","title":"My Medium Blog","image":"images/curious-mustard.png","title_url":"https://bryanguner.medium.com/a-list-of-all-of-my-articles-to-link-to-future-posts-1f6f88ebdf5b"}]},{"title":"Current Interests","section_id":"interests","subtitle":"From github repositories to existential questions.","col_number":"three","grid_items":[{"title":"Angolia","title_url":"angolia","image_alt":"angolia","content":"## Full Text Search\n\n[Full Text Search](https://www.algolia.com/)\n\n## &#xA;\n","actions":[],"type":"grid_item","image":"images/spectacular-turmeric.png"},{"title":"Convolutional Neural Networks","title_url":"neural networks","image_alt":"neural networks","content":"Artificial neural networks, usually simply called neural networks, are computing systems vaguely inspired by the biological [neural networks](https://github.com/tensorflow/tensorflow)![](/\\_static/app-assets/neural.PNG)\n\n","actions":[],"type":"grid_item","image":"images/neural.PNG"},{"title":"Jamstack","title_url":"jamstack","image_alt":"jamstack","content":"## Why Jamstack\n\n*Jamstack is the new standard architecture for the web. Using Git workflows and modern build tools, pre-rendered content is served to a CDN and made dynamic through APIs and serverless functions. Technologies in the stack include JavaScript frameworks, Static Site Generators, Headless CMSs, and CDNs.*\n","actions":[],"type":"grid_item","image":"images/jamstack.png"},{"title":"Asynchronous JavaScript","title_url":"lorem-ipsum","image_alt":"lorem-ipsum","content":"The term **asynchronous** refers to two or more objects or events **not** existing or happening at the same time (or multiple related things happening without waiting for the previous one to complete). In computing, the word \"asynchronous\" is used in two major contexts.\n\n","actions":[],"type":"grid_item","image":"images/eventloop.gif"},{"title":"NJ Devils","image_alt":"nj-devils","content":"# New Jersey Devils Hockey Team\n\n### (Hockey in general)\n\n## Team identity\n\n[![](https://upload.wikimedia.org/wikipedia/en/thumb/d/da/OldDevils.png/300px-OldDevils.png)](https://en.wikipedia.org/wiki/File:OldDevils.png)\n\nThe old green style jerseys used from 1982 to 1992The jerseys used from 1992 to 2017[Sean Avery](https://en.wikipedia.org/wiki/Sean_Avery) of the [New York Rangers](https://en.wikipedia.org/wiki/New_York_Rangers) attempts to distract Brodeur during the [2008 Stanley Cup playoffs](https://en.wikipedia.org/wiki/2008\\_Stanley_Cup_playoffs). The playoff series was the fifth to feature the [Devils–Rangers rivalry](https://en.wikipedia.org/wiki/Devils%E2%80%93Rangers_rivalry).\n","actions":[{"label":"lorem-ipsum","url":"#","style":"link","icon_class":"dev","new_window":false,"no_follow":false}],"type":"grid_item","image":"images/njdevils.jpg","title_url":"https://www.allaboutthejersey.com/"},{"title":"ITER Fusion Reactor Experiment (Southern France)","title_url":"lorem-ipsum","image_alt":"lorem-ipsum","content":"# Break Even Nuclear Fusion Candidate\n\nIn December, researchers at the Joint European Torus (JET) started conducting fusion experiments with tritium — a rare and radioactive isotope of hydrogen. The facility is a one-tenth-volume mock-up of the US$22-billion ITER project and has the same doughnut-shaped ‘tokamak’ design — the world’s most developed approach to fusion energy. It is the first time since 1997 that researchers have done experiments in a tokamak with any significant amount of tritium.\n\n","actions":[],"type":"grid_item","image":"images/iter-zoomed.PNG"}],"type":"section_grid"},{"section_id":"features-two-col","type":"section_grid","title":"Resume & Portfolio","col_number":"two","grid_items":[{"title":"Resume","actions":[{"label":"Learn More","url":"https://1drv.ms/b/s!AkGiZ9n9CRDSpLsZsnPtiN7p77vq6A","style":"link"},{"label":"Download PDF","url":"#","style":"link","icon_class":"dev","new_window":false,"no_follow":false,"type":"action"}],"image":"images/resume.JPG","title_url":"https://github.com/bgoonz/resume-cv-portfolio-samples/raw/master/2021-resume/bryan-guner-resume-2021.pdf"},{"title":"Showcase","content":"![](/\\_static/app-assets/lambda-demo1.gif)My Projects!\n","actions":[{"label":"Learn More","url":"/showcase","style":"link"}],"image":"images/My Post.png"}]},{"title":"Blog-Archive-And-Mini-Projects","section_id":"lorem-ipsum","image_alt":"lorem-ipsum","image_position":"left","content":"<iframe class=\"block-content\" width=\"100%  width=\"1200px!important\" height=\"1000px!important\"\n  src=\"https://random-static-html-deploys.netlify.app/rotate.html\" title=\"YouTube video\n  player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;\n  encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","actions":[],"type":"section_content"},{"section_id":"Web Audio DAW","image_alt":"medium","image_position":"left","actions":[{"label":"Go To Web Audio Daw","url":"https://mihirbegmusiclab.netlify.app/","style":"primary","icon_class":"dev","new_window":true,"no_follow":false,"type":"action"}],"type":"section_content","image":"images/goals.jpg","title":"Web Audio DAW"},{"title":"Quick Links","section_id":"navigate from the home page","col_number":"two","type":"section_docs","subtitle":"quick links home"},{"title":"Contact","section_id":"contact","actions":[{"label":"Contact","url":"/docs/faq/contact","style":"primary","icon_class":"dev","new_window":false,"no_follow":false,"type":"action"},{"label":"email","url":"mailto:bryan.guner@gmail.com","style":"primary","icon_class":"dev","new_window":false,"no_follow":false},{"label":"Collaborate","url":"https://webdevhub.jetbrains.space/oauth/auth/invite/419dd305ba717a392a02aa5b4e41e09c","style":"primary","icon_class":"dev","new_window":false,"no_follow":false},{"label":"Subscribe (Youtube)","url":"https://www.youtube.com/channel/UC9-rYyUMsnEBK8G8fCyrXXA?sub_confirmation=1","style":"primary","icon_class":"dev","new_window":false,"no_follow":false}],"type":"section_cta","subtitle":"get in touch! +1 (551) - 254 - 5505"}],"seo":{"title":"Web-Dev-Hub","description":"bigO, Python, Javascript, Audio, Processing, Learning, Blog, React, PostgreSQL, Scope, Closure, Web Development, Embed, API, Website, Design, Music, Search","extra":[{"name":"og:type","value":"website","keyName":"property"},{"name":"og:title","value":"Web-Dev-Hub","keyName":"property"},{"name":"og:description","value":"my resource sharing and blog site ... centered mostly on web development and just a bit of audio production / generally nerdy things I find interesting.","keyName":"property"},{"name":"og:image","value":"images/code.png","keyName":"property","relativeUrl":true},{"name":"twitter:card","value":"summary_large_image"},{"name":"twitter:title","value":"Web-Dev-Hub"},{"name":"twitter:description","value":"Web-Dev-Hub"},{"name":"twitter:image","value":"images/4.jpg","relativeUrl":true}]},"template":"advanced"},"html":""},{"url":"/docs/docs/bash/","relativePath":"docs/docs/bash.md","relativeDir":"docs/docs","base":"bash.md","name":"bash","frontmatter":{"title":"Bash Commands That Save Me Time and Frustration","weight":0,"excerpt":"Bash Commands That Save Me Time and Frustration","seo":{"title":"","description":"","robots":[],"extra":[]},"template":"docs"},"html":"<h1>Bash Commands</h1>\n<h1>Bash Commands That Save Me Time and Frustration</h1>\n<p>Here’s a list of bash commands that stand between me and insanity.</p>\n<hr>\n<h3>Bash Commands That Save Me Time and Frustration</h3>\n<h4>Here’s a list of bash commands that stand between me and insanity.</h4>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*w0J8u6jWTikYVZzW.jpg\" class=\"graf-image\" /></figure><a href=\"https://bryanguner.medium.com/a-list-of-all-of-my-articles-to-link-to-future-posts-1f6f88ebdf5b\" class=\"markup--anchor markup--p-anchor\">https://bryanguner.medium.com/a-list-of-all-of-my-articles-to-link-to-future-posts-1f6f88ebdf5b</a>\n<blockquote>\n<p><strong>This article will be accompanied by the following</strong> <a href=\"https://github.com/bgoonz/bash-commands-walkthrough\" class=\"markup--anchor markup--pullquote-anchor\"><strong>github repository</strong></a> <strong>which will contain all the commands listed as well as folders that demonstrate before and after usage!</strong></p>\n</blockquote>\n<p><a href=\"https://github.com/bgoonz/bash-commands-walkthrough\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/bgoonz/bash-commands-walkthrough\"><strong>bgoonz/bash-commands-walkthrough</strong><br />\n<em>to accompany the medium article I am writing. Contribute to bgoonz/bash-commands-walkthrough development by creating an…</em>github.com</a><a href=\"https://github.com/bgoonz/bash-commands-walkthrough\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<blockquote>\n<p>The <a href=\"https://github.com/bgoonz/bash-commands-walkthrough#readme\" class=\"markup--anchor markup--pullquote-anchor\">readme</a> for this git repo will provide a much more condensed list… whereas this article will break up the commands with explanations… images &#x26; links!</p>\n</blockquote>\n<p><strong>I will include the code examples as both github gists (for proper syntax highlighting) and as code snippets adjacent to said gists so that they can easily be copied and pasted… or … if you’re like me for instance; and like to use an extension to grab the markdown content of a page… the code will be included rather than just a link to the gist!</strong></p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/1200/1*3m_UcQOAyKtIpHQ6j9JzZw.gif\" class=\"graf-image\" /></figure>\n<h3>Here’s a Cheatsheet:</h3>\n<h3>Getting Started (Advanced Users Skip Section):</h3>\n<hr>\n<h4>✔ Check the Current Directory ➡ <code>pwd</code>:</h4>\n<p>On the command line, it’s important to know the directory we are currently working on. For that, we can use <code>pwd</code> command.</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*dimzLUrmDI4Ufev6.gif\" class=\"graf-image\" /></figure>It shows that I’m working on my Desktop directory.\n<h4>✔ Display List of Files ➡ <code>ls</code>:</h4>\n<p>To see the list of files and directories in the current directory use <code>ls</code> command in your CLI.</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*HHzVrK2CtTPwTdYT.gif\" class=\"graf-image\" /></figure>Shows all of my files and directories of my Desktop directory.\n<ul>\n<li><span id=\"20cb\">To show the contents of a directory pass the directory name to the <code>ls</code> command i.e. <code>ls directory_name</code>.</span></li>\n<li><span id=\"5cd8\">Some useful <code>ls</code> command options:-</span></li>\n</ul>\n<p>OptionDescriptionls -alist all files including hidden file starting with ‘.’ls -llist with the long formatls -lalist long format including hidden files</p>\n<h4>✔ Create a Directory ➡ <code>mkdir</code>:</h4>\n<p>We can create a new folder using the <code>mkdir</code> command. To use it type <code>mkdir folder_name</code>.</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*m3dDyC9vRJBUZSxR.gif\" class=\"graf-image\" /></figure>Use `ls` command to see the directory is created or not.\n<p>I created a cli-practice directory in my working directory i.e. Desktop directory.</p>\n<h4>✔ Move Between Directories ➡ <code>cd</code>:</h4>\n<p>It’s used to change directory or to move other directories. To use it type <code>cd directory_name</code>.</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*34KGxT2G8oNMDnIc.gif\" class=\"graf-image\" /></figure>Can use `pwd` command to confirm your directory name.\n<p>Changed my directory to the cli-practice directory. And the rest of the tutorial I’m gonna work within this directory.</p>\n<h4>✔ Parent Directory ➡ <code>..</code>:</h4>\n<p>We have seen <code>cd</code> command to change directory but if we want to move back or want to move to the parent directory we can use a special symbol <code>..</code> after <code>cd</code> command, like <code>cd ..</code></p>\n<h4>✔ Create Files ➡ <code>touch</code>:</h4>\n<p>We can create an empty file by typing <code>touch file_name</code>. It's going to create a new file in the current directory (the directory you are currently in) with your provided name.</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*xu1wtv7gJ2NMvP60.gif\" class=\"graf-image\" /></figure>I created a hello.txt file in my current working directory. Again you can use `ls` command to see the file is created or not.\n<p>Now open your hello.txt file in your text editor and write <em>Hello Everyone!</em> into your hello.txt file and save it.</p>\n<h4>✔ Display the Content of a File ➡ <code>cat</code>:</h4>\n<p>We can display the content of a file using the <code>cat</code> command. To use it type <code>cat file_name</code>.</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*iKf5w9QFNCeLRv8a.gif\" class=\"graf-image\" /></figure>Shows the content of my hello.txt file.\n<h4>✔ Move Files &#x26; Directories ➡ <code>mv</code>:</h4>\n<p>To move a file and directory, we use <code>mv</code> command.</p>\n<p>By typing <code>mv file_to_move destination_directory</code>, you can move a file to the specified directory.</p>\n<p>By entering <code>mv directory_to_move destination_directory</code>, you can move all the files and directories under that directory.</p>\n<p>Before using this command, we are going to create two more directories and another txt file in our cli-practice directory.</p>\n<p><code>mkdir html css touch bye.txt</code></p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*piaAQz_MQpzo7DPH.gif\" class=\"graf-image\" /></figure>Yes, we can use multiple directories & files names one after another to create multiple directories & files in one command.\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*5jmj_ZyNz46GuQKz.gif\" class=\"graf-image\" /></figure>Moved my bye.txt file into my css directory and then moved my css directory into my html directory.\n<h4>✔ Rename Files &#x26; Directories ➡ <code>mv</code>:</h4>\n<p><code>mv</code> command can also be used to rename a file and a directory.</p>\n<p>You can rename a file by typing <code>mv old_file_name new_file_name</code> &#x26; also rename a directory by typing <code>mv old_directory_name new_directory_name</code>.</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*WTVu1dd6gr-nmWhD.gif\" class=\"graf-image\" /></figure>Renamed my hello.txt file to the hi.txt file and html directory to the folder directory.\n<h4>✔ Copy Files &#x26; Directories ➡ <code>cp</code>:</h4>\n<p>To do this, we use the <code>cp</code> command.</p>\n<ul>\n<li><span id=\"62fa\">You can copy a file by entering <code>cp file_to_copy new_file_name</code>.</span></li>\n</ul>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*kCLVtKN9oKPbHfRF.gif\" class=\"graf-image\" /></figure>Copied my hi.txt file content into hello.txt file. For confirmation open your hello.txt file in your text editor.\n<ul>\n<li><span id=\"9bfc\">You can also copy a directory by adding the <code>-r</code> option, like <code>cp -r directory_to_copy new_directory_name</code>.</span></li>\n</ul>\n<p><em>The</em> <code>-r</code> <em>option for \"recursive\" means that it will copy all of the files including the files inside of subfolders.</em></p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*MnmzMiioIYCuK92B.gif\" class=\"graf-image\" /></figure>Here I copied all of the files from the folder to folder-copy.\n<h4>✔ Remove Files &#x26; Directories ➡ <code>rm</code>:</h4>\n<p>To do this, we use the <code>rm</code> command.</p>\n<ul>\n<li><span id=\"487a\">To remove a file, you can use the command like <code>rm file_to_remove</code>.</span></li>\n</ul>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*ohCmdthd92_HA6Ze.gif\" class=\"graf-image\" /></figure>Here I removed my hi.txt file.\n<ul>\n<li><span id=\"0e9a\">To remove a directory, use the command like <code>rm -r directory_to_remove</code>.</span></li>\n</ul>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*voDbzwSpw24A2RjQ.gif\" class=\"graf-image\" /></figure>I removed my folder-copy directory from my cli-practice directory i.e. current working directory.\n<h4>✔ Clear Screen ➡ <code>clear</code>:</h4>\n<p>Clear command is used to clear the terminal screen.</p>\n<h4>✔ Home Directory ➡ <code>~</code>:</h4>\n<p>The Home directory is represented by <code>~</code>. The Home directory refers to the base directory for the user. If we want to move to the Home directory we can use <code>cd ~</code> command. Or we can only use <code>cd</code> command.</p>\n<hr>\n<h3>MY COMMANDS:</h3>\n<h3>1.) Recursively unzip zip files and then delete the archives when finished:</h3>\n<p><strong>here is a</strong> <a href=\"https://github.com/bgoonz/bash-commands-walkthrough/tree/master/steps/1-recursive-unzip\" class=\"markup--anchor markup--p-anchor\"><strong>folde</strong></a><strong>r containing the before and after… I had to change folder names slightly due to a limit on the length of file-paths in a github repo.</strong></p>\n<pre><code>find . -name \"*.zip\" | while read filename; do unzip -o -d \"`dirname \"$filename\"`\" \"$filename\"; done;    \n\nfind . -name \"*.zip\" -type f -print -delete\n</code></pre>\n<hr>\n<h3>2.) Install node modules recursively:</h3>\n<pre><code>npm i -g recursive-install  \n\nnpm-recursive-install\n</code></pre>\n<hr>\n<h3>3.) Clean up unnecessary files/folders in git repo:</h3>\n<pre><code>find . -empty -type f -print -delete #Remove empty files\n\n# -------------------------------------------------------\nfind . -empty -type d -print -delete #Remove empty folders\n\n# -------------------------------------------------------\n\n# This will remove .git folders...    .gitmodule files as well as .gitattributes and .gitignore files. \n\nfind . \\( -name \".git\" -o -name \".gitignore\" -o -name \".gitmodules\" -o -name \".gitattributes\" \\) -exec rm -rf -- {} + \n\n# -------------------------------------------------------\n\n# This will remove the filenames you see listed below that just take up space if a repo has been downloaded for use exclusively in your personal file system (in which case the following files just take up space)# Disclaimer... you should not use this command in a repo that you intend to use with your work as it removes files that attribute the work to their original creators!\n\nfind . \\( -name \"*SECURITY.txt\" -o -name \"*RELEASE.txt\" -o -name \"*CHANGELOG.txt\" -o -name \"*LICENSE.txt\" -o -name \"*CONTRIBUTING.txt\" -name \"*HISTORY.md\" -o -name \"*LICENSE\" -o -name \"*SECURITY.md\" -o -name \"*RELEASE.md\" -o -name \"*CHANGELOG.md\" -o -name \"*LICENSE.md\" -o -name \"*CODE_OF_CONDUCT.md\" -o -name \"\\*CONTRIBUTING.md\" \\) -exec rm -rf -- {} +\n</code></pre>\n<h4>In Action:</h4>\n<p>The following output from my bash shell corresponds to the directory:</p>\n<p><a href=\"https://github.com/bgoonz/bash-commands-walkthrough/tree/master/steps/3-clean-up-fluf/DS-ALGO-OFFICIAL-master\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/bgoonz/bash-commands-walkthrough/tree/master/steps/3-clean-up-fluf/DS-ALGO-OFFICIAL-master\"><strong>bgoonz/bash-commands-walkthrough</strong><br />\n<em>Deployment github-pages Navigation Big O notation is the language we use for talking about how long an algorithm takes…</em>github.com</a><a href=\"https://github.com/bgoonz/bash-commands-walkthrough/tree/master/steps/3-clean-up-fluf/DS-ALGO-OFFICIAL-master\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<h4>which was created by running the aforementioned commands in in a perfect copy of this directory:</h4>\n<p><a href=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\"><strong>bgoonz/DS-ALGO-OFFICIAL</strong><br />\n<em>Deployment github-pages Navigation Big O notation is the language we use for talking about how long an algorithm takes…</em>github.com</a><a href=\"https://github.com/bgoonz/DS-ALGO-OFFICIAL\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<blockquote>\n<p><strong>…..below is the terminal output for the following commands:</strong></p>\n</blockquote>\n<pre><code>pwd\n/mnt/c/Users/bryan/Downloads/bash-commands/steps/3-clean-up-fluf/DS-ALGO-OFFICIAL-master\n</code></pre>\n<blockquote>\n<p><strong>After printing the working directory for good measure:</strong></p>\n</blockquote>\n<pre><code>find . -empty -type f -print -delete\n</code></pre>\n<blockquote>\n<p><strong>The above command deletes empty files recursively starting from the directory in which it was run:</strong></p>\n</blockquote>\n<pre><code>./CONTENT/DS-n-Algos/File-System/file-utilities/node_modules/line-reader/test/data/empty_file.txt\n./CONTENT/DS-n-Algos/_Extra-Practice/free-code-camp/nodejs/http-collect.js\n./CONTENT/Resources/Comments/node_modules/mime/.npmignore\n./markdown/tree2.md\n./node_modules/loadashes6/lodash/README.md\n./node_modules/loadashes6/lodash/release.md\n./node_modules/web-dev-utils/Markdown-Templates/Markdown-Templates-master/filled-out-readme.md\n|01:33:16|bryan@LAPTOP-9LGJ3JGS:[DS-ALGO-OFFICIAL-master] DS-ALGO-OFFICIAL-master_exitstatus:0[╗___________o>\n</code></pre>\n<blockquote>\n<p><strong>The command seen below deletes empty folders recursively starting from the directory in which it was run:</strong></p>\n</blockquote>\n<pre><code>find . -empty -type d -print -delete\n</code></pre>\n<blockquote>\n<p>The resulting directories….</p>\n</blockquote>\n<pre><code>|01:33:16|bryan@LAPTOP-9LGJ3JGS:[DS-ALGO-OFFICIAL-master] DS-ALGO-OFFICIAL-master_exitstatus:0[╗___________o>\n\nfind . -empty -type d -print -delete\n./.git/branches\n./.git/objects/info\n./.git/refs/tags\n|01:33:31|bryan@LAPTOP-9LGJ3JGS:[DS-ALGO-OFFICIAL-master] DS-ALGO-OFFICIAL-master_exitstatus:0[╗___________o>\n</code></pre>\n<blockquote>\n<p><strong>The command seen below deletes .git folders as well as .gitignore, .gitattributes, .gitmodule files</strong></p>\n</blockquote>\n<pre><code>find . \\( -name \".git\" -o -name \".gitignore\" -o -name \".gitmodules\" -o -name \".gitattributes\" \\) -exec rm -rf -- {} +\n</code></pre>\n<p><strong>The command seen below deletes most SECURITY, RELEASE, CHANGELOG, LICENSE, CONTRIBUTING, &#x26; HISTORY files that take up pointless space in repo’s you wish to keep exclusively for your own reference.</strong></p>\n<h3>!!!Use with caution as this command removes the attribution of the work from it’s original authors!!!!!</h3>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/0*r5dGhtbeZ4VdO54U\" alt=\"!!!Use with caution as this command removes the attribution of the work from it’s original authors!!!!!\" class=\"graf-image\" /><figcaption>!!!Use with caution as this command removes the attribution of the work from it’s original authors!!!!!</figcaption></figure>find . \\( -name \"*SECURITY.txt\" -o -name \"*RELEASE.txt\" -o  -name \"*CHANGELOG.txt\" -o -name \"*LICENSE.txt\" -o -name \"*CONTRIBUTING.txt\" -name \"*HISTORY.md\" -o -name \"*LICENSE\" -o -name \"*SECURITY.md\" -o -name \"*RELEASE.md\" -o  -name \"*CHANGELOG.md\" -o -name \"*LICENSE.md\" -o -name \"*CODE_OF_CONDUCT.md\" -o -name \"*CONTRIBUTING.md\" \\) -exec rm -rf -- {} +\n<hr>\n<h3>4.) Generate index.html file that links to all other files in working directory:</h3>\n<pre><code>#!/bin/sh\n# find ./ | grep -i \"\\.*$\" >files\nfind ./ | sed -E -e 's/([^ ]+[ ]+){8}//' | grep -i \"\\.*$\">files\nlisting=\"files\"\nout=\"\"\nhtml=\"index.html\"\nout=\"basename $out.html\"\nhtml=\"index.html\"\ncmd() {\n  echo '  &#x3C;!DOCTYPE html>'\n  echo '&#x3C;html>'\n  echo '&#x3C;head>'\n  echo '  &#x3C;meta http-equiv=\"Content-Type\" content=\"text/html\">'\n  echo '  &#x3C;meta name=\"Author\" content=\"Bryan Guner\">'\n  echo '&#x3C;link rel=\"stylesheet\" href=\"./assets/prism.css\">'\n  echo ' &#x3C;link rel=\"stylesheet\" href=\"./assets/style.css\">'\n  echo ' &#x3C;script async defer src=\"./assets/prism.js\">&#x3C;/script>'\n  echo \"  &#x3C;title> directory &#x3C;/title>\"\n  echo \"\"\n  echo '&#x3C;style>'\necho '    a {'\necho '      color: black;'\necho '    }'\necho ''\necho '    li {'\necho '      border: 1px solid black !important;'\necho '      font-size: 20px;'\necho '      letter-spacing: 0px;'\necho '      font-weight: 700;'\necho '      line-height: 16px;'\necho '      text-decoration: none !important;'\necho '      text-transform: uppercase;'\necho '      background: #194ccdaf !important;'\necho '      color: black !important;'\necho '      border: none;'\necho '      cursor: pointer;'\necho '      justify-content: center;'\necho '      padding: 30px 60px;'\necho '      height: 48px;'\necho '      text-align: center;'\necho '      white-space: normal;'\necho '      border-radius: 10px;'\necho '      min-width: 45em;'\necho '      padding: 1.2em 1em 0;'\necho '      box-shadow: 0 0 5px;'\necho '      margin: 1em;'\necho '      display: grid;'\necho '      -webkit-border-radius: 10px;'\necho '      -moz-border-radius: 10px;'\necho '      -ms-border-radius: 10px;'\necho '      -o-border-radius: 10px;'\necho '    }'\necho '  &#x3C;/style>'\n  echo '&#x3C;/head>'\n  echo '&#x3C;body>'\n  echo \"\"\n  # continue with the HTML stuff\n  echo \"\"\n  echo \"\"\n  echo \"&#x3C;ul>\"\n  awk '{print \"&#x3C;li>&#x3C;a href=\\\"\"$1\"\\\">\",$1,\"&#x26;nbsp;&#x3C;/a>&#x3C;/li>\"}' $listing\n  # awk '{print \"&#x3C;li>\"};\n  #  {print \" &#x3C;a href=\\\"\"$1\"\\\">\",$1,\"&#x3C;/a>&#x3C;/li>&#x26;nbsp;\"}' \\ $listing\n  echo \"\"\n  echo \"&#x3C;/ul>\"\n  echo \"&#x3C;/body>\"\n  echo \"&#x3C;/html>\"\n}\ncmd $listing --sort=extension >>$html\n</code></pre>\n<h4>In Action:</h4>\n<p><strong>I will use this copy of my Data Structures Practice Site to demonstrate the result:</strong></p>\n<p><a href=\"https://github.com/side-projects-42/DS-Bash-Examples-Deploy\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/side-projects-42/DS-Bash-Examples-Deploy\"><strong>side-projects-42/DS-Bash-Examples-Deploy</strong><br />\n<em>Deployment github-pages Navigation Big O notation is the language we use for talking about how long an algorithm takes…</em>github.com</a><a href=\"https://github.com/side-projects-42/DS-Bash-Examples-Deploy\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/1*PuuDTUviX5G6mja-5eKUIw.png\" class=\"graf-image\" /></figure>#### The result is a index.html file that contains a list of links to each file in the directory:\n<blockquote>\n<p>here is a link to and photo of the resulting html file:</p>\n</blockquote>\n<p><a href=\"https://quirky-meninsky-4181b5.netlify.app/\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://quirky-meninsky-4181b5.netlify.app/\"><strong>index.html</strong><br />\n<em>CONTENT/DS-n-Algos/</em>quirky-meninsky-4181b5.netlify.app</a><a href=\"https://quirky-meninsky-4181b5.netlify.app/\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\"></a></p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/800/1*AOYbWvUGN9yJ4ceNzAGGsw.png\" class=\"graf-image\" /></figure>\n<hr>\n<h3>5.) Download all links to a files of a specified extension on a user provided (url) webpage:</h3>\n<pre><code>wget -r -A.pdf https://overapi.com/gitwget --wait=2 --level=inf --limit-rate=20K --recursive --page-requisites --user-agent=Mozilla --no-parent --convert-links --adjust-extension --no-clobber -e robots=off\n</code></pre>\n<blockquote>\n<p>The result is stored in <a href=\"https://github.com/bgoonz/bash-commands-walkthrough/tree/master/steps/5-download-all-pdf\" class=\"markup--anchor markup--blockquote-anchor\">this directory:</a></p>\n</blockquote>\n<figure><img src=\"https://cdn-images-1.medium.com/max/1200/1*8evVPO_z-_TATzkcDTp15Q.png\" class=\"graf-image\" /></figure>\n<hr>\n<h3>6.)Recursively remove lines of text containing the string badFolder from files in the working directory.</h3>\n<pre><code>find . -type f -exec sed -i '/badFolder/d' ./* {} \\;\n\n# OR\n\nfind . -name 'result.md'  -type f -exec sed -i '/badFolder/d' ./* {} \\;\n</code></pre>\n<p><strong>As an example I will run this command on a file containing the text:</strong></p>\n<pre><code>Hacks Blog\n\nRead more at hacks.mozilla.org\n\nbadFolder\n\nbadFolder Implementing Private Fields for JavaScript\n\nWhen implementing a language feature for JavaScript, an implementer must make decisions about how the language in the specification maps to the implementation. Private fields is an example of where the specification language and implementation reality diverge, at least in SpiderMonkey– the JavaScript engine which powers Firefox. To understand more, I’ll explain what private fields are, a couple of models for thinking about them, and explain why our implementation diverges from the specification language.The post Implementing Private Fields for JavaScript appeared first on Mozilla Hacks - the Web developer blog.\n\nPosted Tuesday, June 8, 2021 by Matthew Gaudet\n\nLooking fine with Firefox 89\n\nFirefox 89 has smartened up and brings with it a slimmed-down, slightly more minimalist interface.badFolder Along with this new look, we get some great styling features including a force-colours feature for media queries and better control over how fonts are displayed. The long-awaited top-level await keyword for JavaScript modules is now enabled, as well as the PerformanceEventTiming interface, which is another addition to the performance suite of APIs: 89 really has been working out!The post Looking fine with Firefox 89 appeared first on Mozilla Hacks - the Web developer blog.\n\nbadFolder\n\nPosted Tuesday, June 1, 2021 by Chris Mills\n\nbadFolder\n\nImproving Firefox stability on Linux\n\nRoughly a year ago at Mozilla we started an effort to improve Firefox stability on Linux. This effort quickly became an example of good synergies between FOSS projects.The post Improving Firefox stability on Linux appeared first on Mozilla Hacks - the Web developer blog.\n\nPosted Wednesday, May 19, 2021 by Gabriele Svelto badFolder\n\nIntroducing Firefox’s new Site Isolation Security Architecture\n\nLike any web browser, Firefox loads code from untrusted and potentially hostile websites and runs it on your computer. To protect you against new types of attacks from malicious sites and to meet the security principles of Mozilla, we set out to redesign Firefox on desktop.The post Introducing Firefox’s new Site Isolation Security Architecture appeared first on Mozilla Hacks - the Web developer blog.\n\nPosted Tuesday, May 18, 2021 by Anny Gakhokidze\n\nPyodide Spin Out and 0.17 Release\n\nWe are happy to announce that Pyodide has become an independent and community-driven project. We are also pleased to announce the 0.17 release for Pyodide with many new features and improvements. Pyodide consists of the CPython 3.8 interpreter compiled to WebAssembly which allows Python to run in the browser.The post Pyodide Spin Out and 0.17 Release appeared first on Mozilla Hacks - the Web developer blog. badFolder\n\nPosted Thursday, April 22, 2021 by Teon Brooks\n</code></pre>\n<p><strong><em>I modified the command slightly to apply only to files called ‘result.md’:</em></strong></p>\n<blockquote>\n<p>The result is :</p>\n</blockquote>\n<pre><code>Hacks Blog\n\nRead more at hacks.mozilla.org\n\nWhen implementing a language feature for JavaScript, an implementer must make decisions about how the language in the specification maps to the implementation. Private fields is an example of where the specification language and implementation reality diverge, at least in SpiderMonkey– the JavaScript engine which powers Firefox. To understand more, I’ll explain what private fields are, a couple of models for thinking about them, and explain why our implementation diverges from the specification language.The post Implementing Private Fields for JavaScript appeared first on Mozilla Hacks - the Web developer blog.\n\nPosted Tuesday, June 8, 2021 by Matthew Gaudet\n\nLooking fine with Firefox 89\n\nPosted Tuesday, June 1, 2021 by Chris Mills\n\nImproving Firefox stability on Linux\n\nRoughly a year ago at Mozilla we started an effort to improve Firefox stability on Linux. This effort quickly became an example of good synergies between FOSS projects.The post Improving Firefox stability on Linux appeared first on Mozilla Hacks - the Web developer blog.\n\nIntroducing Firefox’s new Site Isolation Security Architecture\n\nLike any web browser, Firefox loads code from untrusted and potentially hostile websites and runs it on your computer. To protect you against new types of attacks from malicious sites and to meet the security principles of Mozilla, we set out to redesign Firefox on desktop.The post Introducing Firefox’s new Site Isolation Security Architecture appeared first on Mozilla Hacks - the Web developer blog.\n\nPosted Tuesday, May 18, 2021 by Anny Gakhokidze\n\nPyodide Spin Out and 0.17 Release\n\nPosted Thursday, April 22, 2021 by Teon Brooks\n</code></pre>\n<figure><img src=\"https://cdn-images-1.medium.com/max/1200/1*Up5as-MkHcHbvI_qX1AqPw.png\" class=\"graf-image\" /></figure>\n<p><strong>the test.txt and result.md files can be found here:</strong></p>\n<p><a href=\"https://github.com/bgoonz/bash-commands-walkthrough/tree/master/steps/6-remove-lines-contaning-bad-text\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/bgoonz/bash-commands-walkthrough/tree/master/steps/6-remove-lines-contaning-bad-text\"><strong>bgoonz/bash-commands-walkthrough</strong><br />\n<em>to accompany the medium article I am writing. Contribute to bgoonz/bash-commands-walkthrough development by creating an…</em>github.com</a><a href=\"https://github.com/bgoonz/bash-commands-walkthrough/tree/master/steps/6-remove-lines-contaning-bad-text\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<hr>\n<h3>7.) Execute command recursively:</h3>\n<p><strong>Here I have modified the command I wish to run recursively to account for the fact that the ‘find’ command already works recursively, by appending the -maxdepth 1 flag…</strong></p>\n<blockquote>\n<p><strong>I am essentially removing the recursive action of the find command…</strong></p>\n</blockquote>\n<p><strong>That way, if the command affects the more deeply nested folders we know the outer RecurseDirs function we are using to run the <em>find/pandoc</em> line once in every subfolder of the working directory… is working properly!</strong></p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/600/1*5C_uzLnuCSlTiioi2EtnUA.png\" class=\"graf-image\" /></figure>**Run in the folder shown to the left… we would expect every .md file to be accompanied by a newly generated html file by the same name.**\n<p><strong>The results of said operation can be found in the</strong> <a href=\"https://github.com/bgoonz/bash-commands-walkthrough/tree/master/steps/7-recursive-run\" class=\"markup--anchor markup--p-anchor\"><strong>following directory</strong></a></p>\n<h4>In Action:</h4>\n<p>🢃 Below 🢃</p>\n<figure><img src=\"https://cdn-images-1.medium.com/max/1200/1*k9c1QRKY07TLJnp9Se89lQ.gif\" class=\"graf-image\" /></figure>\n<h4>The final result is:</h4>\n<figure><img src=\"https://cdn-images-1.medium.com/max/1200/1*jqrjNeBuRmTrDt3vmQ50LQ.png\" class=\"graf-image\" /></figure>\n<p><em>If you want to run any bash script recursively all you have to do is substitue out line #9 with the command you want to run once in every sub-folder.</em></p>\n<pre><code>function RecurseDirs ()\n{\n    oldIFS=$IFS\n    IFS=$'\\n'\n    for f in \"$@\"\n    do\n\n#Replace the line below with your own command!\n\n#find ./ -iname \"*.md\" -maxdepth 1 -type f -exec sh -c 'pandoc --standalone \"${0}\" -o \"${0%.md}.html\"' {} \\;\n\n#####################################################\n# YOUR CODE BELOW!\n\n#####################################################\n\nif [[ -d \"${f}\" ]]; then\n            cd \"${f}\"\n            RecurseDirs $(ls -1 \".\")\n            cd ..\n        fi\n    done\n    IFS=$oldIFS\n}\nRecurseDirs \"./\"\n</code></pre>\n<hr>\n<h3>TBC….</h3>\n<p><strong>Here are some of the other commands I will cover in greater detail… at a later time:</strong></p>\n<h3>9. Copy any text between &#x3C;script> tags in a file called example.html to be inserted into a new file: out.js</h3>\n<pre><code>sed -n -e '/&#x3C;script>/,/&#x3C;\\/script>/p' example.html >out.js\n</code></pre>\n<hr>\n<h3>10. Recursively Delete node_modules folders</h3>\n<pre><code>find . -name 'node_modules' -type d -print -prune -exec rm -rf '{}' +\n</code></pre>\n<hr>\n<h3>11. Sanatize file and folder names to remove illegal characters and reserved words.</h3>\n<pre><code>sanitize() {\n  shopt -s extglob;\n\n  filename=$(basename \"$1\")\n  directory=$(dirname \"$1\")\n\n  filename_clean=$(echo \"$filename\" | sed -e 's/[\\\\/:\\*\\?\"&#x3C;>\\|\\x01-\\x1F\\x7F]//g' -e 's/^\\(nul\\|prn\\|con\\|lpt[0-9]\\|com[0-9]\\|aux\\)\\(\\.\\|$\\)//i' -e 's/^\\.*$//' -e 's/^$/NONAME/')\n\n  if (test \"$filename\" != \"$filename_clean\")\n  then\n    mv -v \"$1\" \"$directory/$filename_clean\"\n  fi\n}\n\nexport -f sanitize\n\nsanitize_dir() {\n  find \"$1\" -depth -exec bash -c 'sanitize \"$0\"' {} \\;\n\n}\n\nsanitize_dir '/path/to/somewhere'\n</code></pre>\n<hr>\n<h3>12. Start postgresql in terminal</h3>\n<pre><code>sudo -u postgres psql\n</code></pre>\n<hr>\n<h3>13. Add closing body and script tags to each html file in working directory.</h3>\n<pre><code>for f in * ; do\n  mv \"$f\" \"$f.html\"\ndoneecho \"&#x3C;form>\n &#x3C;input type=\"button\" value=\"Go back!\" onclick=\"history.back()\">\n&#x3C;/form>\n  &#x3C;/body>&#x3C;/html>\" | tee -a *.html\n</code></pre>\n<hr>\n<h3>14. Batch Download Videos</h3>\n<pre><code>#!/bin/bash\n\nlink=\"#insert url here#\"\n#links were a set of strings with just the index of the video as the variable\n\nnum=3\n#first video was numbered 3 - weird.\n\next=\".mp4\"\n\nwhile [ $num -le 66 ]\ndo\n      wget $link$num$ext -P ~/Downloads/\n      num=$(($num+1))\ndone\n</code></pre>\n<hr>\n<h3>15. Change File Extension from ‘.txt’ to .doc for all files in working directory.</h3>\n<pre><code>sudo apt install rename\n\nrename 's/\\.txt$/.doc/' *.txt\n</code></pre>\n<h3>16. Recursivley change any file with extension .js.download to .js</h3>\n<pre><code>find . -name \"*.\\.js\\.download\" -exec rename 's/\\.js\\.download$/.js/' '{}' +\n</code></pre>\n<hr>\n<h3>17. Copy folder structure including only files of a specific extension into an ouput Folder</h3>\n<pre><code>find . -name '*.md' | cpio -pdm './../outputFolder'\n</code></pre>\n<hr>\n<h3>Discover More:</h3>\n<p><a href=\"https://bgoonz-blog.netlify.app/\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://bgoonz-blog.netlify.app/\"><strong>Web-Dev-Hub</strong><br />\n<em>Memoization, Tabulation, and Sorting Algorithms by Example Why is looking at runtime not a reliable method of…</em>bgoonz-blog.netlify.app</a><a href=\"https://bgoonz-blog.netlify.app/\" class=\"js-mixtapeImage mixtapeImage u-ignoreBlock\"></a></p>\n<h3>Part 2 of this series:</h3>\n<p><a href=\"https://medium.com/@bryanguner/life-saving-bash-scripts-part-2-b40c8ee22682\" class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://medium.com/@bryanguner/life-saving-bash-scripts-part-2-b40c8ee22682\"><strong>Medium</strong><br />\n<em>Continued!!!medium.com</em></a><a href=\"https://medium.com/@bryanguner/life-saving-bash-scripts-part-2-b40c8ee22682\" class=\"js-mixtapeImage mixtapeImage mixtapeImage--empty u-ignoreBlock\"></a></p>\n<hr>\n<p>By <a href=\"https://medium.com/@bryanguner\" class=\"p-author h-card\">Bryan Guner</a> on <a href=\"https://medium.com/p/920fb6ab9d0a\">June 29, 2021</a>.</p>\n<p><a href=\"https://medium.com/@bryanguner/bash-commands-that-save-time-920fb6ab9d0a\" class=\"p-canonical\">Canonical link</a></p>\n<p>Exported from <a href=\"https://medium.com\">Medium</a> on August 31, 2021.</p>\n<h1>Resources:</h1>\n<ul>\n<li><a href=\"https://gist.github.com/bgoonz/df74dfa73bb5edd239ac738a14104eee\">holy grail</a></li>\n</ul>\n<h1>1. Remove spaces from file and folder names and then remove numbers from files and folder names....</h1>\n<h3>Description: need to : <code>sudo apt install rename</code></h3>\n<blockquote>\n<p>Notes: Issue when renaming file without numbers collides with existing file name...</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find . -name \"* *\" -type d | rename 's/ /_/g'   \nfind . -name \"* *\" -type f | rename 's/ /_/g'\n</code></pre>\n<pre><code class=\"language-sh\">```sh\nfind $dir -type f | sed 's|\\(.*/\\)[^A-Z]*\\([A-Z].*\\)|mv \\\"&#x26;\\\" \\\"\\1\\2\\\"|' | sh\n\nfind $dir -type d | sed 's|\\(.*/\\)[^A-Z]*\\([A-Z].*\\)|mv \\\"&#x26;\\\" \\\"\\1\\2\\\"|' | sh\n\nfor i in *.html; do mv \"$i\" \"${i%-*}.html\"; done\n\nfor i in *.*; do mv \"$i\" \"${i%-*}.${i##*.}\"; done\n\n---\n### Description: combine the contents of every file in the contaning directory.\n\n\n>Notes: this includes the contents of the file it's self...\n\n\n###### code:\n\n\n```js\n//APPEND-DIR.js\nconst fs = require('fs');\nlet cat = require('child_process')\n  .execSync('cat *')\n  .toString('UTF-8');\nfs.writeFile('output.md', cat, err => {\n  if (err) throw err;\n});\n</code></pre>\n<hr>\n<h1>2. Download Website Using Wget:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:       ==>     sudo apt install wget</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">wget --limit-rate=200k --no-clobber --convert-links --random-wait -r -p -E -e robots=off -U mozilla https://bootcamp42.gitbook.io/python/\n</code></pre>\n<hr>\n<h1>3. Clean Out Messy Git Repo:</h1>\n<h3>Description: recursively removes git related folders as well as internal use files / attributions in addition to empty folders</h3>\n<blockquote>\n<p>Notes:   To clear up clutter in repositories that only get used on your local machine.</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find . -empty -type d -print -delete        \n\n\nfind . \\( -name \".git\" -o -name \".gitignore\" -o -name \".gitmodules\" -o -name \".gitattributes\" \\) -exec rm -rf -- {} +\n\n\nfind . \\( -name \"*SECURITY.txt\" -o -name \"*RELEASE.txt\" -o  -name \"*CHANGELOG.txt\" -o -name \"*LICENSE.txt\" -o -name \"*CONTRIBUTING.txt\" -name \"*HISTORY.md\" -o -name \"*LICENSE\" -o -name \"*SECURITY.md\" -o -name \"*RELEASE.md\" -o  -name \"*CHANGELOG.md\" -o -name \"*LICENSE.md\" -o -name \"*CODE_OF_CONDUCT.md\" -o -name \"*CONTRIBUTING.md\" \\) -exec rm -rf -- {} +\n</code></pre>\n<hr>\n<h1>4. clone all of a user's git repositories</h1>\n<h3>Description: clone all of a user or organization's git  repositories.</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<h1>Generalized:</h1>\n<pre><code class=\"language-sh\">CNTX={users|orgs}; NAME={username|orgname}; PAGE=1\ncurl \"https://api.github.com/$CNTX/$NAME/repos?page=$PAGE&#x26;per_page=100\" |\n  grep -e 'git_url*' |\n  cut -d \\\" -f 4 |\n  xargs -L1 git clone\n</code></pre>\n<h1>Clone all Git User</h1>\n<pre><code class=\"language-sh\">CNTX={users}; NAME={bgoonz}; PAGE=1\ncurl \"https://api.github.com/$CNTX/$NAME/repos?page=$PAGE&#x26;per_page=200\"?branch=master |\n  grep -e 'git_url*' |\n  cut -d \\\" -f 4 |\n  xargs -L1 git clone\n</code></pre>\n<h1>Clone all Git Organization:</h1>\n<pre><code class=\"language-sh\">CNTX={organizations}; NAME={TheAlgorithms}; PAGE=1\ncurl \"https://api.github.com/$CNTX/$NAME/repos?page=$PAGE&#x26;per_page=200\"?branch=master |\n  grep -e 'git_url*' |\n  cut -d \\\" -f 4 |\n  xargs -L1 git clone\n</code></pre>\n<hr>\n<h1>5. Git Workflow</h1>\n<h3>Description:</h3>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">git pull\ngit init\ngit add .\ngit commit -m\"update\"\ngit push -u origin master\n</code></pre>\n<pre><code class=\"language-sh\">git init\ngit add .\ngit commit -m\"update\"\ngit push -u origin main\n</code></pre>\n<pre><code class=\"language-sh\">git init\ngit add .\ngit commit -m\"update\"\ngit push -u origin bryan-guner\n</code></pre>\n<pre><code class=\"language-sh\">git init\ngit add .\ngit commit -m\"update\"\ngit push -u origin gh-pages\n</code></pre>\n<pre><code class=\"language-sh\">git init\ngit add .\ngit commit -m\"update\"\ngit push -u origin preview\n</code></pre>\n<hr>\n<h1>6. Recursive Unzip In Place</h1>\n<h3>Description: recursively unzips folders and then deletes the zip file by the same name.</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find . -name \"*.zip\" | while read filename; do unzip -o -d \"`dirname \"$filename\"`\" \"$filename\"; done;\n\n\n\nfind . -name \"*.zip\" -type f -print -delete\n</code></pre>\n<hr>\n<h1>7. git pull keeping local changes:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">git stash\ngit pull\ngit stash pop\n</code></pre>\n<hr>\n<h1>8. Prettier Code Formatter:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">sudo npm i prettier -g\n\nprettier --write .\n</code></pre>\n<hr>\n<h1>9.  Pandoc</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find ./ -iname \"*.md\" -type f -exec sh -c 'pandoc --standalone \"${0}\" -o \"${0%.md}.html\"' {} \\;\n\n\n\nfind ./ -iname \"*.html\" -type f -exec sh -c 'pandoc --wrap=none --from html --to markdown_strict \"${0}\" -o \"${0%.html}.md\"' {} \\;\n\n\n\nfind ./ -iname \"*.docx\" -type f -exec sh -c 'pandoc \"${0}\" -o \"${0%.docx}.md\"' {} \\;\n</code></pre>\n<hr>\n<h1>10. Gitpod Installs</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">sudo apt install tree \nsudo apt install pandoc -y\nsudo apt install rename -y\nsudo apt install black -y\nsudo apt install wget -y\nnpm i lebab -g\nnpm i prettier -g\nnpm i npm-recursive-install -g\n</code></pre>\n<pre><code class=\"language-sh\">black .\n\nprettier --write .\nnpm-recursive-install\n</code></pre>\n<hr>\n<h1>11. Repo Utils Package:</h1>\n<h3>Description: my standard repo utis package</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">npm i @bgoonz11/repoutils\n</code></pre>\n<hr>\n<h1>12.  Unix Tree Package Usage:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">tree -d -I  'node_modules'\n\ntree  -I  'node_modules'\n\ntree -f  -I  'node_modules' >TREE.md\n\ntree -f -L 2  >README.md\n\ntree -f  -I  'node_modules' >listing-path.md\n\n\ntree -f  -I  'node_modules' -d >TREE.md\n\ntree -f >README.md\n</code></pre>\n<hr>\n<h1>13. Find &#x26; Replace string in file &#x26; folder names recursively..</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find . -type f -exec rename 's/string1/string2/g' {} +\n\n\nfind . -type d -exec rename 's/-master//g' {} +\n\n\nfind . -type f -exec rename 's/\\.download//g' {} +\n\n\n\n\nfind . -type d -exec rename 's/-main//g' {} +\n\n\n\nrename 's/\\.js\\.download$/.js/' *.js\\.download \n\n\nrename 's/\\.html\\.markdown$/.md/' *.html\\.markdown \n\n\nfind . -type d -exec rename 's/es6//g' {} +\n</code></pre>\n<hr>\n<h1>14. Remove double extensions :</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">#!/bin/bash\n\nfor file in *.md.md\ndo\n    mv \"${file}\" \"${file%.md}\"\ndone\n\n#!/bin/bash\n\nfor file in *.html.html\ndo\n    mv \"${file}\" \"${file%.html}\"\ndone\n</code></pre>\n<pre><code class=\"language-sh\">#!/bin/bash\n\nfor file in *.html.png\ndo\n    mv \"${file}\" \"${file%.png}\"\ndone\n\nfor file in *.jpg.jpg\ndo\n    mv \"${file}\" \"${file%.png}\"\ndone\n</code></pre>\n<hr>\n<h1>15. Truncate folder names down to 12 characters:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">for d in ./*; do mv $d ${d:0:12}; done\n</code></pre>\n<hr>\n<h1>16.Appendir.js</h1>\n<h3>Description: combine the contents of every file in the contaning directory.</h3>\n<blockquote>\n<p>Notes: this includes the contents of the file it's self...</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-js\">//APPEND-DIR.js\nconst fs = require('fs');\nlet cat = require('child_process')\n  .execSync('cat *')\n  .toString('UTF-8');\nfs.writeFile('output.md', cat, err => {\n  if (err) throw err;\n});\n</code></pre>\n<hr>\n<h1>17. Replace space in filename with underscore</h1>\n<h3>Description: followed by replace <code>'#' with '_'</code> in directory name</h3>\n<blockquote>\n<p>Notes: Can be re-purposed to find and replace any set of strings in file or folder names. </p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find . -name \"* *\" -type f | rename 's/_//g'\n\nfind . -name \"* *\" -type d | rename 's/#/_/g'   \n</code></pre>\n<hr>\n<h1>18. Filter &#x26; delete files by name and extension</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find . -name '.bin' -type d -prune -exec rm -rf '{}' +\n\nfind . -name '*.html' -type d -prune -exec rm -rf '{}' +\n\nfind . -name 'nav-index' -type d -prune -exec rm -rf '{}' +\n\nfind . -name 'node-gyp' -type d -prune -exec rm -rf '{}' +\n\nfind . -name 'deleteme.txt' -type f -prune -exec rm -rf '{}' +\n\nfind . -name 'right.html' -type f -prune -exec rm -rf '{}' +\n\nfind . -name 'left.html' -type f -prune -exec rm -rf '{}' +\n</code></pre>\n<hr>\n<h1>19. Remove lines containing string:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes: Remove lines not containing <code>'.js'</code></p>\n</blockquote>\n<pre><code class=\"language-sh\">sudo sed -i '/\\.js/!d' ./*scrap2.md\n</code></pre>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">sudo sed -i '/githubusercontent/d' ./*sandbox.md\n\n\nsudo sed -i '/githubusercontent/d' ./*scrap2.md\n\n\n\nsudo sed -i '/github\\.com/d' ./*out.md\n\n\nsudo sed -i '/author/d' ./*\n</code></pre>\n<hr>\n<h1>20. Remove duplicate lines from a text file</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:\n//...syntax of uniq...//\n$uniq [OPTION] [INPUT[OUTPUT]]\nThe syntax of this is quite easy to understand. Here, INPUT refers to the input file in which repeated lines need to be filtered out and if INPUT isn’t specified then uniq reads from the standard input. OUTPUT refers to the output file in which you can store the filtered output generated by uniq command and as in case of INPUT if OUTPUT isn’t specified then uniq writes to the standard output. </p>\n</blockquote>\n<p>Now, let’s understand the use of this with the help of an example. Suppose you have a text file named kt.txt which contains repeated lines that needs to be omitted. This can simply be done with uniq. </p>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">sudo apt install uniq\nuniq -u input.txt output.txt\n</code></pre>\n<hr>\n<h1>21. Remove lines containing string:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">sudo sed -i '/githubusercontent/d' ./*sandbox.md\n\n\nsudo sed -i '/githubusercontent/d' ./*scrap2.md\n\n\nsudo sed -i '/github\\.com/d' ./*out.md\n\n---\ntitle: add_days\ntags: date,intermediate\nfirstSeen: 2020-10-28T16:19:04+02:00\nlastUpdated: 2020-10-28T16:19:04+02:00\n---\n\nsudo sed -i '/title:/d' ./*output.md\nsudo sed -i '/firstSeen/d' ./*output.md\nsudo sed -i '/lastUpdated/d' ./*output.md\nsudo sed -i '/tags:/d' ./*output.md\n\nsudo sed -i '/badstring/d' ./*\n\n\nsudo sed -i '/stargazers/d' ./repo.txt\nsudo sed -i '/node_modules/d' ./index.html\nsudo sed -i '/right\\.html/d' ./index.html\nsudo sed -i '/right\\.html/d' ./right.html\n</code></pre>\n<hr>\n<h1>22. Zip directory excluding .git and node_modules all the way down (Linux)</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">#!/bin/bash\nTSTAMP=`date '+%Y%m%d-%H%M%S'`\nzip -r $1.$TSTAMP.zip $1 -x \"**.git/*\" -x \"**node_modules/*\" `shift; echo $@;`\n\nprintf \"\\nCreated: $1.$TSTAMP.zip\\n\"\n\n# usage: \n# - zipdir thedir\n# - zip thedir -x \"**anotherexcludedsubdir/*\"    (important the double quotes to prevent glob expansion)\n\n# if in windows/git-bash, add 'zip' command this way: \n# https://stackoverflow.com/a/55749636/1482990\n</code></pre>\n<hr>\n<h1>23. Delete files containing a certain string:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find . | xargs grep -l www.redhat.com | awk '{print \"rm \"$1}' > doit.sh\nvi doit.sh // check for murphy and his law\nsource doit.sh\n</code></pre>\n<hr>\n<h1>24.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">#!/bin/sh\n\n# find ./ | grep -i \"\\.*$\" >files\nfind ./ | sed -E -e 's/([^ ]+[ ]+){8}//' | grep -i \"\\.*$\">files\nlisting=\"files\"\n\nout=\"\"\n\nhtml=\"sitemap.html\"\nout=\"basename $out.html\"\nhtml=\"sitemap.html\"\ncmd() {\n\n  echo '  &#x3C;!DOCTYPE html>'\n  echo '&#x3C;html>'\n  echo '&#x3C;head>'\n\n  echo '  &#x3C;meta http-equiv=\"Content-Type\" content=\"text/html\">'\n\n  echo '  &#x3C;meta name=\"Author\" content=\"Bryan Guner\">'\n  echo '&#x3C;link rel=\"stylesheet\" href=\"./assets/prism.css\">'\n  echo ' &#x3C;link rel=\"stylesheet\" href=\"./assets/style.css\">'\n  echo ' &#x3C;script async defer src=\"./assets/prism.js\">&#x3C;/script>'\n\n  echo \"  &#x3C;title> directory &#x3C;/title>\"\n    echo '&#x3C;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/bgoonz/GIT-CDN-FILES/mdn-article.css\">'\n  echo '&#x3C;link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/gh/bgoonz/GIT-CDN-FILES/markdown-to-html-style.css\">'\n  echo \"\"\n  echo '&#x3C;style>'\n\n\necho '    a {'\necho '      color: black;'\necho '    }'\necho ''\necho '    li {'\necho '      border: 1px solid black !important;'\necho '      font-size: 20px;'\necho '      letter-spacing: 0px;'\necho '      font-weight: 700;'\necho '      line-height: 16px;'\necho '      text-decoration: none !important;'\necho '      text-transform: uppercase;'\necho '      background: #194ccdaf !important;'\necho '      color: black !important;'\necho '      border: none;'\necho '      cursor: pointer;'\necho '      justify-content: center;'\necho '      padding: 30px 60px;'\necho '      height: 48px;'\necho '      text-align: center;'\necho '      white-space: normal;'\necho '      border-radius: 10px;'\necho '      min-width: 45em;'\necho '      padding: 1.2em 1em 0;'\necho '      box-shadow: 0 0 5px;'\necho '      margin: 1em;'\necho '      display: grid;'\necho '      -webkit-border-radius: 10px;'\necho '      -moz-border-radius: 10px;'\necho '      -ms-border-radius: 10px;'\necho '      -o-border-radius: 10px;'\necho '    }'\necho '  &#x3C;/style>'\n  echo '&#x3C;/head>'\n\n  echo '&#x3C;body>'\n\n  echo \"\"\n\n  # continue with the HTML stuff\n\n  echo \"\"\n\n  echo \"\"\n\n  echo \"&#x3C;ul>\"\n\n  awk '{print \"&#x3C;li>&#x3C;a href=\\\"\"$1\"\\\">\",$1,\"&#x26;nbsp;&#x3C;/a>&#x3C;/li>\"}' $listing\n\n  # awk '{print \"&#x3C;li>\"};\n\n  #     {print \" &#x3C;a href=\\\"\"$1\"\\\">\",$1,\"&#x3C;/a>&#x3C;/li>&#x26;nbsp;\"}' \\ $listing\n\n  echo \"\"\n\n  echo \"&#x3C;/ul>\"\n\n  echo \"&#x3C;/body>\"\n\n  echo \"&#x3C;/html>\"\n\n}\n\ncmd $listing --sort=extension >>$html\n</code></pre>\n<hr>\n<h1>25. Index of Iframes</h1>\n<h3>Description: Creates an index.html file that contains all the files in the working directory or any of it's sub folders as iframes instead of anchor tags.</h3>\n<blockquote>\n<p>Notes: Useful Follow up Code:</p>\n</blockquote>\n<pre><code class=\"language-sh\"></code></pre>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">#!/bin/sh\n\n# find ./ | grep -i \"\\.*$\" >files\nfind ./ | sed -E -e 's/([^ ]+[ ]+){8}//' | grep -i \"\\.*$\">files\nlisting=\"files\"\n\nout=\"\"\n\nhtml=\"index.html\"\nout=\"basename $out.html\"\nhtml=\"index.html\"\ncmd() {\n\n  echo '  &#x3C;!DOCTYPE html>'\n  echo '&#x3C;html>'\n  echo '&#x3C;head>'\n\n  echo '  &#x3C;meta http-equiv=\"Content-Type\" content=\"text/html\">'\n\n  echo '  &#x3C;meta name=\"Author\" content=\"Bryan Guner\">'\n  echo '&#x3C;link rel=\"stylesheet\" href=\"./assets/prism.css\">'\n  echo ' &#x3C;link rel=\"stylesheet\" href=\"./assets/style.css\">'\n  echo ' &#x3C;script async defer src=\"./assets/prism.js\">&#x3C;/script>'\n\n  echo \"  &#x3C;title> directory &#x3C;/title>\"\n\n  echo \"\"\n  echo '&#x3C;style>'\n\n\necho '    a {'\necho '      color: black;'\necho '    }'\necho ''\necho '    li {'\necho '      border: 1px solid black !important;'\necho '      font-size: 20px;'\necho '      letter-spacing: 0px;'\necho '      font-weight: 700;'\necho '      line-height: 16px;'\necho '      text-decoration: none !important;'\necho '      text-transform: uppercase;'\necho '      background: #194ccdaf !important;'\necho '      color: black !important;'\necho '      border: none;'\necho '      cursor: pointer;'\necho '      justify-content: center;'\necho '      padding: 30px 60px;'\necho '      height: 48px;'\necho '      text-align: center;'\necho '      white-space: normal;'\necho '      border-radius: 10px;'\necho '      min-width: 45em;'\necho '      padding: 1.2em 1em 0;'\necho '      box-shadow: 0 0 5px;'\necho '      margin: 1em;'\necho '      display: grid;'\necho '      -webkit-border-radius: 10px;'\necho '      -moz-border-radius: 10px;'\necho '      -ms-border-radius: 10px;'\necho '      -o-border-radius: 10px;'\necho '    }'\necho '  &#x3C;/style>'\n  echo '&#x3C;/head>'\n\n  echo '&#x3C;body>'\n\n  echo \"\"\n\n  # continue with the HTML stuff\n\n  echo \"\"\n\n  echo \"\"\n\n  echo \"&#x3C;ul>\"\n\n  awk '{print \"&#x3C;iframe src=\\\"\"$1\"\\\">\",\"&#x3C;/iframe>\"}' $listing\n\n  # awk '{print \"&#x3C;li>\"};\n\n  #     {print \" &#x3C;a href=\\\"\"$1\"\\\">\",$1,\"&#x3C;/a>&#x3C;/li>&#x26;nbsp;\"}' \\ $listing\n\n  echo \"\"\n\n  echo \"&#x3C;/ul>\"\n\n  echo \"&#x3C;/body>\"\n\n  echo \"&#x3C;/html>\"\n\n}\n\ncmd $listing --sort=extension >>$html\n</code></pre>\n<hr>\n<h1>26. Filter Corrupted Git Repo For Troublesome File:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">git filter-branch --index-filter 'git rm -r --cached --ignore-unmatch assets/_index.html' HEAD\n</code></pre>\n<hr>\n<h1>27.  OVERWRITE LOCAL CHANGES:</h1>\n<h3>Description:</h3>\n<p>Important: If you have any local changes, they will be lost. With or without --hard option, any local commits that haven't been pushed will be lost.[*]\nIf you have any files that are not tracked by Git (e.g. uploaded user content), these files will not be affected.</p>\n<blockquote>\n<p>Notes:\nFirst, run a fetch to update all origin/<branch> refs to latest:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">git fetch --all\n# Backup your current branch:\n\ngit branch backup-master\n# Then, you have two options:\n\ngit reset --hard origin/master\n# OR If you are on some other branch:\n\ngit reset --hard origin/&#x3C;branch_name>\n# Explanation:\n# git fetch downloads the latest from remote without trying to merge or rebase anything.\n\n# Then the git reset resets the master branch to what you just fetched. The --hard option changes all the files in your working tree to match the files in origin/master\ngit fetch --all\ngit reset --hard origin/master\n</code></pre>\n<hr>\n<h1>28. Remove Submodules:</h1>\n<h3>Description: To remove a submodule you need to:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<blockquote>\n<p>Delete the relevant section from the .gitmodules file.\nStage the .gitmodules changes git add .gitmodules\nDelete the relevant section from .git/config.\nRun git rm --cached path<em>to</em>submodule (no trailing slash).\nRun rm -rf .git/modules/path<em>to</em>submodule (no trailing slash).\nCommit git commit -m \"Removed submodule \"\nDelete the now untracked submodule files rm -rf path<em>to</em>submodule</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">git submodule deinit\n</code></pre>\n<hr>\n<h1>29. GET GISTS</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">sudo apt install wget\n\n\n\nwget -q -O - https://api.github.com/users/bgoonz/gists | grep raw_url | awk -F\\\" '{print $4}' | xargs -n3 wget\n\n\nwget -q -O - https://api.github.com/users/amitness/gists | grep raw_url | awk -F\\\" '{print $4}' | xargs -n3 wget\n\n\nwget -q -O - https://api.github.com/users/drodsou/gists | grep raw_url | awk -F\\\" '{print $4}' | xargs -n1 wget\n\nwget -q -O - https://api.github.com/users/thomasmb/gists | grep raw_url | awk -F\\\" '{print $4}' | xargs -n1 wget\n</code></pre>\n<hr>\n<h1>30. Remove Remote OriginL</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">git remote remove origin\n</code></pre>\n<hr>\n<h1>31. just clone .git folder:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">git clone --bare --branch=master --single-branch https://github.com/bgoonz/My-Web-Dev-Archive.git\n</code></pre>\n<hr>\n<h1>32. Undo recent pull request:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">git reset --hard master@{\"10 minutes ago\"}\n</code></pre>\n<hr>\n<h1>33. Lebab</h1>\n<h3>Description: ES5 --> ES6</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"># Safe:\n\n lebab --replace ./ --transform arrow\n lebab --replace ./ --transform arrow-return\n lebab --replace ./ --transform for-of\n lebab --replace ./ --transform for-each\n lebab --replace ./ --transform arg-rest\n lebab --replace ./ --transform arg-spread\n lebab --replace ./ --transform obj-method\n lebab --replace ./ --transform obj-shorthand\n lebab --replace ./ --transform multi-var\n\n\n# ALL:\n\n\nlebab --replace ./ --transform obj-method\nlebab --replace ./ --transform class\nlebab --replace ./ --transform arrow\nlebab --replace ./ --transform let\nlebab --replace ./ --transform arg-spread\nlebab --replace ./ --transform arg-rest\nlebab --replace ./ --transform for-each\nlebab --replace ./ --transform for-of\nlebab --replace ./ --transform commonjs \nlebab --replace ./ --transform exponent\nlebab --replace ./ --transform multi-var\nlebab --replace ./ --transform template\nlebab --replace ./ --transform default-param\nlebab --replace ./ --transform  destruct-param \nlebab --replace ./ --transform includes\nlebab --replace ./ --transform obj-method\nlebab --replace ./ --transform class\nlebab --replace ./ --transform arrow\nlebab --replace ./ --transform arg-spread\nlebab --replace ./ --transform arg-rest\nlebab --replace ./ --transform for-each\nlebab --replace ./ --transform for-of\nlebab --replace ./ --transform commonjs \nlebab --replace ./ --transform exponent\nlebab --replace ./ --transform multi-var\nlebab --replace ./ --transform template\nlebab --replace ./ --transform default-param\nlebab --replace ./ --transform  destruct-param \nlebab --replace ./ --transform includes\n</code></pre>\n<hr>\n<h1>34. Troubleshoot Ubuntu Input/Output Error</h1>\n<h3>Description: Open Powershell as Administrator...</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-ps1\"> wsl.exe --shutdown\n\n Get-Service LxssManager | Restart-Service\n</code></pre>\n<hr>\n<h1>35. Export Medium as Markdown</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">npm i mediumexporter -g\n\n\nmediumexporter https://medium.com/codex/fundamental-data-structures-in-javascript-8f9f709c15b4 >ds.md\n</code></pre>\n<hr>\n<h1>36. Delete files in violation of a given size range (100MB for git)</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find . -size +75M -a -print -a -exec rm -f {} \\;\n\n\n\n\nfind . -size +98M -a -print -a -exec rm -f {} \\;\n</code></pre>\n<hr>\n<h1>37. download all links of given file type</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">wget -r -A.pdf https://overapi.com/git\n</code></pre>\n<hr>\n<h1>38. Kill all node processes</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">killall -s KILL node\n</code></pre>\n<hr>\n<h1>39. Remove string from file names recursively</h1>\n<h3>Description: In the example below I am using this command to remove the string \"-master\" from all file names in the working directory and all of it's sub directories.</h3>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find &#x3C;mydir> -type f -exec sed -i 's/&#x3C;string1>/&#x3C;string2>/g' {} +\n\n\n\n\nfind . -type f -exec rename 's/-master//g' {} +\n</code></pre>\n<blockquote>\n<p>Notes: The same could be done for folder names by changing the <em>-type f</em> flag (for file) to a <em>-type d</em> flag (for directory)</p>\n</blockquote>\n<pre><code class=\"language-sh\">find &#x3C;mydir> -type d -exec sed -i 's/&#x3C;string1>/&#x3C;string2>/g' {} +\n\n\n\n\nfind . -type d -exec rename 's/-master//g' {} +\n</code></pre>\n<hr>\n<h1>40. Remove spaces from file and folder names recursively</h1>\n<h3>Description: replaces spaces in file and folder names with an <code>_</code> underscore</h3>\n<blockquote>\n<p>Notes: need to run <code>sudo apt install rename</code> to use this command</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find . -name \"* *\" -type d | rename 's/ /_/g'   \nfind . -name \"* *\" -type f | rename 's/ /_/g'\n</code></pre>\n<hr>\n<h1>41.  Zip Each subdirectories in a given directory into their own zip file</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">for i in */; do zip -r \"${i%/}.zip\" \"$i\"; done\n</code></pre>\n<hr>\n<h1>42.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>43.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>44.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>45.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>46.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>47.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>48.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>49.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>50.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>51.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>52.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>53.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>54.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>55.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>56.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>57.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>58.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>59.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>60.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>61.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>62.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>63.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>64.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>65.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>66.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>67.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>68.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>69.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>70.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>71.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>72.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>73.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>74.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>75.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>76.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>77.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>78.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>79.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>80.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>81.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>82.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>83.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>84.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>85.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>86.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>87.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>88.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>89.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>90.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"></code></pre>\n<hr>\n<h1>91. Unzip PowerShell</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-ps1\">PARAM (\n    [string] $ZipFilesPath = \"./\",\n    [string] $UnzipPath = \"./RESULT\"\n)\n \n$Shell = New-Object -com Shell.Application\n$Location = $Shell.NameSpace($UnzipPath)\n \n$ZipFiles = Get-Childitem $ZipFilesPath -Recurse -Include *.ZIP\n \n$progress = 1\nforeach ($ZipFile in $ZipFiles) {\n    Write-Progress -Activity \"Unzipping to $($UnzipPath)\" -PercentComplete (($progress / ($ZipFiles.Count + 1)) * 100) -CurrentOperation $ZipFile.FullName -Status \"File $($Progress) of $($ZipFiles.Count)\"\n    $ZipFolder = $Shell.NameSpace($ZipFile.fullname)\n \n \n    $Location.Copyhere($ZipFolder.items(), 1040) # 1040 - No msgboxes to the user - http://msdn.microsoft.com/en-us/library/bb787866%28VS.85%29.aspx\n    $progress++\n}\n</code></pre>\n<hr>\n<h1>92. return to bash from zsh</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\"> sudo apt --purge remove zsh\n</code></pre>\n<hr>\n<h1>93. Symbolic Link</h1>\n<h3>Description: to working directory</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">ln -s \"$(pwd)\" ~/NameOfLink\n\nln -s \"$(pwd)\" ~/Downloads\n</code></pre>\n<hr>\n<h1>94. auto generate readme</h1>\n<h3>Description: rename existing readme to blueprint.md</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">npx @appnest/readme generate\n</code></pre>\n<hr>\n<h1>95. Log into postgres:</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">sudo -u postgres psql\n</code></pre>\n<hr>\n<h1>96. URL To Subscribe To YouTube Channel</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-txt\">https://www.youtube.com/channel/UC1HDa0wWnIKUf-b4yY9JecQ?sub_confirmation=1\n</code></pre>\n<hr>\n<h1>97. Embed Repl.it In Medium Post:</h1>\n<h6>code:</h6>\n<pre><code class=\"language-txt\">https://repl.it/@bgoonz/Data-Structures-Algos-Codebase?lite=true&#x26;amp;referrer=https%3A%2F%2Fbryanguner.medium.com\n\n\nhttps://repl.it/@bgoonz/node-db1-project?lite=true&#x26;amp;referrer=https%3A%2F%2Fbryanguner.medium.com\n\nhttps://repl.it/@bgoonz/interview-prac?lite=true&#x26;amp;referrer=https%3A%2F%2Fbryanguner.medium.com\n\n\nhttps://repl.it/@bgoonz/Database-Prac?lite=true&#x26;amp;referrer=https%3A%2F%2Fbryanguner.medium.com\n</code></pre>\n<hr>\n<h1>98.</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">find . -name *right.html  -type f -exec sed -i 's/target=\"_parent\"//g' {} +\n\n\nfind . -name *right.html  -type f -exec sed -i 's/target=\"_parent\"//g' {} +\n</code></pre>\n<hr>\n<h1>99.  Cheat Sheet</h1>\n<h3>Description:</h3>\n<blockquote>\n<p>Notes:</p>\n</blockquote>\n<h6>code:</h6>\n<pre><code class=\"language-sh\">#!/bin/bash\n##############################################################################\n# SHORTCUTS and HISTORY\n##############################################################################\n\nCTRL+A  # move to beginning of line\nCTRL+B  # moves backward one character\nCTRL+C  # halts the current command\nCTRL+D  # deletes one character backward or logs out of current session, similar to exit\nCTRL+E  # moves to end of line\nCTRL+F  # moves forward one character\nCTRL+G  # aborts the current editing command and ring the terminal bell\nCTRL+H  # deletes one character under cursor (same as DELETE)\nCTRL+J  # same as RETURN\nCTRL+K  # deletes (kill) forward to end of line\nCTRL+L  # clears screen and redisplay the line\nCTRL+M  # same as RETURN\nCTRL+N  # next line in command history\nCTRL+O  # same as RETURN, then displays next line in history file\nCTRL+P  # previous line in command history\nCTRL+Q  # resumes suspended shell output\nCTRL+R  # searches backward\nCTRL+S  # searches forward or suspends shell output\nCTRL+T  # transposes two characters\nCTRL+U  # kills backward from point to the beginning of line\nCTRL+V  # makes the next character typed verbatim\nCTRL+W  # kills the word behind the cursor\nCTRL+X  # lists the possible filename completions of the current word\nCTRL+Y  # retrieves (yank) last item killed\nCTRL+Z  # stops the current command, resume with fg in the foreground or bg in the background\n\nALT+B   # moves backward one word\nALT+D   # deletes next word\nALT+F   # moves forward one word\nALT+H   # deletes one character backward\nALT+T   # transposes two words\nALT+.   # pastes last word from the last command. Pressing it repeatedly traverses through command history.\nALT+U   # capitalizes every character from the current cursor position to the end of the word\nALT+L   # uncapitalizes every character from the current cursor position to the end of the word\nALT+C   # capitalizes the letter under the cursor. The cursor then moves to the end of the word.\nALT+R   # reverts any changes to a command you’ve pulled from your history if you’ve edited it.\nALT+?   # list possible completions to what is typed\nALT+^   # expand line to most recent match from history\n\nCTRL+X then (   # start recording a keyboard macro\nCTRL+X then )   # finish recording keyboard macro\nCTRL+X then E   # recall last recorded keyboard macro\nCTRL+X then CTRL+E   # invoke text editor (specified by $EDITOR) on current command line then execute resultes as shell commands\n\nBACKSPACE  # deletes one character backward\nDELETE     # deletes one character under cursor\n\nhistory   # shows command line history\n!!        # repeats the last command\n!&#x3C;n>      # refers to command line 'n'\n!&#x3C;string> # refers to command starting with 'string'\n\nexit      # logs out of current session\n\n\n##############################################################################\n# BASH BASICS\n##############################################################################\n\nenv                 # displays all environment variables\n\necho $SHELL         # displays the shell you're using\necho $BASH_VERSION  # displays bash version\n\nbash                # if you want to use bash (type exit to go back to your previously opened shell)\nwhereis bash        # locates the binary, source and manual-page for a command\nwhich bash          # finds out which program is executed as 'bash' (default: /bin/bash, can change across environments)\n\nclear               # clears content on window (hide displayed lines)\n\n\n##############################################################################\n# FILE COMMANDS\n##############################################################################\n\n\nls                            # lists your files in current directory, ls &#x3C;dir> to print files in a specific directory\nls -l                         # lists your files in 'long format', which contains the exact size of the file, who owns the file and who has the right to look at it, and when it was last modified\nls -a                         # lists all files in 'long format', including hidden files (name beginning with '.')\nln -s &#x3C;filename> &#x3C;link>       # creates symbolic link to file\nreadlink &#x3C;filename>           # shows where a symbolic links points to\ntree                          # show directories and subdirectories in easilly readable file tree\nmc                            # terminal file explorer (alternative to ncdu)\ntouch &#x3C;filename>              # creates or updates (edit) your file\nmktemp -t &#x3C;filename>            # make a temp file in /tmp/ which is deleted at next boot (-d to make directory)\ncat &#x3C;filename>                # prints file raw content (will not be interpreted)\nany_command > &#x3C;filename>      # '>' is used to perform redirections, it will set any_command's stdout to file instead of \"real stdout\" (generally /dev/stdout)\nmore &#x3C;filename>               # shows the first part of a file (move with space and type q to quit)\nhead &#x3C;filename>               # outputs the first lines of file (default: 10 lines)\ntail &#x3C;filename>               # outputs the last lines of file (useful with -f option) (default: 10 lines)\nvim &#x3C;filename>                # opens a file in VIM (VI iMproved) text editor, will create it if it doesn't exist\nmv &#x3C;filename1> &#x3C;dest>         # moves a file to destination, behavior will change based on 'dest' type (dir: file is placed into dir; file: file will replace dest (tip: useful for renaming))\ncp &#x3C;filename1> &#x3C;dest>         # copies a file\nrm &#x3C;filename>                 # removes a file\nfind . -name &#x3C;name> &#x3C;type>    # searches for a file or a directory in the current directory and all its sub-directories by its name\ndiff &#x3C;filename1> &#x3C;filename2>  # compares files, and shows where they differ\nwc &#x3C;filename>                 # tells you how many lines, words and characters there are in a file. Use -lwc (lines, word, character) to ouput only 1 of those informations\nsort &#x3C;filename>               # sorts the contents of a text file line by line in alphabetical order, use -n for numeric sort and -r for reversing order.\nsort -t -k &#x3C;filename>         # sorts the contents on specific sort key field starting from 1, using the field separator t.\nrev                           # reverse string characters (hello becomes olleh)\nchmod -options &#x3C;filename>     # lets you change the read, write, and execute permissions on your files (more infos: SUID, GUID)\ngzip &#x3C;filename>               # compresses files using gzip algorithm\ngunzip &#x3C;filename>             # uncompresses files compressed by gzip\ngzcat &#x3C;filename>              # lets you look at gzipped file without actually having to gunzip it\nlpr &#x3C;filename>                # prints the file\nlpq                           # checks out the printer queue\nlprm &#x3C;jobnumber>              # removes something from the printer queue\ngenscript                     # converts plain text files into postscript for printing and gives you some options for formatting\ndvips &#x3C;filename>              # prints .dvi files (i.e. files produced by LaTeX)\ngrep &#x3C;pattern> &#x3C;filenames>    # looks for the string in the files\ngrep -r &#x3C;pattern> &#x3C;dir>       # search recursively for pattern in directory\nhead -n file_name | tail +n   # Print nth line from file.\nhead -y lines.txt | tail +x   # want to display all the lines from x to y. This includes the xth and yth lines.\n\n\n##############################################################################\n# DIRECTORY COMMANDS\n##############################################################################\n\n\nmkdir &#x3C;dirname>               # makes a new directory\nrmdir &#x3C;dirname>               # remove an empty directory\nrmdir -rf &#x3C;dirname>           # remove a non-empty directory\nmv &#x3C;dir1> &#x3C;dir2>              # rename a directory from &#x3C;dir1> to &#x3C;dir2>\ncd                            # changes to home\ncd ..                         # changes to the parent directory\ncd &#x3C;dirname>                  # changes directory\ncp -r &#x3C;dir1> &#x3C;dir2>           # copy &#x3C;dir1> into &#x3C;dir2> including sub-directories\npwd                           # tells you where you currently are\ncd ~                          # changes to home.\ncd -                          # changes to previous working directory\n\n##############################################################################\n# SSH, SYSTEM INFO &#x26; NETWORK COMMANDS\n##############################################################################\n\n\nssh user@host            # connects to host as user\nssh -p &#x3C;port> user@host  # connects to host on specified port as user\nssh-copy-id user@host    # adds your ssh key to host for user to enable a keyed or passwordless login\n\nwhoami                   # returns your username\npasswd                   # lets you change your password\nquota -v                 # shows what your disk quota is\ndate                     # shows the current date and time\ncal                      # shows the month's calendar\nuptime                   # shows current uptime\nw                        # displays whois online\nfinger &#x3C;user>            # displays information about user\nuname -a                 # shows kernel information\nman &#x3C;command>            # shows the manual for specified command\ndf                       # shows disk usage\ndu &#x3C;filename>            # shows the disk usage of the files and directories in filename (du -s give only a total)\nlast &#x3C;yourUsername>      # lists your last logins\nps -u yourusername       # lists your processes\nkill &#x3C;PID>               # kills the processes with the ID you gave\nkillall &#x3C;processname>    # kill all processes with the name\ntop                      # displays your currently active processes\nlsof                     # lists open files\nbg                       # lists stopped or background jobs ; resume a stopped job in the background\nfg                       # brings the most recent job in the foreground\nfg &#x3C;job>                 # brings job to the foreground\n\nping &#x3C;host>              # pings host and outputs results\nwhois &#x3C;domain>           # gets whois information for domain\ndig &#x3C;domain>             # gets DNS information for domain\ndig -x &#x3C;host>            # reverses lookup host\nwget &#x3C;file>              # downloads file\n\ntime &#x3C;command>             # report time consumed by command execution\n\n\n##############################################################################\n# VARIABLES\n##############################################################################\n\n\nvarname=value                # defines a variable\nvarname=value command        # defines a variable to be in the environment of a particular subprocess\necho $varname                # checks a variable's value\necho $$                      # prints process ID of the current shell\necho $!                      # prints process ID of the most recently invoked background job\necho $?                      # displays the exit status of the last command\nread &#x3C;varname>               # reads a string from the input and assigns it to a variable\nread -p \"prompt\" &#x3C;varname>   # same as above but outputs a prompt to ask user for value \ncolumn -t &#x3C;filename>         # display info in pretty columns (often used with pipe)\nlet &#x3C;varname> = &#x3C;equation>   # performs mathematical calculation using operators like +, -, *, /, %\nexport VARNAME=value         # defines an environment variable (will be available in subprocesses)\n\narray[0]=valA                # how to define an array\narray[1]=valB\narray[2]=valC\narray=([2]=valC [0]=valA [1]=valB)  # another way\narray=(valA valB valC)              # and another\n\n${array[i]}                  # displays array's value for this index. If no index is supplied, array element 0 is assumed\n${#array[i]}                 # to find out the length of any element in the array\n${#array[@]}                 # to find out how many values there are in the array\n\ndeclare -a                   # the variables are treated as arrays\ndeclare -f                   # uses function names only\ndeclare -F                   # displays function names without definitions\ndeclare -i                   # the variables are treated as integers\ndeclare -r                   # makes the variables read-only\ndeclare -x                   # marks the variables for export via the environment\n\n${varname:-word}             # if varname exists and isn't null, return its value; otherwise return word\n${varname:word}              # if varname exists and isn't null, return its value; otherwise return word\n${varname:=word}             # if varname exists and isn't null, return its value; otherwise set it word and then return its value\n${varname:?message}          # if varname exists and isn't null, return its value; otherwise print varname, followed by message and abort the current command or script\n${varname:+word}             # if varname exists and isn't null, return word; otherwise return null\n${varname:offset:length}     # performs substring expansion. It returns the substring of $varname starting at offset and up to length characters\n\n${variable#pattern}          # if the pattern matches the beginning of the variable's value, delete the shortest part that matches and return the rest\n${variable##pattern}         # if the pattern matches the beginning of the variable's value, delete the longest part that matches and return the rest\n${variable%pattern}          # if the pattern matches the end of the variable's value, delete the shortest part that matches and return the rest\n${variable%%pattern}         # if the pattern matches the end of the variable's value, delete the longest part that matches and return the rest\n${variable/pattern/string}   # the longest match to pattern in variable is replaced by string. Only the first match is replaced\n${variable//pattern/string}  # the longest match to pattern in variable is replaced by string. All matches are replaced\n\n${#varname}                  # returns the length of the value of the variable as a character string\n\n*(patternlist)               # matches zero or more occurrences of the given patterns\n+(patternlist)               # matches one or more occurrences of the given patterns\n?(patternlist)               # matches zero or one occurrence of the given patterns\n@(patternlist)               # matches exactly one of the given patterns\n!(patternlist)               # matches anything except one of the given patterns\n\n$(UNIX command)              # command substitution: runs the command and returns standard output\n\n\n##############################################################################\n# FUNCTIONS\n##############################################################################\n\n\n# The function refers to passed arguments by position (as if they were positional parameters), that is, $1, $2, and so forth.\n# $@ is equal to \"$1\" \"$2\"... \"$N\", where N is the number of positional parameters. $# holds the number of positional parameters.\n\n\nfunction functname() {\n  shell commands\n}\n\nunset -f functname  # deletes a function definition\ndeclare -f          # displays all defined functions in your login session\n\n\n##############################################################################\n# FLOW CONTROLS\n##############################################################################\n\n\nstatement1 &#x26;&#x26; statement2  # and operator\nstatement1 || statement2  # or operator\n\n-a                        # and operator inside a test conditional expression\n-o                        # or operator inside a test conditional expression\n\n# STRINGS\n\nstr1 == str2               # str1 matches str2\nstr1 != str2               # str1 does not match str2\nstr1 &#x3C; str2                # str1 is less than str2 (alphabetically)\nstr1 > str2                # str1 is greater than str2 (alphabetically)\nstr1 \\> str2               # str1 is sorted after str2\nstr1 \\&#x3C; str2               # str1 is sorted before str2\n-n str1                    # str1 is not null (has length greater than 0)\n-z str1                    # str1 is null (has length 0)\n\n# FILES\n\n-a file                   # file exists or its compilation is successful\n-d file                   # file exists and is a directory\n-e file                   # file exists; same -a\n-f file                   # file exists and is a regular file (i.e., not a directory or other special type of file)\n-r file                   # you have read permission\n-s file                   # file exists and is not empty\n-w file                   # your have write permission\n-x file                   # you have execute permission on file, or directory search permission if it is a directory\n-N file                   # file was modified since it was last read\n-O file                   # you own file\n-G file                   # file's group ID matches yours (or one of yours, if you are in multiple groups)\nfile1 -nt file2           # file1 is newer than file2\nfile1 -ot file2           # file1 is older than file2\n\n# NUMBERS\n\n-lt                       # less than\n-le                       # less than or equal\n-eq                       # equal\n-ge                       # greater than or equal\n-gt                       # greater than\n-ne                       # not equal\n\nif condition\nthen\n  statements\n[elif condition\n  then statements...]\n[else\n  statements]\nfi\n\nfor x in {1..10}\ndo\n  statements\ndone\n\nfor name [in list]\ndo\n  statements that can use $name\ndone\n\nfor (( initialisation ; ending condition ; update ))\ndo\n  statements...\ndone\n\ncase expression in\n  pattern1 )\n    statements ;;\n  pattern2 )\n    statements ;;\nesac\n\nselect name [in list]\ndo\n  statements that can use $name\ndone\n\nwhile condition; do\n  statements\ndone\n\nuntil condition; do\n  statements\ndone\n\n##############################################################################\n# COMMAND-LINE PROCESSING CYCLE\n##############################################################################\n\n\n# The default order for command lookup is functions, followed by built-ins, with scripts and executables last.\n# There are three built-ins that you can use to override this order: `command`, `builtin` and `enable`.\n\ncommand  # removes alias and function lookup. Only built-ins and commands found in the search path are executed\nbuiltin  # looks up only built-in commands, ignoring functions and commands found in PATH\nenable   # enables and disables shell built-ins\n\neval     # takes arguments and run them through the command-line processing steps all over again\n\n\n##############################################################################\n# INPUT/OUTPUT REDIRECTORS\n##############################################################################\n\n\ncmd1|cmd2  # pipe; takes standard output of cmd1 as standard input to cmd2\n&#x3C; file     # takes standard input from file\n> file     # directs standard output to file\n>> file    # directs standard output to file; append to file if it already exists\n>|file     # forces standard output to file even if noclobber is set\nn>|file    # forces output to file from file descriptor n even if noclobber is set\n&#x3C;> file    # uses file as both standard input and standard output\nn&#x3C;>file    # uses file as both input and output for file descriptor n\nn>file     # directs file descriptor n to file\nn&#x3C;file     # takes file descriptor n from file\nn>>file    # directs file description n to file; append to file if it already exists\nn>&#x26;        # duplicates standard output to file descriptor n\nn&#x3C;&#x26;        # duplicates standard input from file descriptor n\nn>&#x26;m       # file descriptor n is made to be a copy of the output file descriptor\nn&#x3C;&#x26;m       # file descriptor n is made to be a copy of the input file descriptor\n&#x26;>file     # directs standard output and standard error to file\n&#x3C;&#x26;-        # closes the standard input\n>&#x26;-        # closes the standard output\nn>&#x26;-       # closes the ouput from file descriptor n\nn&#x3C;&#x26;-       # closes the input from file descripor n\n\n|tee &#x3C;file># output command to both terminal and a file (-a to append to file)\n\n\n##############################################################################\n# PROCESS HANDLING\n##############################################################################\n\n\n# To suspend a job, type CTRL+Z while it is running. You can also suspend a job with CTRL+Y.\n# This is slightly different from CTRL+Z in that the process is only stopped when it attempts to read input from terminal.\n# Of course, to interrupt a job, type CTRL+C.\n\nmyCommand &#x26;  # runs job in the background and prompts back the shell\n\njobs         # lists all jobs (use with -l to see associated PID)\n\nfg           # brings a background job into the foreground\nfg %+        # brings most recently invoked background job\nfg %-        # brings second most recently invoked background job\nfg %N        # brings job number N\nfg %string   # brings job whose command begins with string\nfg %?string  # brings job whose command contains string\n\nkill -l               # returns a list of all signals on the system, by name and number\nkill PID              # terminates process with specified PID\nkill -s SIGKILL 4500  # sends a signal to force or terminate the process\nkill -15 913          # Ending PID 913 process with signal 15 (TERM)\nkill %1               # Where %1 is the number of job as read from 'jobs' command.\n\nps           # prints a line of information about the current running login shell and any processes running under it\nps -a        # selects all processes with a tty except session leaders\n\ntrap cmd sig1 sig2  # executes a command when a signal is received by the script\ntrap \"\" sig1 sig2   # ignores that signals\ntrap - sig1 sig2    # resets the action taken when the signal is received to the default\n\ndisown &#x3C;PID|JID>    # removes the process from the list of jobs\n\nwait                # waits until all background jobs have finished\nsleep &#x3C;number>      # wait # of seconds before continuing\n\npv                  # display progress bar for data handling commands. often used with pipe like |pv\nyes                 # give yes response everytime an input is requested from script/process\n\n\n##############################################################################\n# TIPS &#x26; TRICKS\n##############################################################################\n\n\n# set an alias\ncd; nano .bash_profile\n> alias gentlenode='ssh admin@gentlenode.com -p 3404'  # add your alias in .bash_profile\n\n# to quickly go to a specific directory\ncd; nano .bashrc\n> shopt -s cdable_vars\n> export websites=\"/Users/mac/Documents/websites\"\n\nsource .bashrc\ncd $websites\n\n\n##############################################################################\n# DEBUGGING SHELL PROGRAMS\n##############################################################################\n\n\nbash -n scriptname  # don't run commands; check for syntax errors only\nset -o noexec       # alternative (set option in script)\n\nbash -v scriptname  # echo commands before running them\nset -o verbose      # alternative (set option in script)\n\nbash -x scriptname  # echo commands after command-line processing\nset -o xtrace       # alternative (set option in script)\n\ntrap 'echo $varname' EXIT  # useful when you want to print out the values of variables at the point that your script exits\n\nfunction errtrap {\n  es=$?\n  echo \"ERROR line $1: Command exited with status $es.\"\n}\n\ntrap 'errtrap $LINENO' ERR  # is run whenever a command in the surrounding script or function exits with non-zero status\n\nfunction dbgtrap {\n  echo \"badvar is $badvar\"\n}\n\ntrap dbgtrap DEBUG  # causes the trap code to be executed before every statement in a function or script\n# ...section of code in which the problem occurs...\ntrap - DEBUG  # turn off the DEBUG trap\n\nfunction returntrap {\n  echo \"A return occurred\"\n}\n\ntrap returntrap RETURN  # is executed each time a shell function or a script executed with the . or source commands finishes executing\n\n##############################################################################\n# COLORS AND BACKGROUNDS \n##############################################################################\n# note: \\e or \\x1B also work instead of \\033 \n# Reset\nColor_Off='\\033[0m' # Text Reset\n\n# Regular Colors\nBlack='\\033[0;30m'  # Black\nRed='\\033[0;31m'    # Red\nGreen='\\033[0;32m'  # Green\nYellow='\\033[0;33m' # Yellow\nBlue='\\033[0;34m'   # Blue\nPurple='\\033[0;35m' # Purple\nCyan='\\033[0;36m'   # Cyan\nWhite='\\033[0;97m'  # White\n\n# Additional colors\nLGrey='\\033[0;37m'  # Ligth Gray\nDGrey='\\033[0;90m'  # Dark Gray\nLRed='\\033[0;91m'   # Ligth Red\nLGreen='\\033[0;92m' # Ligth Green\nLYellow='\\033[0;93m'# Ligth Yellow\nLBlue='\\033[0;94m'  # Ligth Blue\nLPurple='\\033[0;95m'# Light Purple\nLCyan='\\033[0;96m'  # Ligth Cyan\n\n\n# Bold\nBBlack='\\033[1;30m' # Black\nBRed='\\033[1;31m'   # Red\nBGreen='\\033[1;32m' # Green\nBYellow='\\033[1;33m'# Yellow\nBBlue='\\033[1;34m'  # Blue\nBPurple='\\033[1;35m'# Purple\nBCyan='\\033[1;36m'  # Cyan\nBWhite='\\033[1;37m' # White\n\n# Underline\nUBlack='\\033[4;30m' # Black\nURed='\\033[4;31m'   # Red\nUGreen='\\033[4;32m' # Green\nUYellow='\\033[4;33m'# Yellow\nUBlue='\\033[4;34m'  # Blue\nUPurple='\\033[4;35m'# Purple\nUCyan='\\033[4;36m'  # Cyan\nUWhite='\\033[4;37m' # White\n\n# Background\nOn_Black='\\033[40m' # Black\nOn_Red='\\033[41m'   # Red\nOn_Green='\\033[42m' # Green\nOn_Yellow='\\033[43m'# Yellow\nOn_Blue='\\033[44m'  # Blue\nOn_Purple='\\033[45m'# Purple\nOn_Cyan='\\033[46m'  # Cyan\nOn_White='\\033[47m' # White\n\n# Example of usage\necho -e \"${Green}This is GREEN text${Color_Off} and normal text\"\necho -e \"${Red}${On_White}This is Red test on White background${Color_Off}\" \n# option -e is mandatory, it enable interpretation of backslash escapes\nprintf \"${Red} This is red \\n\"\n</code></pre>\n<hr>"},{"url":"/review/","relativePath":"review.md","relativeDir":"","base":"review.md","name":"review","frontmatter":{"title":"review","sections":[],"seo":{"title":"review","description":"","robots":[],"extra":[],"type":"stackbit_page_meta"},"template":"advanced"},"html":"<div id=\"search\"></div>\n<h2>description: Review</h2>\n<h1>Review-Of-Previous-Concepts</h1>\n<h3>Review of Concepts</h3>\n<h3>Running JS Locally Concepts</h3>\n<ul>\n<li>\n<p>Match the commands <code>ls</code>, <code>cd</code>, <code>pwd</code> to their descriptions</p>\n<ul>\n<li><code>ls</code> lists contents of current directory</li>\n<li>\n<p><code>cd</code> changes current directory</p>\n<ul>\n<li><code>cd ..</code> takes you up one level</li>\n<li><code>cd</code> alone takes you back home</li>\n</ul>\n</li>\n<li><code>pwd</code> returns current directory</li>\n</ul>\n</li>\n<li>Given a folder structure diagram, a list of 'cd (path)' commands and target files, match the paths to the target files.</li>\n<li>Use VSCode to create a folder. Within the folder create a .js file containing <code>console.log('hello new world');</code> and save it.</li>\n<li>Use node to execute a JavaScript file in the terminal</li>\n</ul>\n<h3>Plain Old JS Object Lesson Concepts</h3>\n<ul>\n<li>\n<p>Label variables as either Primitive vs. Reference</p>\n<ul>\n<li>\n<p>primitives: strings, booleans, numbers, null and undefined</p>\n<ul>\n<li>primitives are immutable</li>\n</ul>\n</li>\n<li>\n<p>refereces: objects (including arrays)</p>\n<ul>\n<li>references are mutable</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Identify when to use <code>.</code> vs <code>[]</code> when accessing values of an object</p>\n<ul>\n<li>\n<p>dot syntax <code>object.key</code></p>\n<ul>\n<li>easier to read</li>\n<li>easier to write</li>\n<li>cannot use variables as keys</li>\n<li>keys cannot begin with a number</li>\n</ul>\n</li>\n<li>\n<p>bracket notation <code>object[\"key]</code></p>\n<ul>\n<li>allows variables as keys</li>\n<li>strings that start with numbers can be use as keys</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Write an object literal with a variable key using interpolation</p>\n<ul>\n<li>\n<p>put it in brackets to access the value of the variable, rather than just make the value that string</p>\n<pre><code class=\"language-javascript\">let a = 'b';\nlet obj = { a: 'letter_a', [a]: 'letter b' };\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>Use the <code>obj[key] !== undefined</code> pattern to check if a given variable that contains a key exists in an object</p>\n<ul>\n<li>can also use <code>(key in object)</code> syntax interchangeably (returns a boolean)</li>\n</ul>\n</li>\n<li>\n<p>Utilize Object.keys and Object.values in a function</p>\n<ul>\n<li><code>Object.keys(obj)</code> returns an array of all the keys in <code>obj</code></li>\n<li><code>Object.values(obj)</code> returns an array of the values in <code>obj</code></li>\n</ul>\n</li>\n<li>\n<p>Iterate through an object using a <code>for in</code> loop</p>\n<pre><code class=\"language-javascript\">let printValues = function (obj) {\n    for (let key in obj) {\n        let value = obj[key];\n        console.log(value);\n    }\n};\n</code></pre>\n</li>\n<li>\n<p>Define a function that utilizes <code>...rest</code> syntax to accept an arbitrary number of arguments</p>\n<ul>\n<li><code>...rest</code> syntax will store all additional arguments in an array</li>\n<li>\n<p>array will be empty if there are no additional arguments</p>\n<pre><code class=\"language-javascript\">let myFunction = function (str, ...strs) {\n    console.log('The first string is ' + str);\n    console.log('The rest of the strings are:');\n    strs.forEach(function (str) {\n        console.log(str);\n    });\n};\n</code></pre>\n</li>\n</ul>\n</li>\n</ul>\n<h3></h3>\n<ul>\n<li>\n<p>Use <code>...spread</code> syntax for Object literals and Array literals</p>\n<pre><code class=\"language-javascript\">let arr1 = ['a', 'b', 'c'];\nlet longer = [...arr1, 'd', 'e']; // [\"a\", \"b\", \"c\", \"d\", \"e\"]\n// without spread syntax, this would give you a nested array\nlet withoutRest = [arr1, 'd', 'e']; // [[\"a\", \"b\", \"c\"], \"d\", \"e\"]\n</code></pre>\n</li>\n<li>\n<p>Destructure an array to reference specific elements</p>\n<p>```javascript</p>\n<p>let array = [35,9];</p>\n<p>let [firstEl, secondEl] = array;</p>\n<p>console.log(firstEl); // => 35</p>\n<p>console.log(secondEl); // => 9</p>\n</li>\n</ul>\n<p>// can also destructure using ... syntax let array = [35,9,14]; let [head, ...tail] = array; console.log(head); // => 35 console.log(tail); // => [9, 14]</p>\n<pre><code class=\"language-javascript\">- Destructure an object to reference specific values\n   - if you want to use variable names that don't match the keys, you can use aliasing\n      - `let { oldkeyname: newkeyname } = object`\n   - rule of thumb—only destructure values from objects that are two levels deep\n```javascript\nlet obj = {\n   name: \"Wilfred\",\n   appearance: [\"short\", \"mustache\"],\n   favorites: {\n      color: \"mauve\",\n      food: \"spaghetti squash\",\n      number: 3\n   }\n}\n// with variable names that match keys\nlet { name, appearance } = obj;\nconsole.log(name); // \"Wilfred\"\nconsole.log(appearance); // [\"short\", \"mustache\"]\n\n// with new variable names (aliasing)\nlet {name: myName, appearance: myAppearance} = obj;\n\nconsole.log(myName); // \"Wilfred\"\nconsole.log(myAppearance); // [\"short\", \"mustache\"]\n\n// in a function call\nlet sayHello = function({name}) {\nconsole.log(\"Hello, \" + name); // \"Hello Wilfred\"\n}\n\n// nested objects + aliasing\nlet { favorites: {color, food: vegetable} } = obj;\nconsole.log(color, vegetable); //=> mauve spaghetti squash\n</code></pre>\n<ul>\n<li>\n<p>Write a function that accepts a array as an argument and returns an object representing the count of each character in the array</p>\n<pre><code class=\"language-javascript\">//\nlet elementCounts = function (array) {\n    let obj = {};\n    array.forEach(function (el) {\n        if (el in obj) obj[el] += 1;\n        else obj[el] = 1;\n    });\n    return obj;\n};\nconsole.log(elementCounts(['e', 'f', 'g', 'f'])); // => Object {e: 1, f: 2, g: 1}\n</code></pre>\n</li>\n</ul>\n<h3>Callbacks Lesson Concepts</h3>\n<ul>\n<li>\n<p>Given multiple plausible reasons, identify why functions are called \"First Class Objects\" in JavaScript.</p>\n<ul>\n<li>they can be stored in variables, passed as arguments to other functions, and serve as return value for a function</li>\n<li>supports same basic operations as other types (strings, bools, numbers)</li>\n<li>higher-order functions take functions as arguments or return functions as values</li>\n</ul>\n</li>\n<li>\n<p>Given a code snippet containing an anonymous callback, a named callback, and multiple <code>console.log</code>s, predict what will be printed</p>\n<ul>\n<li>what is this referring to?</li>\n</ul>\n</li>\n<li>Write a function that takes in a value and two callbacks. The function should return the result of the callback that is greater.</li>\n</ul>\n<pre><code class=\"language-javascript\">let greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n</code></pre>\n<p>// shorter version let greaterCB = function(val, callback1, callback2) { return Math.max(callback1(val), callback2(val)); } // even shorter, cause why not let greaterCB = (val, cb1, cb2) => Math.max(cb1(val), cb2(val));</p>\n<pre><code class=\"language-javascript\">- Write a function, myMap, that takes in an array and a callback as arguments. The function should mimic the behavior of `Array#map`.\n```javascript\nlet myMap = function(array, callback) {\n   let newArr = [];\n   for (let i = 0; i &#x3C; array.length; i ++) {\n      mapped = callback(array[i], i, array);\n      newArr.push(mapped);\n   }\n   return newArr;\n}\nconsole.log( myMap([16,25,36], Math.sqrt)); // => [4, 5, 6];\n\nlet myMapArrow = (array, callback) => {\n   let newArr = [];\n   array.forEach( (ele, ind, array) => {\n      newArr.push(callback(ele, ind, array));\n   })\n   return newArr;\n}\nconsole.log(myMapArrow([16,25,36], Math.sqrt)); // => [4, 5, 6];\n</code></pre>\n<ul>\n<li>\n<p>Write a function, myFilter, that takes in an array and a callback as arguments. The function should mimic the behavior of <code>Array#filter</code>.</p>\n<pre><code class=\"language-javascript\">let myFilter = function (array, callback) {\n    let filtered = [];\n    for (let i = 0; i &#x3C; array.length; i++) {\n        if (callback(array[i])) {\n            filtered.push(array[i], i, array);\n        }\n    }\n};\n</code></pre>\n</li>\n<li>\n<p>Write a function, myEvery, that takes in an array and a callback as arguments. The function should mimic the behavior of <code>Array#every</code>.</p>\n<pre><code class=\"language-javascript\">let myEvery = function (array, callback) {\n    for (let i = 0; i &#x3C; array.length; i++) {\n        if (!callback(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n};\n// with arrow function syntax\nlet myEvery = (array, callback) => {\n    for (let i = 0; i &#x3C; array.length; i++) {\n        if (!callback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n</code></pre>\n</li>\n</ul>\n<h3>Scope Lesson Concepts</h3>\n<ul>\n<li>\n<p>Identify the difference between <code>const</code>, <code>let</code>, and <code>var</code> declarations</p>\n<ul>\n<li><code>const</code> - cannot reassign variable, scoped to block</li>\n<li><code>let</code> - can reassign variable, scoped to block</li>\n<li><code>var</code> - outdated, may or may not be reassigned, scoped to function. can be not just reassigned, but also redeclared!</li>\n<li>a variable will always evaluate to the value it contains regardless of how it was declared</li>\n</ul>\n</li>\n<li>\n<p>Explain the difference between <code>const</code>, <code>let</code>, and <code>var</code> declarations</p>\n<ul>\n<li>\n<p><code>var</code> is function scoped—so if you declare it anywhere in a function, the declaration (but not assignment) is \"hoisted\"</p>\n<ul>\n<li>so it will exist in memory as \"undefined\" which is bad and unpredictable</li>\n</ul>\n</li>\n<li><code>var</code> will also allow you to redeclare a variable, while <code>let</code> or <code>const</code> will raise a syntax error. you shouldn't be able to do that!</li>\n<li><code>const</code> won't let you reassign a variable, but if it points to a mutable object, you will still be able to change the value by mutating the object</li>\n<li>block-scoped variables allow new variables with the same name in new scopes</li>\n<li>block-scoped still performs hoisting of all variables within the block, but it doesn't initialize to the value of <code>undefined</code> like <code>var</code> does, so it throws a specific reference error if you try to access the value before it has been declared</li>\n<li>\n<p>if you do not use <code>var</code> or <code>let</code> or <code>const</code> when initializing, it will be declared as global—THIS IS BAD</p>\n<ul>\n<li>if you assign a value without a declaration, it exists in the global scope (so then it would be accessible by all outer scopes, so bad). however, there's no hoisting, so it doesn't exist in the scope until after the line is run</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining</p>\n<ul>\n<li>scope of a program means the set of variables that are available for use within the program</li>\n<li>\n<p>global scope is represented by the <code>window</code> object in the browser and the <code>global</code> object in Node.js</p>\n<ul>\n<li>global variables are available everywhere, and so increase the risk of name collisions</li>\n</ul>\n</li>\n<li>\n<p>local scope is the set of variables available for use within the function</p>\n<ul>\n<li>when we enter a function, we enter a new scope</li>\n<li>includes functions arguments, local variables declared inside function, and any variables that were already declared when the function is defined (hmm about that last one)</li>\n</ul>\n</li>\n<li>for blocks (denoted by curly braces <code>{}</code>, as in conditionals or <code>for</code> loops), variables can be block scoped</li>\n<li>\n<p>inner scope does not have access to variables in the outer scope</p>\n<ul>\n<li>scope chaining—if a given variable is not found in immediate scope, javascript will search all accessible outer scopes until variable is found</li>\n<li>so an inner scope can access outer scope variables</li>\n<li>but an outer scope can never access inner scope variables</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Define an arrow function</p>\n<p>```javascript</p>\n<p>let arrowFunction = (param1, param2) => {</p>\n<p>let sum = param1 + param2;</p>\n<p>return sum;</p>\n<p>}</p>\n</li>\n</ul>\n<p>// with 1 param you can remove parens around parameters let arrowFunction = param => { param += 1; return param; }</p>\n<p>// if your return statement is one line, you can use implied return let arrowFunction = param => param + 1;</p>\n<p>// you don't have to assign to variable, can be anonymous // if you never need to use it again param => param + 1;</p>\n<p>```</p>\n<ul>\n<li>\n<p>Given an arrow function, deduce the value of <code>this</code> without executing the code</p>\n<ul>\n<li>arrow functions are automatically bound to the context they were declared in</li>\n<li>unlike regular function which use the context they are invoked in (unless they have been bound using <code>Function#bind</code>)</li>\n<li>if you implement an arrow function as a method in an object the context it will be bound to is NOT the object itself, but the global context</li>\n<li>\n<p>so you can't use an arrow function to define a method directly</p>\n<p>```javascript</p>\n<p>let obj = {</p>\n<p>name: \"my object\",</p>\n<p>unboundFunc: function () {</p>\n<p>return this.name;</p>\n<p>// this function will be able to be called on different objects</p>\n<p>},</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3></h3>\n<p>boundToGlobal: () => { return this.name; // this function, no matter how you call it, will be called // on the global object, and it cannot be rebound // this is because it was defined using arrow syntax },</p>\n<pre><code class=\"language-javascript\">makeFuncBoundToObj: function () {\n    return () => {\n        return this.name;\n    }\n    // this function will return a function that will be bound\n    // to the object where we call the outer method\n    // because the arrow syntax is nested inside one of this\n    // function's methods, it cannot be rebound\n},\n\nmakeUnboundFunc: function () {\n    return function () {\n        return this.name;\n    }\n    //this function will return a function that will still be unbound\n},\n\nimmediatelyInvokedFunc: function () {\n    return this.name;\n}(), // this property will be set to the return value of this anonymous function,\n// which is invoked during the object definition;\n// basically, it's a way to check the context inside of an object, at this moment\n\ninnerObj: {\n    name: \"inner object\",\n    innerArrowFunc: () =>  {\n        return this.name;\n    } // the context inside a nested object is not the parent, it's still\n    // the global object. entering an object definition doesn't change the context\n},\n\n\nlet otherObj = { name: \"my other object\" }\n// call unboundFunc on obj, we get \"my object\" console.log(\"unboundFunc: \", obj.unboundFunc()); // => \"my object\" // assign unboundFunc to a variable and call it let newFunc = obj.unboundFunc; // this newFunc will default to being called on global object console.log(\"newFunc: \",newFunc()); // => undefined // but you could bind it directly to a different object if you wanted console.log(\"newFunc: \", newFunc.bind(otherObj)()); // \"my other object\"\n// meanwhile, obj.boundToGlobal will only ever be called on global object console.log(\"boundToGlobal: \", obj.boundToGlobal()); //=> undefined let newBoundFunc = obj.boundToGlobal; console.log(\"newBoundFunc: \", newBoundFunc()); // => undefined // even if you try to directly bind to another object, it won't work! console.log(\"newBoundFunc: \", newBoundFunc.bind(otherObj)()); // => undefined\n// let's make a new function that will always be bound to the context // where we call our function maker let boundFunc = obj.makeFuncBoundToObj();// note that we're invoking, not just assigning console.log(\"boundFunc: \", boundFunc()); // => \"my object\" // we can't rebind this function console.log(\"boundFunc: \", boundFunc.bind(otherObj)()) // =>\"my object\"\n// but if I call makeFuncBoundToObj on another context // the new bound function is stuck with that other context let boundToOther = obj.makeFuncBoundToObj.bind(otherObj)(); console.log(\"boundToOther: \", boundToOther()); // => \"my other object\" console.log(\"boundToOther: \", boundToOther.bind(obj)()) // \"my other object\"\n// the return value of my immediately invoked function // shows that the context inside of the object is the // global object, not the object